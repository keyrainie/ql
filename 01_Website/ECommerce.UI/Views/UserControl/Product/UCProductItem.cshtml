@using ECommerce.Entity.Product
@using ECommerce.Facade.Product
@using ECommerce.Facade.Product.Models
@using ECommerce.Enums
@using ECommerce.Utility;
@model ProductCellInfoView
@{
    string Title = StringUtility.RemoveHtmlTag(this.Model.ProductInfo.ProductTitle);
    
    }
<!--图片-->
<div class="img">
    <a href="@BuildUrl("ProductDetail", Model.ProductInfo.ID)">
        <img alt="" title="@Title" src="@ProductFacade.BuildProductImage(Model.ProductImageSize, Model.ProductInfo.DefaultImage)">
    </a>
</div>
<!--商品标题-->
<p class="tit">
    <a title="@Title"  href="@BuildUrl("ProductDetail", Model.ProductInfo.ID)">@StringUtility.TruncateString(StringUtility.RemoveHtmlTag(Model.ProductInfo.ProductTitle), 50, "..")</a>
</p>
@if (Model.IsShowPromotion && string.IsNullOrEmpty(Model.ProductInfo.PromotionTitle))
{ 
    <p class="promtxt">@StringUtility.TruncateString(StringUtility.RemoveHtmlTag(Model.ProductInfo.PromotionTitle), 50, "..")</p>
}
<!--商品价格-->

@if (Model.ProductInfo.PointType != ProductPayType.PointPayOnly)
{ 
<p>
    <span class="price">
        @{
    decimal price = Model.ProductInfo.CurrentPrice + Model.ProductInfo.CashRebate;
        }

        @price.ToString("f2");
    </span>
    @if (Model.IsShowBasicPrice)
    {
        bool flag = Model.ProductInfo.CurrentPrice + Model.ProductInfo.CashRebate < Model.ProductInfo.MarketPrice;
        if (flag)
        { 
        <span class="price_old">
            <s style="display: inline-block; margin-left: -10px; width: 10px;"></s>
            @Model.ProductInfo.MarketPrice.ToString("f2");
        </span>
        }
    }
</p>
}
else
{ 
<p class="exscore">
        @{
    int p = (int)Decimal.Round(this.Model.ProductInfo.CurrentPrice * Convert.ToDecimal(ECommerce.Entity.ConstValue.PointExhangeRate), 0);
        }
    <strong>
        @p
    </strong>&nbsp;<span class="graydk">积分兑换</span>
</p>
    
}

