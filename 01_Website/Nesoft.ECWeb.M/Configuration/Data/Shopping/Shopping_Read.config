<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <!--Pipeline根据商品编号获取商品基础信息-->
  <dataCommand name="Pipeline_GetProductBasicInfoBySysNo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
			SELECT prod.SysNo AS ID    
            ,prod.ProductID AS Code    
            ,prod.ProductMode    
            ,prod.ProductType    
            ,prod.ProductName   
            ,prod.ProductDesc    
            ,prod.ProductDescLong    
            ,prod.Performance    
            ,prod.Warranty    
            ,prod.PackageList    
            ,prod.Weight    
            ,prod.C3SysNo AS CategoryID    
            ,cat3.C3Name AS CategoryName    
            ,prod.ManufacturerSysNo AS ManufacturerID    
            ,prod.ProductLink    
            ,prod.MultiPicNum    
            ,prod.Attention    
            ,prod.Note    
            ,prod.Status  AS ProductStatus   
            ,prod.BriefName    
            ,prod.IsConsign    
            ,prod.OwnerList    
            ,prod.PromotionTitle    
            ,prod.ProductTitle    
            ,prod.DefaultImage    
            ,prod.BrandSysNo AS BrandID    
            ,prod.IsHaveValidGift    
            ,prod.PMUserSysNo    
            ,prod.LanguageCode    
            ,prod.CompanyCode    
            ,prod.StoreCompanyCode    
            ,prod.ProductPhotoDesc    
            ,prod.MerchantSysNo AS VendorSysno  
            ,prod.ProductCommonInfoSysno
            ,prod.[Weight]
            ,b.ProductGroupSysno 
            --,PEI.ProductName_EN
            --,PEI.Specifications
            --,PEI.Functions
            --,PEI.Component
            --,PEI.Origin
            --,PEI.Purpose
            --,PEI.TaxUnit
            --,PEI.ApplyUnit
            --,PEI.TaxQty
            --,PEI.GrossWeight
            --,PEI.BizType
            --,PEI.ApplyDistrict
            --,PEI.Product_SKUNO
            --,PEI.Supplies_Serial_No
            --,PEI.ApplyQty
            --,PEI.SuttleWeight
            --,PEI.Note
            --,PEI.Supplies_Serial_No_1
            --,PEI.TariffCode
            --,PEI.TariffRate
            --,PEI.EntryCode
            --,PEI.StoreType AS ProductStoreType
            --,PEI.Remark1
            --,PEI.Remark2
            --,PEI.Remark3
            --,PEI.Remark4
            --,PEI.ProductOthterName
            --,PEI.ManufactureDate
            --,PEI.SourceCompany
            --,CASE WHEN PEI.Origin='JP' THEN '日本'
            --      WHEN PEI.Origin='HK' THEN '香港'
            --      WHEN PEI.Origin='CH' THEN '中国'
            --      ELSE '' END  AS  OriginCountryName
            --,ISNULL(PEI.RealLeadTimeDays, PEI.DefaultLeadTimeDays) AS [ProductEntryInfo.LeadTimeDays]
            ,V.VendorName AS [VendorInfo.VendorName]
        FROM IPP3.dbo.Product AS prod WITH (NOLOCK)
        INNER JOIN OverseaContentManagement.dbo.ProductCommonInfo AS b WITH (NOLOCK)     
            ON prod.ProductCommonInfoSysno = b.SysNo     
        INNER JOIN IPP3.dbo.Category3 AS cat3 WITH (NOLOCK)     
            ON prod.C3SysNo = cat3.SysNo     
        --LEFT JOIN IPP3.dbo.Product_EntryInfo AS PEI WITH (NOLOCK)  
        --    ON prod.SysNo=PEI.ProductSysNo
        LEFT JOIN IPP3.dbo.Vendor AS V WITH (NOLOCK)
            ON prod.MerchantSysNo = V.SysNo
        WHERE prod.SysNo=@ProductSysNo
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ProductSysNo"/>
    </parameters>
  </dataCommand>
  <!--Pipeline根据商品组编号获取商品分组属性列表-->
  <dataCommand name="Pipeline_GetProductSplitGroupPropertyList" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
			SELECT PCI.ProductGroupSysno
	          ,PCIP.PropertySysno
	          ,PIMP.[PropertyDescription]
	          ,PCIP.ValueSysno
	          ,PIMPV.[ValueDescription]
          FROM IPP3.dbo.Product(NOLOCK) P
          INNER JOIN [OverseaContentManagement].dbo.ProductCommonInfo(NOLOCK) PCI
          ON P.ProductCommonInfoSysno = PCI.SysNo
          INNER JOIN [OverseaContentManagement].dbo.ProductCommonInfo_Property(NOLOCK) PCIP
          ON PCI.CommonSKUNumber = PCIP.CommonSKUNumber
          LEFT JOIN [PMDB].[dbo].[PIM_Property](NOLOCK) PIMP
          ON PCIP.PropertySysno = PIMP.SysNo
          LEFT JOIN [PMDB].[dbo].[PIM_PropertyValue](NOLOCK) PIMPV
          ON PCIP.ValueSysno = PIMPV.SysNo
          LEFT JOIN [PMDB].[dbo].[PIM_CategoryTemplate](NOLOCK) PIMCT
          ON P.C3SysNo = PIMCT.CategorySysNo
          LEFT JOIN [PMDB].[dbo].[PIM_CategoryTemplateProperty](NOLOCK) PIMCTP
          ON PIMCT.SysNo = PIMCTP.CategoryTemplateSysNo AND PCIP.PropertySysno = PIMCTP.PropertySysNo
          WHERE PIMCTP.[Type] = 'G' AND PIMPV.[ValueDescription] IS NOT NULL AND P.SysNo = @ProductSysno
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ProductSysno"/>
    </parameters>
  </dataCommand>

  <!--Pipeline根据商品编号获取商品入境报关扩展信息-->
  <dataCommand name="Pipeline_GetProductEntryInfoBySysNo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT [SysNo]
      ,[ProductSysNo]
      ,[ProductName_EN]
      ,[Specifications]
      ,[Functions]
      ,[Component]
      ,[Origin]
      ,[Purpose]
      ,[TaxQty]
      ,[TaxUnit]
      ,[ApplyUnit]
      ,[GrossWeight]
      ,[BizType]
      ,[ApplyDistrict]
      ,[Product_SKUNO]
      ,[Supplies_Serial_No]
      ,[ApplyQty]
      ,[SuttleWeight]
      ,[Note]
      ,[Supplies_Serial_No_1]
      ,[TariffRate]
      ,[TariffCode]
      ,[StoreType] AS [ProductStoreType]
      ,[EntryCode]
      ,[Remark1]
      ,[Remark2]
      ,[Remark3]
      ,[Remark4]
      ,[ProductOthterName]
      ,[ManufactureDate]
      ,[SourceCompany]
      ,ISNULL(RealLeadTimeDays, DefaultLeadTimeDays) AS [LeadTimeDays]
  FROM [IPP3].[dbo].[Product_EntryInfo] WITH(NOLOCK)
  WHERE ProductSysNo = @ProductSysNo
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ProductSysNo"/>
    </parameters>
  </dataCommand>

  <!--Pipeline根据商品编号获取商品入境报关扩展信息-->
  <dataCommand name="Pipeline_GetProductEntryInfoList" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT [SysNo]
      ,[ProductSysNo]
      ,[ProductName_EN]
      ,[Specifications]
      ,[Functions]
      ,[Component]
      ,[Origin]
      ,[Purpose]
      ,[TaxQty]
      ,[TaxUnit]
      ,[ApplyUnit]
      ,[GrossWeight]
      ,[BizType]
      ,[ApplyDistrict]
      ,[Product_SKUNO]
      ,[Supplies_Serial_No]
      ,[ApplyQty]
      ,[SuttleWeight]
      ,[Note]
      ,[Supplies_Serial_No_1]
      ,[TariffRate]
      ,[TariffCode]
      ,[StoreType]  AS [ProductStoreType]
      ,[EntryCode]
      ,[Remark1]
      ,[Remark2]
      ,[Remark3]
      ,[Remark4]
      ,[ProductOthterName]
      ,[ManufactureDate]
      ,[SourceCompany]
  FROM [IPP3].[dbo].[Product_EntryInfo] WITH(NOLOCK)
  #StrWhere#
      ]]>
    </commandText>
  </dataCommand>


  <!--Pipeline根据支付方式编号获取支付方式-->
  <dataCommand name="Pipeline_GetPayTypeBySysNo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT [SysNo] AS PayTypeID
      ,[PayTypeID] AS PayTypeCode
      ,[PayTypeName]
      ,[PayTypeDesc]
      ,[Period]
      ,[PaymentPage]
      ,[PayRate]
      ,[IsNet]
      ,[IsPayWhenRecv]
      ,[IsOnlineShow]
      ,[NetPayType]
  FROM [IPP3].[dbo].[PayType] WITH(NOLOCK)
  WHERE SysNo = @SysNo
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@SysNo"/>
    </parameters>
  </dataCommand>

  <!--Pipeline根据区域编号取得区域信息-->
  <dataCommand name="Pipeline_GetAreaBySysNo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT [SysNo]
      ,[ProvinceSysNo]
      ,[ProvinceName]
      ,[CitySysNo]
      ,[CityName]
      ,[DistrictName]
      ,[Status]
  FROM [IPP3].[dbo].[Area] WITH(NOLOCK)
  WHERE SysNo = @SysNo
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@SysNo"/>
    </parameters>
  </dataCommand>

  <!--Pipeline取得所有的配送方式-->
  <dataCommand name="Pipeline_GetAllShippingTypeList" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT A.[SysNo] AS ShipTypeSysNo
      ,A.[SysNo] AS [ShipTypeID]
      ,[ShipTypeName]
      ,[ShipTypeDesc]
      ,[Provider]
      ,[OnlyForStockSysNo]
      ,[IsGetBySelf]
      ,[PremiumRate]
      ,[StoreType]
      ,[OrderNumber] AS [Priority]
      ,B.Address
      ,Convert(bit,isnull([IsPayWhenRecv],0)) AS IsPayWhenRecv
  FROM [IPP3].[dbo].[ShipType] A WITH(NOLOCK)
  LEFT JOIN [IPP3].[dbo].[ShipType_Ex] B  WITH(NOLOCK)
   ON a.Sysno= B.ShipTypeSysno
  WHERE IsOnlineShow = 1
      ]]>
    </commandText>
  </dataCommand>

  <!--Pipeline获取商家对应仓库的配送方式-->
  <dataCommand name="Pipeline_GetMerchantStockShippingType" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
SELECT TOP 1 StockShipping.ShipTypeSysNo,
	Shipping.ShipTypeID,
	Shipping.ShipTypeName,
	Shipping.ShipTypeDesc,
	Shipping.Provider,
	Shipping.OnlyForStockSysNo,
	Shipping.IsGetBySelf,
	Shipping.PremiumRate,
	Shipping.StoreType,
	Shipping.[OrderNumber] AS [Priority]
FROM [ECStore].[dbo].[StockShipType](NOLOCK) StockShipping
	LEFT JOIN IPP3.dbo.ShipType(NOLOCK) Shipping
	ON StockShipping.ShipTypeSysNo = Shipping.SysNo
WHERE SellerSysNo = @SellerSysNo AND StockSysNo = @StockSysNo
ORDER BY ISNULL(EditDate, DATEADD(YEAR, -10, GETDATE())) DESC, InDate DESC
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@SellerSysNo" />
      <param dbType="Int32" name="@StockSysNo" />
    </parameters>
  </dataCommand>

  <dataCommand name="Checkout_GetStockShippingType" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
IF (@SellerSysNo = 1)
BEGIN
SELECT   
	Shipping.ShipTypeName,
	Shipping.SysNo as ShipTypeSysNo,
	Shipping.ShipTypeID,
	Shipping.ShipTypeDesc,
	Shipping.Provider,
	Shipping.OnlyForStockSysNo,
	Shipping.IsGetBySelf,
	Shipping.PremiumRate,
	Shipping.StoreType,
	Shipping.[OrderNumber] AS [Priority]
FROM IPP3.dbo.ShipType(NOLOCK) Shipping
WHERE IsOnlineShow = 1
AND MerchantSysNo = @SellerSysNo
END
ELSE
BEGIN
SELECT  DISTINCT  
	Shipping.ShipTypeName,
	StockShipping.ShipTypeSysNo,
	Shipping.ShipTypeID,
	Shipping.ShipTypeDesc,
	Shipping.Provider,
	Shipping.OnlyForStockSysNo,
	Shipping.IsGetBySelf,
	Shipping.PremiumRate,
	Shipping.StoreType,
	Shipping.[OrderNumber] AS [Priority]
FROM [ECStore].[dbo].[StockShipType](NOLOCK) StockShipping
	LEFT JOIN IPP3.dbo.ShipType(NOLOCK) Shipping
	ON StockShipping.ShipTypeSysNo = Shipping.SysNo
WHERE SellerSysNo = @SellerSysNo and StockShipping.[Status]=0
END
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@SellerSysNo" />
    </parameters>
  </dataCommand>
  <!--Pipeline是否存在运费设置-->
  <dataCommand name="Pipeline_ExistsShipTypeAreaPrice" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
      DECLARE @citySyaNo int
SELECT @citySyaNo=ISNULL([CitySysNo],SysNo)
FROM [IPP3].[dbo].[Area] (NOLOCK)
where SysNO=@AreaSysNo

SELECT 1
  FROM [IPP3].[dbo].[ShipType_Area_Price](NOLOCK)
  WHERE ShipTypeSysNo = @ShipTypeSysNo
  AND AreaSysNo = @citySyaNo
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ShipTypeSysNo" />
      <param dbType="Int32" name="@AreaSysNo" />
    </parameters>
  </dataCommand>

  <!--Pipeline根据收货市ID获得所有的可以配送到该市的商品ProductSysNo-->
  <dataCommand name="Pipeline_GetAllProductRestrictedAreaByAreaSysNo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @citySyaNo int
SELECT @citySyaNo=ISNULL([CitySysNo],SysNo)
FROM [IPP3].[dbo].[Area] (NOLOCK)
where SysNO=@AreaSysNo


Select ProductSysNo from
  OverseaContentManagement.dbo.ProductRestrictedArea  (NOLOCK)
where  CitySysNo=@citySyaNo
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@AreaSysNo" />
    </parameters>
  </dataCommand>


  <!--Pipeline取得所有的配送地区-非的配置-->
  <dataCommand name="Pipeline_GetShippingTypeAndAreaUnList" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT [SysNo]
      ,[ShipTypeSysNo]
      ,[AreaSysNo]
      ,[CompanyCode]
      ,[StoreCompanyCode]
      ,[LanguageCode]
  FROM [IPP3].[dbo].[ShipType_Area_Un] WITH(NOLOCK)
      ]]>
    </commandText>
  </dataCommand>


  <!--Pipeline取得所有的配送方式-支付方式-非的配置-->
  <dataCommand name="Pipeline_GetShipTypeAndPayTypeUnList" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT [SysNo]
      ,[ShipTypeSysNo]
      ,[PayTypeSysNo]
      ,[CompanyCode]
      ,[StoreCompanyCode]
      ,[LanguageCode]
  FROM [IPP3].[dbo].[ShipType_PayType_Un] WITH(NOLOCK)
      ]]>
    </commandText>
  </dataCommand>


  <!--Pipeline计算运费-->
  <dataCommand name="Shipping_GetAllShippingFee" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
				EXEC [IPP3].[dbo].[UP_EC_GetAllShippingFee_V1] @ReqMsg
		]]>
    </commandText>
    <parameters>
      <param dbType="Xml" name="@ReqMsg" direction="Input"/>
    </parameters>
  </dataCommand>

  <!--Pipeline指定用户是否存在-->
  <dataCommand name="Shipping_IsExistCustomer" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
				IF EXISTS(SELECT TOP 1 1 
          FROM ipp3.dbo.Customer WITH(NOLOCK) 
          WHERE Sysno = @CustomerSysNo)
        BEGIN
          SELECT 1
        END
        ELSE 
        BEGIN
          SELECT 0
        END
		]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@CustomerSysNo" direction="Input"/>
    </parameters>
  </dataCommand>

  <dataCommand name="Pipeline_GetCurrencyExchangeRate" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
    SELECT ExchangeRate FROM ipp3.dbo.Currency WITH(NOLOCK)
    WHERE SysNo = @CurrencySysno
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@CurrencySysno"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetVirualGroupBuyTicketInfo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
    DECLARE @TicketCount INT, @StoreCount INT, 
    @GroupBuyingSysNo INT, @VendorStoreTel NVARCHAR(20) = '';

    SELECT @TicketCount = COUNT(1), @GroupBuyingSysNo = MIN(GroupBuyingSysNo)
    FROM OverseaContentManagement.dbo.GroupBuyingTicket(NOLOCK)
    WHERE OrderSysNo = @OrderSysNo
    SELECT @StoreCount = COUNT(1) FROM OverseaContentManagement.dbo.GroupBuyingActivityRel(NOLOCK)
    WHERE GroupBuyingSysNo = @GroupBuyingSysNo
    IF(@StoreCount = 1)
    BEGIN
	    SELECT @VendorStoreTel = B.Telephone 
	    FROM OverseaContentManagement.dbo.GroupBuyingActivityRel(NOLOCK) A
	    INNER JOIN [IPP3].[dbo].[Vendor_Store](NOLOCK) B
	    ON A.VendorStoreSysNo = b.SysNo
	    WHERE A.GroupBuyingSysNo = @GroupBuyingSysNo
    END

    SELECT TOP 1 @TicketCount AS TicketCount,
    T2.GroupBuyingTitle,
    T1.AvailableDate,
    @VendorStoreTel AS VendorStoreTel,
    T1.Tel AS CustomerTel
    FROM OverseaContentManagement.dbo.GroupBuyingTicket(NOLOCK) T1
    INNER JOIN OverseaContentManagement.dbo.ProductGroupBuying(NOLOCK) T2
    ON T1.GroupBuyingSysNo = T2.SysNo
    WHERE OrderSysNo = @OrderSysNo
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@OrderSysNo"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetVirualGroupBuyTicketSysNoBySOSysNo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
    SELECT SysNo FROM OverseaContentManagement.dbo.GroupBuyingTicket(NOLOCK)
    WHERE OrderSysNo = @OrderSysNo
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@OrderSysNo"/>
    </parameters>
  </dataCommand>

  <dataCommand name="Pipeline_GetFreeShippingConfig" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
   SELECT [SysNo] 
      ,[StartDate]
      ,[EndDate]
      ,[AmountSettingType]
      ,[AmountSettingValue]
      ,[PayTypeSettingValue]
      ,[ShipAreaSettingValue]
      ,[IsGlobal]
      ,[SellerSysNo]
  FROM [IPP3].[dbo].[FreeShippingChargeRule] WITH(NOLOCK)
  WHERE [Status] = 'A' 
  AND convert(date,getdate()) Between [StartDate] AND [EndDate]
  
 SELECT [RuleSysNo]
    ,[ProductSysNo]
  FROM [IPP3].[dbo].[FreeShippingChargeRule_Product] t WITH(NOLOCK)
INNER JOIN [IPP3].[dbo].[FreeShippingChargeRule] m WITH(NOLOCK)
 ON t.RuleSysNo = m.SysNo
WHERE m.[Status] = 'A' 
AND convert(date,getdate()) Between m.[StartDate] AND m.[EndDate]
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="Pipeline_GetVendorInfoBySysNo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT v.SysNo AS VendorSysno
	,VendorID
	,VendorName
	,StockType
	,ShippingType
	,InvoiceType
  ,BriefName AS VendorBriefName
 FROM IPP3.dbo.Vendor v WITH(NOLOCK) 
INNER JOIN ipp3.dbo.Vendor_Ex vx WITH(NOLOCK)
 ON v.SysNo = vx.VendorSysNo
WHERE v.SysNo = @SysNo
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@SysNo"/>
    </parameters>
  </dataCommand>

  <dataCommand name="Pipeline_QueryStockInfoList" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT [SysNo]
      ,[StockID]
      ,[StockName]
      ,[StockType]
      ,[MerchantSysNo]
FROM [IPP3].[dbo].[Stock] WITH(NOLOCK)
#StrWhere#
      ]]>
    </commandText>
  </dataCommand>

    <dataCommand name="ShoppingPersistent_SaveShoppingCart" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @Idx INT;
SET @Idx = @CustomerSysNo % 10;
IF(EXISTS(SELECT 1 FROM [Shopping].[dbo].[V_ShoppingCart](NOLOCK)
WHERE [CustomerSysNo] = @CustomerSysNo))
BEGIN
   --IF(@CustomerSysNo IS NULL)
  -- BEGIN
  --     SELECT @CustomerSysNo = [CustomerSysNo]
  --        FROM [Shopping].[dbo].[V_EC_ShoppingCart](NOLOCK)
   --       WHERE [Key] = @Key
  -- END
	 IF(@Idx = 0)
	 BEGIN
		UPDATE [Shopping].[dbo].[ShoppingCart10]
			SET [ShoppingCart] = ISNULL(@ShoppingCart, ShoppingCart),
				[ShoppingCartMini] = ISNULL(@ShoppingCartMini, ShoppingCartMini)
		WHERE [CustomerSysNo] = @CustomerSysNo
     END
     ELSE IF(@Idx = 1)
	 BEGIN
		UPDATE [Shopping].[dbo].[ShoppingCart1]
			SET [ShoppingCart] = ISNULL(@ShoppingCart, ShoppingCart),
				[ShoppingCartMini] = ISNULL(@ShoppingCartMini, ShoppingCartMini)
		WHERE [CustomerSysNo] = @CustomerSysNo
     END
     ELSE IF(@Idx = 2)
	 BEGIN
		UPDATE [Shopping].[dbo].[ShoppingCart2]
			SET [ShoppingCart] = ISNULL(@ShoppingCart, ShoppingCart),
				[ShoppingCartMini] = ISNULL(@ShoppingCartMini, ShoppingCartMini)
		WHERE [CustomerSysNo] = @CustomerSysNo
     END
     ELSE IF(@Idx = 3)
	 BEGIN
		UPDATE [Shopping].[dbo].[ShoppingCart3]
			SET [ShoppingCart] = ISNULL(@ShoppingCart, ShoppingCart),
				[ShoppingCartMini] = ISNULL(@ShoppingCartMini, ShoppingCartMini)
		WHERE [CustomerSysNo] = @CustomerSysNo
     END
     ELSE IF(@Idx = 4)
	 BEGIN
		UPDATE [Shopping].[dbo].[ShoppingCart4]
			SET [ShoppingCart] = ISNULL(@ShoppingCart, ShoppingCart),
				[ShoppingCartMini] = ISNULL(@ShoppingCartMini, ShoppingCartMini)
		WHERE [CustomerSysNo] = @CustomerSysNo
     END
     ELSE IF(@Idx = 5)
	 BEGIN
		UPDATE [Shopping].[dbo].[ShoppingCart5]
			SET [ShoppingCart] = ISNULL(@ShoppingCart, ShoppingCart),
				[ShoppingCartMini] = ISNULL(@ShoppingCartMini, ShoppingCartMini)
		WHERE [CustomerSysNo] = @CustomerSysNo
     END
     ELSE IF(@Idx = 6)
	 BEGIN
		UPDATE [Shopping].[dbo].[ShoppingCart6]
			SET [ShoppingCart] = ISNULL(@ShoppingCart, ShoppingCart),
				[ShoppingCartMini] = ISNULL(@ShoppingCartMini, ShoppingCartMini)
		WHERE [CustomerSysNo] = @CustomerSysNo
     END
     ELSE IF(@Idx = 7)
	 BEGIN
		UPDATE [Shopping].[dbo].[ShoppingCart7]
			SET [ShoppingCart] = ISNULL(@ShoppingCart, ShoppingCart),
				[ShoppingCartMini] = ISNULL(@ShoppingCartMini, ShoppingCartMini)
		WHERE [CustomerSysNo] = @CustomerSysNo
     END
     ELSE IF(@Idx = 8)
	 BEGIN
		UPDATE [Shopping].[dbo].[ShoppingCart8]
			SET [ShoppingCart] = ISNULL(@ShoppingCart, ShoppingCart),
				[ShoppingCartMini] = ISNULL(@ShoppingCartMini, ShoppingCartMini)
		WHERE [CustomerSysNo] = @CustomerSysNo
     END
     ELSE IF(@Idx = 9)
	 BEGIN
		UPDATE [Shopping].[dbo].[ShoppingCart9]
			SET [ShoppingCart] = ISNULL(@ShoppingCart, ShoppingCart),
				[ShoppingCartMini] = ISNULL(@ShoppingCartMini, ShoppingCartMini)
		WHERE [CustomerSysNo] = @CustomerSysNo
     END
END
ELSE
BEGIN
	 IF(@Idx = 0)
	 BEGIN
		INSERT INTO [Shopping].[dbo].[ShoppingCart10]([Key],[KeyAscii],[CustomerSysNo],[ShoppingCart],[ShoppingCartMini] )
				VALUES(@Key,@KeyAscii,@CustomerSysNo,@ShoppingCart,@ShoppingCartMini )
     END
     ELSE IF(@Idx = 1)
	 BEGIN
		INSERT INTO [Shopping].[dbo].[ShoppingCart1]([Key],[KeyAscii],[CustomerSysNo],[ShoppingCart],[ShoppingCartMini] )
				VALUES(@Key,@KeyAscii,@CustomerSysNo,@ShoppingCart,@ShoppingCartMini )
     END
     ELSE IF(@Idx = 2)
	 BEGIN
		INSERT INTO [Shopping].[dbo].[ShoppingCart2]([Key],[KeyAscii],[CustomerSysNo],[ShoppingCart],[ShoppingCartMini] )
				VALUES(@Key,@KeyAscii,@CustomerSysNo,@ShoppingCart,@ShoppingCartMini )
     END
     ELSE IF(@Idx = 3)
	 BEGIN
		INSERT INTO [Shopping].[dbo].[ShoppingCart3]([Key],[KeyAscii],[CustomerSysNo],[ShoppingCart],[ShoppingCartMini] )
				VALUES(@Key,@KeyAscii,@CustomerSysNo,@ShoppingCart,@ShoppingCartMini )
     END
     ELSE IF(@Idx = 4)
	 BEGIN
		INSERT INTO [Shopping].[dbo].[ShoppingCart4]([Key],[KeyAscii],[CustomerSysNo],[ShoppingCart],[ShoppingCartMini] )
				VALUES(@Key,@KeyAscii,@CustomerSysNo,@ShoppingCart,@ShoppingCartMini )
     END
     ELSE IF(@Idx = 5)
	 BEGIN
		INSERT INTO [Shopping].[dbo].[ShoppingCart5]([Key],[KeyAscii],[CustomerSysNo],[ShoppingCart],[ShoppingCartMini] )
				VALUES(@Key,@KeyAscii,@CustomerSysNo,@ShoppingCart,@ShoppingCartMini )
     END
     ELSE IF(@Idx = 6)
	 BEGIN
		INSERT INTO [Shopping].[dbo].[ShoppingCart6]([Key],[KeyAscii],[CustomerSysNo],[ShoppingCart],[ShoppingCartMini] )
				VALUES(@Key,@KeyAscii,@CustomerSysNo,@ShoppingCart,@ShoppingCartMini )
     END
     ELSE IF(@Idx = 7)
	 BEGIN
		INSERT INTO [Shopping].[dbo].[ShoppingCart7]([Key],[KeyAscii],[CustomerSysNo],[ShoppingCart],[ShoppingCartMini] )
				VALUES(@Key,@KeyAscii,@CustomerSysNo,@ShoppingCart,@ShoppingCartMini )
     END
     ELSE IF(@Idx = 8)
	 BEGIN
		INSERT INTO [Shopping].[dbo].[ShoppingCart8]([Key],[KeyAscii],[CustomerSysNo],[ShoppingCart],[ShoppingCartMini] )
				VALUES(@Key,@KeyAscii,@CustomerSysNo,@ShoppingCart,@ShoppingCartMini )
     END
     ELSE IF(@Idx = 9)
	 BEGIN
		INSERT INTO [Shopping].[dbo].[ShoppingCart9]([Key],[KeyAscii],[CustomerSysNo],[ShoppingCart],[ShoppingCartMini])
				VALUES(@Key,@KeyAscii,@CustomerSysNo,@ShoppingCart,@ShoppingCartMini )
     END
END
		]]>
    </commandText>
    <parameters>
      <param dbType="String" name="@Key" />
      <param dbType="Int32" name="@KeyAscii" />
      <param dbType="Int32" name="@CustomerSysNo" />
      <param dbType="String" name="@ShoppingCart" />
      <param dbType="String" name="@ShoppingCartMini" />
    </parameters>
  </dataCommand>

  <dataCommand name="ShoppingPersistent_GetShoppingCartByCustomer" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
SELECT [KeyAscii]
      ,[CustomerSysNo]
      ,[ShoppingCart]
      ,[ShoppingCartMini]
      ,[InDate]
      ,[LastEditDate]
  FROM [Shopping].[dbo].[V_ShoppingCart] (NOLOCK)
  WHERE [CustomerSysNo] = @CustomerSysNo
		]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@CustomerSysNo" />
    </parameters>
  </dataCommand>

</dataOperations>
