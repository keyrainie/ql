<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
 


  <dataCommand name="GetAllShipType" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT * FROM [ECCMS_System].[dbo].[ShipType] WITH(NOLOCK)  
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="GetAllPayType" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT * FROM [ECCMS_System].[dbo].[PayType] WITH(NOLOCK)  
      ]]>
    </commandText>
  </dataCommand>



  <!--new-->
  <dataCommand name="Order_GetQuerySODetailInfo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
				SELECT TOP 1
    (select isnull(SUM(si.redeemamount),0) from OverseaECommerceManagement.dbo.CouponCode_RedeemLog si(nolock) where si.SOSysNo=@SOID and si.status='A') as PromotionAmt,
		A.SysNo AS SoSysNo,
    (SELECT TOP 1 1 
		FROM ipp3.dbo.Finance_NetPay WITH(NOLOCK) 
		WHERE SOSysNo = @SOID
			AND  Status <> -1	) as IsNetPayed,
      C.IsNet as  [IsNet],
    A.TariffAmt as TariffAmt,
    		A.PointAmt as PointAmt,
		A.SOID AS SOCode,
		A.Status AS Status,
		A.CustomerSysNo,
		A.OrderDate,
		A.DeliveryDate,
		A.SalesManSysNo,
		A.IsWholeSale,
		A.IsPremium,
		
		A.PayTypeSysNo,

		A.SOAmt,
		A.AllocatedManSysNo,
		A.FreightUserSysNo,
		A.UpdateUserSysNo,
		ISNULL(A.UpdateTime,'1900-01-01') AS UpdateTime,
		A.AuditUserSysNo,
		A.AuditTime,
		A.ManagerAuditUserSysNo,
		A.ManagerAuditTime,
		A.OutUserSysNo,
		A.OutTime,
		A.Memo,
		A.Note,
		A.InvoiceNote,
		A.IsVAT,
		A.IsPrintPackageCover,
		A.DeliveryMemo,
		A.PackageID,
		A.FinanceNote,
		A.InvoiceNo,
		A.PromotionCustomerSysNo,
		A.IsLarge,
		A.PositiveSOSysNo,
		A.IsMobilePhone,
		A.DeliveryTimeRange,
		A.PromotionCodeSysNo,
		promotion.PromotionCode,
		A.HoldMark,
		A.HoldDate,
		A.HoldUser,
		A.HoldReason,
		A.ShoppingMasterSysNo,
		A.HaveAutoRMA,
		A.IsUseChequesPay,
		A.IsUsePrepay,
		A.PrepayAmt,
		D.CompanyCustomer,
		D.Email,
		U.UserName,
		U.Phone,
		ISNULL(E.IsDCOrder,0) AS IsDCOrder,
		ISNULL(E.SOType,0) AS SOType,
		ISNULL(E.IsBackOrder,0) AS IsBackOrder,
		ISNULL(E.RingOutShipType,'') AS RingOutShipType,
		ISNULL(E.DeliveryType,'0') AS ShipDeliveryType,
		A.HoldMark,
		A.HoldDate,
		E.HoldStatus,
		ISNULL(F.ProvinceName,'')+' '+ISNULL(F.CityName,'')+' '
		+ ISNULL(F.DistrictName,'') AS AddressArea,
		E.DeliveryPromise,
		D.FromLinkSource,
		B.ShipTypeDesc,
		E.IsRequireShipInvoice,
		E.SoSplitType,
		E.SoSplitMaster,
		A.GiftCardPay,
		E.DeliverySection,
		A.CashPay as [Amount.CashPay],
		A.DiscountAmt as [Amount.DiscountAmt],
		A.GiftCardPay as [Amount.GiftCardPay],
		A.PayPrice as [Amount.PayPrice],
		A.PointAmt as [Amount.PointAmt],
		A.PointPay as [Amount.PointPay],
		A.PremiumAmt as [Amount.PremiumAmt],
		A.PrepayAmt as [Amount.PrepayAmt],
		A.SOAmt as [Amount.SOAmt],
		A.ShipPrice as [Amount.ShipPrice],
		B.ShipTypeName as  [ShipType.ShipTypeName],
		B.ShipTypeDesc as  [ShipType.ShipTypeDesc],
		C.SysNo as  [Payment.PayTypeID],
		C.PayTypeName as  [Payment.PayTypeName],
		C.IsPayWhenRecv as  [Payment.IsPayWhenRecv],
		C.IsPayWhenRecv as [IsPayWhenRecv],
		C.IsNet as  [Payment.IsNet],
		C.IsNet as [IsNet],
		ISNULL(f.ProvinceName,'') + ' ' + ISNULL(f.CityName,'') + ' ' + ISNULL(f.DistrictName,'') as ReceiveAreaName,	
		A.ReceiveAreaSysNo,
		A.ReceiveContact,
		A.ReceiveName,
		A.ReceivePhone,
		A.ReceiveCellPhone,
		A.ReceiveAddress,
		A.ReceiveZip,
		E.MemoForCustomer,
    E.MerchantSysNo as SellerSysNo,
    V.VendorName as SellerName,
    A.PointPay,
    cart.ShoppingCartSysno AS [ShoppingCartID],
    E.LocalWHSysNo AS StockSysNo
	FROM dbo.SO_Master A WITH (NOLOCK)
	LEFT JOIN dbo.ShipType B WITH (NOLOCK) ON A.ShipTypeSysNo = B.SysNo
	LEFT JOIN dbo.PayType C WITH (NOLOCK) ON A.PayTypeSysNo = C.SysNo
	LEFT JOIN dbo.Customer D WITH (NOLOCK) ON A.CustomerSysNo = D.SysNo
	LEFT JOIN dbo.sys_user U WITH(NOLOCK) ON U.sysno = A.FreightUserSysNo
	LEFT JOIN dbo.SO_CheckShipping E WITH(NOLOCK) ON A.SysNo = E.SOSysNo	
	LEFT JOIN [dbo].[area] F WITH(NOLOCK) ON A.ReceiveAreaSysNo =F.SysNo
	LEFT JOIN dbo.Promotion_Code promotion WITH (NOLOCK) 
	ON A.PromotionCodeSysNo = promotion.SysNo
  LEFT JOIN dbo.Vendor v WITH(NOLOCK) ON v.Sysno = E.MerchantSysno
  LEFT JOIN [OverseaOrderManagement].[dbo].[SO_ShoppingCart] cart ON cart.SOSysno=A.Sysno
	WHERE A.SysNo = @SOID and A.CustomerSysNo=@CustomerSysNo

	SELECT 
		A.SysNo,
		A.SOSysNo AS SOID,
		A.ProductSysNo AS ProductSysNo,
		p.ProductName,
    p.ProductTitle,
		A.Quantity,
		A.Weight,
		A.Price,
		A.Cost,
		A.Point,
		A.PointType,
		A.DiscountAmt,
		A.Warranty,
		CASE WHEN A.ProductType = 1 
		AND EXISTS(SELECT TOP 1 1 FROM dbo.sale_gift AS gift WITH(Nolock) 
       WHERE CHARINDEX(','+CAST(gift.ProductSysNo AS NVARCHAR)+',', ','+A.MasterProductSysNo+',') > 0
			AND gift.GiftSysNo=A.ProductSysNo 
			AND gift.isOnlineShow = 0
			AND gift.Status <> -1) 
      THEN 5 ELSE A.ProductType END AS ProductType,
		A.GiftSysNo AS GiftID,
		A.BriefName,
		A.OriginalPrice,
		A.PromotionDiscount,
		A.IsDuplicateOrder,
		A.DuplicateSOSysNo,
		A.MasterProductSysNo,
		A.WarehouseNumber,
		A.UnitCostWithoutTax,
		A.IsMemberPrice,
    p.DefaultImage,
		p.ProductID AS Code,
		p.Status,
		p.C3SysNo,
		price.MaxPerOrder,
		stock.StockName AS WarehouseName,
		0 as TariffRate,
    '' as EntryCode,
    '' as TariffCode,
    A.TariffAmt
	FROM dbo.SO_Item A WITH (NOLOCK)
	LEFT JOIN dbo.Product p WITH (NOLOCK) ON p.SysNo = a.ProductSysNo 
    LEFT JOIN dbo.Product_Price AS price WITH (NOLOCK) ON a.ProductSysNo = price.ProductSysNo
    LEFT JOIN dbo.Stock AS stock WITH (NOLOCK) ON a.WarehouseNumber = stock.SysNo
    -- join IPP3..Product_EntryInfo e (nolock)
		--on e.ProductSysNo=p.SysNo
	WHERE A.SOSysNo = @SOID 
	ORDER BY A.SysNo

SELECT RTRIM(Code) AS Code
	,CustomerSysNo
	,amount AS  ConsumeAmount
	,InDate AS CreateTime
FROM OverseaEcommerceManagement.dbo.GiftCardRedeemLog  WITH(NOLOCK)
WHERE CustomerSysNo = @CustomerSysNo 
AND ActionType  ='SO' AND ActionSysNo = @SOID
			]]>
    </commandText>
    <parameters>
      <param name="@SOID" dbType="Int32" size="4"/>
      <param name="@CustomerSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Order_GetCountByCustomerAndStatus" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
  
  DECLARE @SelectSql NVARCHAR(MAX)
	 SET @SelectSql=N''
   IF (@Status =2)
	   BEGIN
	     SET @SelectSql = N'SELECT @TotalCount = COUNT(1) FROM IPP3.dbo.SO_Master s  WITH(NOLOCK) 
       INNER JOIN  IPP3.[dbo].PayType AS p  WITH(NOLOCK)  ON s.PayTypeSysNo = p.SysNo WHERE  s.CustomerSysNo = @CustomerID   
        AND p.IsPayWhenRecv = 0 AND (( s.Status = 0 AND NOT EXISTS (SELECT TOP 1 sysno FROM IPP3.[dbo].[Finance_NetPay] fn WITH(NOLOCK) 
									WHERE fn.status <>-1 AND fn.sosysno = s.SysNo) ) OR  s.Status = @Status)'
	   END
  ELSE
    BEGIN
	     SET @SelectSql = N'SELECT @TotalCount = COUNT(1) FROM IPP3.dbo.SO_Master s  WITH(NOLOCK) 
       INNER JOIN  IPP3.[dbo].PayType AS p  WITH(NOLOCK)  ON s.PayTypeSysNo = p.SysNo WHERE  s.CustomerSysNo = @CustomerID  AND s.Status = @Status'
    END
    
	 EXECUTE SP_EXECUTESQL @SelectSql ,N'@CustomerID int 
									 ,@Status int
									 ,@TotalCount int OUTPUT' 
									 ,@CustomerID 
									 ,@Status 
									 ,@TotalCount OUTPUT
    
  ]]>
    </commandText>
    <parameters>
      <param name="@CustomerID" dbType="Int32" size="4"/>
      <param name="@Status" dbType="Int32" size="4"/>
      <param name="@TotalCount" dbType="Int32" direction="Output"/>
    </parameters>
  </dataCommand>

  <dataCommand name="Order_GetSalesOrderMasterList" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @Condition NVARCHAR(MAX)
	SET @Condition = N' Where 1=1 '
	IF (ISNULL(@CustomerID,0) <> 0)
	BEGIN
		SET @Condition = @Condition + N' AND so.CustomerSysNo = @CustomerID'
	END
	
  IF(ISNULL(@SOPayStatus,0)=1)
  BEGIN 
    SET @Condition = @Condition + N' AND netpay.SysNo IS NULL AND so.Status >= 0'
  END
  ELSE IF(ISNULL(@SOPayStatus,0)=2)
  BEGIN
    SET @Condition = @Condition + N' AND netpay.SysNo IS NOT NULL '
  END
    
	IF (ISNULL(@Status,-100) <> -100)
	BEGIN
		SET @Condition = @Condition + N' AND so.Status = @Status'
	END
 
	
	IF (ISNULL(@SOID,0) <> 0)
	BEGIN
		SET @Condition = @Condition + N' AND (so.SysNo = @SOID or sc.SoSplitMaster = @SOID) '
	END
	
	IF (@SearchType = 15) -- Last three months
	BEGIN
		SET @Condition = @Condition + N' AND so.OrderDate > DATEADD(MM,-3,GETDATE())'
	END
	ELSE IF (@SearchType = 11) -- Last week
	BEGIN
		SET @Condition = @Condition + N' AND so.OrderDate > DATEADD(DD,-7,GETDATE())'
	END
	ELSE IF (@SearchType = 12) -- Last month
	BEGIN
		SET @Condition = @Condition + N' AND so.OrderDate > DATEADD(MM,-1,GETDATE())'
	END
	ELSE IF (@SearchType = 16) -- an  month ago 
	BEGIN
		SET @Condition = @Condition + N' AND so.OrderDate <= DATEADD(MM,-1,GETDATE())'
	END

	IF (ISNULL(@ProductName,'') <> '')
		BEGIN
			set @ProductName='%'+@ProductName+'%'
			SET @Condition = @Condition + N' AND so.SOID in (SELECT si.sosysno
				from ipp3..product pd(nolock)
					join ipp3..so_item si(nolock)
						on si.ProductSysNo = pd.SysNo
				WHERE  --si.SOSysNo = sc.SysNo AND 
				pd.ProductName LIKE @ProductName )'
		END
	
	DECLARE @SelectSql NVARCHAR(MAX)
	
	SET @SelectSql = N'
SELECT @TotalCount = COUNT(1) FROM IPP3.dbo.SO_Master as so WITH(NOLOCK)
	INNER JOIN ipp3.dbo.PayType as sp WITH (NOLOCK) ON so.PayTypeSysNo = sp.SysNo 
	LEFT JOIN IPP3.dbo.SO_CheckShipping as sc WITH(NOLOCK) ON so.SysNo = sc.SOSysNo
  LEFT JOIN IPP3.dbo.Finance_NetPay as netpay WITH(NOLOCK) ON so.SysNo=netpay.SOSysNo
		@Condition
		
		SELECT TOP (@PageSize) 
				Result.[SysNo] AS SoSysNo,
				Result.[Status] AS Status,
				Result.[CustomerSysNo],
				Result.[OrderDate],
				Result.[IsPayWhenRecv],
				Result.[IsNet],
				Result.[SOType],
				Result.[IsDCOrder],
				Result.SoSplitType AS SoSplitType,
				Result.SoSplitMaster AS SoSplitMaster,
				Result.DiscountAmt as [Amount.DiscountAmt],
				Result.GiftCardPay as [Amount.GiftCardPay],
				Result.PayPrice,
				Result.PointAmt,
				Result.PointPay,
				Result.TariffAmt,
				Result.PremiumAmt,
				Result.PrepayAmt as [Amount.PrepayAmt],
				Result.SOAmt as [Amount.SOAmt],
				Result.ShipPrice as [Amount.ShipPrice],
        Result.ShoppingCartID,
				(select SUM(PromotionDiscount*Quantity) from IPP3..SO_Item (nolock) where sosysno=Result.[SysNo]) as PromotionAmt,
				(SELECT TOP 1 1 FROM dbo.Finance_NetPay WITH(NOLOCK) WHERE SOSysNo = Result.[SysNo] AND  Status <> -1	) as IsNetPayed,
        Result.HoldMark,
        Result.StockSysNo
			FROM
			(
				SELECT ROW_NUMBER() OVER(ORDER BY OrderDate DESC) AS RowNumber,
					so.[SysNo],
					so.[Status],
					so.[CustomerSysNo],
					so.[OrderDate],
					sp.[IsPayWhenRecv],
					sp.[IsNet],
					sc.[SOType],
					sc.[IsDCOrder],
					sc.[SOSplitType],
					sc.[SOSplitMaster],
					so.CashPay,
					so.DiscountAmt,
					so.GiftCardPay,
					so.PayPrice,
					so.PointAmt,
					so.PointPay,
					so.PremiumAmt,
					so.PrepayAmt,
					so.SOAmt,
					so.ShipPrice,
					so.TariffAmt,
          cart.ShoppingCartSysno AS [ShoppingCartID],
					CASE WHEN so.[OrderDate] IS NULL THEN 1 ELSE 0 END AS Flag,
          so.HoldMark,
          sc.LocalWHSysNo AS StockSysNo
				FROM IPP3.dbo.SO_Master as so WITH(NOLOCK)
			INNER JOIN ipp3.dbo.PayType as sp WITH (NOLOCK) ON so.PayTypeSysNo = sp.SysNo 
			LEFT JOIN IPP3.dbo.SO_CheckShipping as sc WITH(NOLOCK) ON so.SysNo = sc.SOSysNo 
      LEFT JOIN IPP3.dbo.Finance_NetPay as netpay WITH(NOLOCK) ON so.SysNo=netpay.SOSysNo
      LEFT JOIN [OverseaOrderManagement].[dbo].[SO_ShoppingCart] cart ON cart.SOSysno=so.SysNo
			@Condition 	
				) AS Result 
		WHERE Result.RowNumber>@PageSize*(@PageIndex-1)
    ORDER BY Result.RowNumber ASC
		
		DECLARE @SoTable TABLE
		(
		 SoSysNo INT 
		) 

		INSERT INTO @SoTable
		(
		SoSysNo
		)

		SELECT TOP (@PageSize) 
						Result.[SysNo] AS SoSysNo
						
					FROM
					(
						SELECT ROW_NUMBER() OVER(ORDER BY OrderDate DESC) AS RowNumber,
							so.[SysNo]
						FROM IPP3.dbo.SO_Master as so WITH(NOLOCK)
					INNER JOIN ipp3.dbo.PayType as sp WITH (NOLOCK) ON so.PayTypeSysNo = sp.SysNo 
					LEFT JOIN IPP3.dbo.SO_CheckShipping as sc WITH(NOLOCK) ON so.SysNo = sc.SOSysNo 
          LEFT JOIN IPP3.dbo.Finance_NetPay as netpay WITH(NOLOCK) ON so.SysNo=netpay.SOSysNo
					@Condition 	
						) AS Result 
				WHERE Result.RowNumber>@PageSize*(@PageIndex-1)
						
		SELECT 
		T.SoSysNo
    ,pd.SysNo AS ProductSysNo
    ,pd.ProductID
    ,pd.ProductName
    ,si.ProductType
    ,pd.ProductTitle
    ,pd.DefaultImage
    ,si.Quantity
    ,si.Price
    ,si.Weight
    ,si.Price
    ,si.Cost
    ,si.Point
    ,si.PointType
    ,si.DiscountAmt
    ,si.OriginalPrice
		FROM
		@SoTable AS T
		INNER JOIN ipp3..so_item si(nolock)
		ON T.SoSysNo=si.SoSysNo
		INNER JOIN ipp3..product pd(nolock)
		ON pd.SysNo=si.ProductSysNo	
	'	

SET @SelectSql = REPLACE(@SelectSql,'@Condition',@Condition)

	EXECUTE SP_EXECUTESQL @SelectSql ,N'@CustomerID int 
									,@SOID int 
									,@ProductName nvarchar(200) 
									,@SearchType int
									,@Status int
									,@PageSize int
									,@PageIndex int
									,@TotalCount int OUTPUT' 
									,@CustomerID 
									,@SOID 
									,@ProductName 
									,@SearchType
									,@Status 
									,@PageSize 
									,@PageIndex 
									,@TotalCount OUTPUT
			]]>
    </commandText>
    <parameters>
      <param name="@CustomerID" dbType="Int32" />
      <param name="@SOID" dbType="Int32"/>
      <param name="@ProductName" dbType="String" size="200"/>
      <param name="@SearchType" dbType="Int32" />
      <param name="@Status" dbType="Int32"/>
      <param name="@SOPayStatus" dbType="Int32"/>
      <param name="@PageSize" dbType="Int32"/>
      <param name="@PageIndex" dbType="Int32"/>
      <param name="@TotalCount" dbType="Int32" direction="Output"/>

    </parameters>
  </dataCommand>


  <dataCommand name="Order_GetTopOrderMasterList" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
				
SELECT Top (@top)
				so.[SysNo] as SoSysNo,
	so.[Status],
  so.TariffAmt as TariffAmt,
	so.[CustomerSysNo],
	so.[OrderDate],
	sp.[IsPayWhenRecv],
	sp.[IsNet],
	sc.[SOType],
	sc.[IsDCOrder],
	sc.[SOSplitType],
	sc.[SOSplitMaster],
  so.CashPay,
so.DiscountAmt as [Amount.DiscountAmt],
so.GiftCardPay as [Amount.GiftCardPay],
(select SUM(PromotionDiscount*Quantity) from IPP3..SO_Item (nolock) where sosysno=so.[SysNo]) as PromotionAmt,
so.PayPrice,
so.PointAmt,
so.PointPay,
so.PremiumAmt,
so.PrepayAmt as [Amount.PrepayAmt],
so.SOAmt as [Amount.SOAmt],
so.ShipPrice as [Amount.ShipPrice],
cart.ShoppingCartSysNo AS [ShoppingCartID],
(SELECT TOP 1 1 
			FROM Ipp3.dbo.Finance_NetPay WITH(NOLOCK) 
			WHERE SOSysNo = so.[SysNo]
				AND  [Status] <> -1	) as IsNetPayed,
so.HoldMark, 
sc.LocalWHSysNo AS StockSysNo
			FROM IPP3.dbo.SO_Master as so WITH(NOLOCK)
	INNER JOIN ipp3.dbo.PayType as sp WITH (NOLOCK) ON so.PayTypeSysNo = sp.SysNo 
	LEFT JOIN IPP3.dbo.SO_CheckShipping as sc WITH(NOLOCK) ON so.SysNo = sc.SOSysNo 
  LEFT JOIN [OverseaOrderManagement].[dbo].[SO_ShoppingCart] cart ON cart.SOSysno=so.SysNo
	Where so.CustomerSysNo = @CustomerID 
	ORDER BY so.OrderDate DESC	
									
			]]>
    </commandText>
    <parameters>
      <param name="@CustomerID" dbType="Int32" />
      <param name="@top" dbType="Int32"/>

    </parameters>
  </dataCommand>


  <dataCommand name="OrderTrack_GetOrderStatus" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT TOP 1
          soMater.SysNo as [SOID],
          soMater.[STATUS] as SOStatus,
		      soMater.OrderDate,		  
		      soMater.AuditTime,
		      checkShipping.MerchantSysNo,
		      checkShipping.StockType,
		      checkShipping.ShippingType,
		      vendor.VendorName as MerchantName,
	        shipType.ShipTypeEnum
        FROM 
          [dbo].[SO_Master] as soMater WITH(NOLOCK) 
		    LEFT JOIN
		      [dbo].SO_CheckShipping AS checkShipping  WITH(NOLOCK)
		    ON
			    soMater.SysNo = checkShipping.SOSysNo
		    LEFT JOIN
			    [dbo].ShipType as shipType WITH(NOLOCK)
		    ON
			    shipType.SysNo = soMater.ShipTypeSysNo
		    LEFT JOIN
			    dbo.Vendor as vendor WITH(NOLOCK)
		    ON
			    checkShipping.MerchantSysNo = vendor.SysNo
        WHERE 
          soMater.CustomerSysNo = @CustomerSysNo
        AND
          soMater.[SOID] = @SoId
       
       SELECT 
	        stock.StockName
        FROM
	        dbo.SO_Item as soItem WITH(NOLOCK)
        INNER JOIN
	        dbo.Stock as stock WITH(NOLOCK)
        ON
	        soItem.WarehouseNumber = stock.SysNo
        WHERE
	        soItem.SOSysNo=@SoId
        Group by 
	        stock.StockName
      ]]>
    </commandText>
    <parameters>
      <param name="@CustomerSysNo" dbType="Int32"/>
      <param name="@SoId" dbType="Int32"/>
    </parameters>
  </dataCommand>
  <dataCommand name="OrderTrack_GetMerchantShippingLog" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT
	      shippingLog.[METShipViaCode],
	      shippingLog.[METPackageNumber],
	      shippingLog.[InDate]
      FROM
	      [OverseaOrderManagement].[dbo].[MerchantShippingLog] AS shippingLog WITH(NOLOCK)
      WHERE
	      shippingLog.[SOSysNo] = @SOSysNo
         
      ]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="Order_GetQueryOrderMasterListBySoSysNos" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
				
SELECT Top (@top)
				so.[SysNo] as SoSysNo,
	so.[Status],
	so.[CustomerSysNo],
	so.[OrderDate],
	sp.[IsPayWhenRecv],
	sp.[IsNet],
	sc.[SOType],
	sc.[IsDCOrder],
	sc.[SOSplitType],
	sc.[SOSplitMaster],
  so.CashPay,
so.DiscountAmt,
so.GiftCardPay,
so.PayPrice,
so.PointAmt,
so.PointPay,
so.PremiumAmt,
so.PrepayAmt,
so.SOAmt,
(SELECT TOP 1 1 
			FROM Ipp3.dbo.Finance_NetPay WITH(NOLOCK) 
			WHERE SOSysNo = so.[SysNo]
				AND  [Status] <> -1	) as IsNetPayed,
 sc.LocalWHSysNo AS StockSysNo
			FROM IPP3.dbo.SO_Master as so WITH(NOLOCK)
	INNER JOIN ipp3.dbo.PayType as sp WITH (NOLOCK) ON so.PayTypeSysNo = sp.SysNo 
	LEFT JOIN IPP3.dbo.SO_CheckShipping as sc WITH(NOLOCK) ON so.SysNo = sc.SOSysNo 
	Where so.SysNo in (#SoSysNos#) 
	ORDER BY so.OrderDate DESC	
									
			]]>
    </commandText>
  </dataCommand>
  <dataCommand name="Order_GetOrderLogBySOSysNo" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT A.*,B.TrackingNumber FROM ipp3.[dbo].SO_Log A WITH(NOLOCK)  
      LEFT JOIN Dropship.dbo.SO_TrackingNumber B WITH(NOLOCK) ON A.SOSysNo = B.SONumber
      WHERE A.[SOSysNo] = @SOSysNo AND A.OPTType>0
      ]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <!--支付时获取订单信息，从QueryDB获取-->
  <dataCommand name="Order_PayGetOrderInfoBySOSysNo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
	    SELECT TOP 1
	    A.SysNo AS SoSysNo,
      (select SUM(PromotionDiscount*Quantity) from IPP3..SO_Item(nolock) where SOSysNo=@SOID) as PromotionAmt,
      A.TariffAmt as TariffAmt,
    	    A.PointAmt as PointAmt,
	    A.SOID AS SOCode,
	    A.Status,
	    A.CustomerSysNo,
	    A.OrderDate,
	    A.DeliveryDate,
	    A.SalesManSysNo,
	    A.IsWholeSale,
	    A.IsPremium,		
	    A.PayTypeSysNo,
	    A.SOAmt,
	    A.AllocatedManSysNo,
	    A.FreightUserSysNo,
	    A.UpdateUserSysNo,
	    ISNULL(A.UpdateTime,'1900-01-01') AS UpdateTime,
	    A.AuditUserSysNo,
	    A.AuditTime,
	    A.ManagerAuditUserSysNo,
	    A.ManagerAuditTime,
	    A.OutUserSysNo,
	    A.OutTime,
	    A.Memo,
	    A.Note,
	    A.InvoiceNote,
	    A.IsVAT,
	    A.IsPrintPackageCover,
	    A.DeliveryMemo,
	    A.PackageID,
	    A.FinanceNote,
	    A.InvoiceNo,
	    A.PromotionCustomerSysNo,
	    A.IsLarge,
	    A.PositiveSOSysNo,
	    A.IsMobilePhone,
	    A.DeliveryTimeRange,
	    A.PromotionCodeSysNo,
	    promotion.PromotionCode,
	    A.HoldMark,
	    A.HoldDate,
	    A.HoldUser,
	    A.HoldReason,
	    A.ShoppingMasterSysNo,
	    A.HaveAutoRMA,
	    A.IsUseChequesPay,
	    A.IsUsePrepay,
	    A.PrepayAmt,
	    D.CompanyCustomer,
	    D.Email,
	    U.UserName,
	    U.Phone,
	    ISNULL(E.IsDCOrder,0) AS IsDCOrder,
	    ISNULL(E.SOType,0) AS SOType,
	    ISNULL(E.IsBackOrder,0) AS IsBackOrder,
	    ISNULL(E.RingOutShipType,'') AS RingOutShipType,
	    ISNULL(E.DeliveryType,'0') AS ShipDeliveryType,
	    A.HoldMark,
	    A.HoldDate,
	    E.HoldStatus,
	    ISNULL(F.ProvinceName,'')+' '+ISNULL(F.CityName,'')+' '
	    + ISNULL(F.DistrictName,'') AS AddressArea,
	    E.DeliveryPromise,
	    D.FromLinkSource,
	    B.ShipTypeDesc,
	    E.IsRequireShipInvoice,
	    E.SoSplitType,
	    E.SoSplitMaster,
	    A.GiftCardPay,
	    E.DeliverySection,
	    A.CashPay as [Amount.CashPay],
	    A.DiscountAmt as [Amount.DiscountAmt],
	    A.GiftCardPay as [Amount.GiftCardPay],
	    A.PayPrice as [Amount.PayPrice],
	    A.PointAmt as [Amount.PointAmt],
	    A.PointPay as [Amount.PointPay],
	    A.PremiumAmt as [Amount.PremiumAmt],
	    A.PrepayAmt as [Amount.PrepayAmt],
	    A.SOAmt as [Amount.SOAmt],
	    A.ShipPrice as [Amount.ShipPrice],
	    B.ShipTypeName as  [ShipType.ShipTypeName],
	    B.ShipTypeDesc as  [ShipType.ShipTypeDesc],
	    C.SysNo as  [Payment.PayTypeID],
	    C.PayTypeName as  [Payment.PayTypeName],
	    C.IsPayWhenRecv as  [Payment.IsPayWhenRecv],
	    C.IsNet as  [Payment.IsNet],
	    ISNULL(f.ProvinceName,'') + ' ' + ISNULL(f.CityName,'') + ' ' + ISNULL(f.DistrictName,'') as ReceiveAreaName,	
	    A.ReceiveAreaSysNo,
	    A.ReceiveContact,
	    A.ReceiveName,
	    A.ReceivePhone,
	    A.ReceiveCellPhone,
	    A.ReceiveAddress,
	    A.ReceiveZip,
      A.CurrencySysNo,
      A.[CompanyCode],
      A.[LanguageCode],
      A.[StoreCompanyCode],
      A.PointPay,
      E.MerchantSysNo AS SellerSysNo
    FROM dbo.SO_Master A WITH (NOLOCK)
    LEFT JOIN dbo.ShipType B WITH (NOLOCK) ON A.ShipTypeSysNo = B.SysNo
    LEFT JOIN dbo.PayType C WITH (NOLOCK) ON A.PayTypeSysNo = C.SysNo
    LEFT JOIN dbo.Customer D WITH (NOLOCK) ON A.CustomerSysNo = D.SysNo
    LEFT JOIN dbo.sys_user U WITH(NOLOCK) ON U.sysno = A.FreightUserSysNo
    LEFT JOIN dbo.SO_CheckShipping E WITH(NOLOCK) ON A.SysNo = E.SOSysNo	
    LEFT JOIN [dbo].[area] F WITH(NOLOCK) ON A.ReceiveAreaSysNo =F.SysNo
    LEFT JOIN dbo.Promotion_Code promotion WITH (NOLOCK) 
    ON A.PromotionCodeSysNo = promotion.SysNo
    WHERE A.SysNo = @SOID

    SELECT 
	    A.SysNo,
	    A.SOSysNo AS SOID,
	    A.ProductSysNo AS ProductID,
	    p.ProductTitle AS ProductName,
	    A.Quantity,
	    A.Weight,
	    A.Price,
	    A.Cost,
	    A.Point,
	    A.PointType,
	    A.DiscountAmt,
	    A.Warranty,
	    CASE WHEN A.ProductType = 1 
	    AND EXISTS(SELECT TOP 1 1 FROM dbo.sale_gift AS gift WITH(Nolock) 
          WHERE CHARINDEX(','+CAST(gift.ProductSysNo AS NVARCHAR)+',', ','+A.MasterProductSysNo+',') > 0
		    AND gift.GiftSysNo=A.ProductSysNo 
		    AND gift.isOnlineShow = 0
		    AND gift.Status <> -1) 
        THEN 5 ELSE A.ProductType END AS ProductType,
	    A.GiftSysNo AS GiftID,
	    A.BriefName,
	    A.OriginalPrice,
	    A.PromotionDiscount,
	    A.IsDuplicateOrder,
	    A.DuplicateSOSysNo,
	    A.MasterProductSysNo,
	    A.WarehouseNumber,
	    A.UnitCostWithoutTax,
	    A.IsMemberPrice,
	    p.ProductID AS Code,
	    p.Status,
	    p.C3SysNo,
	    price.MaxPerOrder,
	    stock.StockName AS WarehouseName,
      stock.CountryCode AS CountryCode,
	    0 as TariffRate,
      '' as EntryCode,
      '' as TariffCode,
      A.TariffAmt
    FROM dbo.SO_Item A WITH (NOLOCK)
    LEFT JOIN dbo.Product p WITH (NOLOCK) ON p.SysNo = a.ProductSysNo 
      LEFT JOIN dbo.Product_Price AS price WITH (NOLOCK) ON a.ProductSysNo = price.ProductSysNo
      LEFT JOIN dbo.Stock AS stock WITH (NOLOCK) ON a.WarehouseNumber = stock.SysNo
       -- join IPP3..Product_EntryInfo e (nolock)
	  --  on e.ProductSysNo=p.SysNo
    WHERE A.SOSysNo = @SOID AND A.ProductType<>3
    ORDER BY A.SysNo
			]]>
    </commandText>
    <parameters>
      <param name="@SOID" dbType="Int32" size="4"/>
    </parameters>
  </dataCommand>

  <!--加载关务对接相关信息-->
  <dataCommand name="Order_LoadVendorCustomsInfo" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
SELECT vci.* FROM IPP3.dbo.Vendor_Customs_Info AS vci WITH(NOLOCK)
INNER JOIN IPP3.dbo.SO_CheckShipping AS socs WITH(NOLOCK) ON socs.MerchantSysNo=vci.MerchantSysNo
INNER JOIN IPP3.dbo.SO_Master AS som WITH(NOLOCK) ON som.SysNo=socs.SOSysNo
WHERE
	som.SOID=@SOID
			]]>
    </commandText>
    <parameters>
      <param name="@SOID" dbType="Int32" size="4"/>
    </parameters>
  </dataCommand>

  <!--加载关务对接相关信息-->
  <dataCommand name="Order_LoadVendorCustomsInfoByProduct" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
SELECT TOP 1 vci.* FROM IPP3.dbo.Vendor_Customs_Info AS vci WITH(NOLOCK)
INNER JOIN IPP3.dbo.Product AS p WITH(NOLOCK) ON p.MerchantSysNo = vci.MerchantSysNo
WHERE
	p.ProductID=@ProductID
			]]>
    </commandText>
    <parameters>
      <param name="@ProductID" dbType="String"/>
    </parameters>
  </dataCommand>
  
  
   <dataCommand name="Order_GetQueryDbSOAuthenticationInfo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT TOP 1  [SOSysNo]
          ,[CustomerSysNo]
          ,[Name]
          ,[IDCardType]
          ,[IDCardNumber]
          ,[Birthday]
          ,[PhoneNumber]
          ,[Email]
          ,[Address]
          ,[Gender]
      FROM [IPP3].[dbo].[SO_Authentication] as soa WITH(NOLOCK)
      WHERE 1 = 1 
      AND soa.CustomerSysNo = @CustomerSysNo 
      AND soa.SOSysNo = @SOSysNo 
			]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32" />
      <param name="@CustomerSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
  <!--加载订单贸易类型-->
  <dataCommand name="Order_GetOrderTradeType" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT s.StockType
FROM [IPP3].[dbo].[SO_CheckShipping] AS socs WITH(NOLOCK)
INNER JOIN [IPP3].[dbo].[Stock] AS s WITH(NOLOCK) ON s.SysNo = socs.LocalWHSysNo
WHERE socs.SOSysNo = @SOSysNo
			]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
  
</dataOperations>
