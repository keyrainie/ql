<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <!--根据PageType及PageID查询推荐品牌-->
  <dataCommand name="Recommend_QueryRecommendBrand" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
SELECT rec.[Level_No]
      ,rec.[Level_Code]
      ,rec.[Level_Name]
      ,rec.[BrandSysNo]
      ,b.NeweggUrl
      ,b.ADImage
      ,b.BrandName_En
      ,b.BrandName_Ch
  FROM [OverseaECommerceManagement].[dbo].[DM_PV_BrandRank_CN] rec
  inner join OverseaContentManagement.dbo.Brand b
  on rec.BrandSysNo=b.SysNo
  where rec.[Level_No]=@PageType
  and rec.[Level_Code]=@PageID
  AND b.Status='A' AND b.HasLogo='Y'
			]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@PageType"/>
      <param dbType="Int32" name="@PageID"/>
    </parameters>
  </dataCommand>
  
  <dataCommand name="QueryNewProductForC1" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
select top 10 
	isnull(product_status.LastOnlineTime,product_status.FirstOnlineTime) as OnlineTime,
	product.SysNo,
  [OverseaContentManagement].[dbo].FN_EC_GetProductPromotionTitle(product.SysNo) as PromotionTitle,
	product.BrandSysNo,
	product.BriefName,
	product.ProductID,
	product.DefaultImage,
  0 as TariffRate,
	product.ProductName,
	product.ProductTitle,
	price.CurrentPrice,
	price.BasicPrice,
	price.Discount,
  price.CashRebate,
	1 as Priority
from IPP3..Product product (nolock)
	join IPP3..Product_Status product_status(nolock)
		on product_status.ProductSysNo=product.SysNo
  	--join IPP3..Product_EntryInfo e (nolock)
		--on e.ProductSysNo=product.SysNo
	join IPP3..Product_Price price(nolock)
		on price.ProductSysNo = product.SysNo
	join OverseaECommerceManagement.dbo.EC_Category  eccate(nolock)
		on eccate.C3Sysno=product.C3SysNo
	join OverseaECommerceManagement.dbo.EC_CategoryRelation ec_cate_r (nolock)
		on ec_cate_r.EC_CategorySysno=eccate.Sysno
where ec_cate_r.TopCategorySysno is not null 
	and product.Status=1
	and (product_status.LastOnlineTime is not null or product_status.FirstOnlineTime is not null)
	and ec_cate_r.TopCategorySysno=@ECCateSysNo
	and product.LanguageCode=@LanguageCode
	and product.CompanyCode=@CompanyCode
order by OnlineTime desc
			]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ECCateSysNo"/>
      <param dbType="String" name="@LanguageCode"/>
      <param dbType="String" name="@CompanyCode"/>
    </parameters>
  </dataCommand>

  <dataCommand name="QuerySuperSpecialProductForC1" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
select top 10 
	(price.CurrentPrice-price.BasicPrice) as diff,
	product.SysNo,
  [OverseaContentManagement].[dbo].FN_EC_GetProductPromotionTitle(product.SysNo) as PromotionTitle,
	product.BrandSysNo,
	product.BriefName,
  0 as TariffRate,
	product.ProductID,
	product.DefaultImage,
	product.ProductName,
	product.ProductTitle,
	price.CurrentPrice,
	price.BasicPrice,
  price.CashRebate,
	price.Discount,
	1 as Priority
from IPP3..Product product (nolock)
	join IPP3..Product_Price price(nolock)
		on price.ProductSysNo = product.SysNo
    --	join IPP3..Product_EntryInfo e (nolock)
		--on e.ProductSysNo=product.SysNo
	join OverseaECommerceManagement.dbo.EC_Category  eccate(nolock)
		on eccate.C3Sysno=product.C3SysNo
	join OverseaECommerceManagement.dbo.EC_CategoryRelation ec_cate_r (nolock)
		on ec_cate_r.EC_CategorySysno=eccate.Sysno
where ec_cate_r.TopCategorySysno is not null 
	and product.Status=1
	and price.BasicPrice is not null
	and price.BasicPrice>0
	and ec_cate_r.TopCategorySysno=@ECCateSysNo
	and product.LanguageCode=@LanguageCode
	and product.CompanyCode=@CompanyCode
order by diff desc
			]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ECCateSysNo"/>
      <param dbType="String" name="@LanguageCode"/>
      <param dbType="String" name="@CompanyCode"/>
    </parameters>
  </dataCommand>


	
	
	

  <dataCommand name="QueryHotProductForC1" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
select top 10
	product.SysNo,
  [OverseaContentManagement].[dbo].FN_EC_GetProductPromotionTitle(product.SysNo) as PromotionTitle,
	product.BrandSysNo,
	product.BriefName,
	product.ProductID,
 -- 	e.TariffRate,
	product.DefaultImage,
	product.ProductName,
	product.ProductTitle,
	price.CurrentPrice,
  price.CashRebate,
	price.BasicPrice,
	price.Discount,
	1 as Priority
from IPP3..Product product (nolock)
	join IPP3..Product_Price price(nolock)
		on price.ProductSysNo=product.SysNo
   -- 	join IPP3..Product_EntryInfo e (nolock)
	--	on e.ProductSysNo=product.SysNo
	join OverseaECommerceManagement.dbo.EC_Category  eccate(nolock)
		on eccate.C3Sysno=product.C3SysNo
	join OverseaECommerceManagement.dbo.EC_CategoryRelation ec_cate_r (nolock)
		on ec_cate_r.EC_CategorySysno=eccate.Sysno
	left join (
		select  *
		from (
		select ProductSysNo,
			isnull(SUM(Quantity),0) as Qty
		from IPP3..SO_Item
		group by ProductSysNo
		) as t
	) as tmp
		on tmp.ProductSysNo=product.SysNo
		
where product.Status=1
	and product.LanguageCode=@LanguageCode
	and product.CompanyCode=@CompanyCode
	and ec_cate_r.TopCategorySysno=@ECCateSysNo
order by tmp.Qty desc
			]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ECCateSysNo"/>
      <param dbType="String" name="@LanguageCode"/>
      <param dbType="String" name="@CompanyCode"/>
    </parameters>
  </dataCommand>

  <dataCommand name="QuerySuperSpecialProductForC2" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
        select top 10 
	        (price.CurrentPrice-price.BasicPrice) as diff,
	        product.SysNo,
          [OverseaContentManagement].[dbo].FN_EC_GetProductPromotionTitle(product.SysNo) as PromotionTitle,
	        product.BrandSysNo,
	        product.BriefName,
         -- e.TariffRate,
	        product.ProductID,
	        product.DefaultImage,
	        product.ProductName,
	        product.ProductTitle,
	        price.CurrentPrice,
	        price.BasicPrice,
          price.CashRebate,
	        price.Discount,
	        1 as Priority
        from IPP3..Product product (nolock)
	        join IPP3..Product_Price price(nolock)
		        on price.ProductSysNo = product.SysNo
    	   --     join IPP3..Product_EntryInfo e (nolock)
		    --    on e.ProductSysNo=product.SysNo
	        join OverseaECommerceManagement.dbo.EC_Category  eccate(nolock)
		        on eccate.C3Sysno=product.C3SysNo
	        join [OverseaECommerceManagement].dbo.EC_CategoryRelation ecr(nolock)
		        on eccate.SysNo=ecr.EC_CategorySysno
        where product.Status=1
	        and price.BasicPrice is not null
	        and price.BasicPrice>0
	        and ecr.ParentSysno=(SELECT SysNo FROM OverseaECommerceManagement.dbo.EC_CategoryRelation(NOLOCK) WHERE EC_CategorySysno=@ECCateSysNo)
	        and product.LanguageCode=@LanguageCode
	        and product.CompanyCode=@CompanyCode
        order by diff desc
			]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ECCateSysNo"/>
      <param dbType="String" name="@LanguageCode"/>
      <param dbType="String" name="@CompanyCode"/>
    </parameters>
  </dataCommand>

  <dataCommand name="QuerySuperSpecialProductForC3" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
        select top 10 
	        (price.CurrentPrice-price.BasicPrice) as diff,
	        product.SysNo,
          [OverseaContentManagement].[dbo].FN_EC_GetProductPromotionTitle(product.SysNo) as PromotionTitle,
	        product.BrandSysNo,
	        product.BriefName,
         -- e.TariffRate,
	        product.ProductID,
	        product.DefaultImage,
	        product.ProductName,
	        product.ProductTitle,
	        price.CurrentPrice,
	        price.BasicPrice,
          price.CashRebate,
	        price.Discount,
	        1 as Priority
        from IPP3..Product product (nolock)
	        join IPP3..Product_Price price(nolock)
		        on price.ProductSysNo = product.SysNo
    	      --  join IPP3..Product_EntryInfo e (nolock)
		      --  on e.ProductSysNo=product.SysNo
	        join OverseaECommerceManagement.dbo.EC_Category  eccate(nolock)
		        on eccate.C3Sysno=product.C3SysNo
	        join [OverseaECommerceManagement].dbo.EC_CategoryRelation ecr(nolock)
		        on eccate.SysNo=ecr.EC_CategorySysno
        where product.Status=1
	        and price.BasicPrice is not null
	        and price.BasicPrice>0
	        and ecr.EC_CategorySysno=@ECCateSysNo
	        and product.LanguageCode=@LanguageCode
	        and product.CompanyCode=@CompanyCode
        order by diff desc
			]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ECCateSysNo"/>
      <param dbType="String" name="@LanguageCode"/>
      <param dbType="String" name="@CompanyCode"/>
    </parameters>
  </dataCommand>

  <dataCommand name="QueryHotProductForC2" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
        select top 10
	        product.SysNo,
          [OverseaContentManagement].[dbo].FN_EC_GetProductPromotionTitle(product.SysNo) as PromotionTitle,
	        product.BrandSysNo,
	        product.BriefName,
	        product.ProductID,
  	      --  e.TariffRate,
	        product.DefaultImage,
	        product.ProductName,
	        product.ProductTitle,
	        price.CurrentPrice,
          price.CashRebate,
	        price.BasicPrice,
	        price.Discount,
	        1 as Priority
        from IPP3..Product product (nolock)
	        join IPP3..Product_Price price(nolock)
		        on price.ProductSysNo=product.SysNo
    	    --    join IPP3..Product_EntryInfo e (nolock)
		     --   on e.ProductSysNo=product.SysNo
	        join OverseaECommerceManagement.dbo.EC_Category  eccate(nolock)
		        on eccate.C3Sysno=product.C3SysNo
	        join [OverseaECommerceManagement].dbo.EC_CategoryRelation ecr(nolock)
		        on eccate.SysNo=ecr.EC_CategorySysno
	        left join (
		        select  *
		        from (
		        select ProductSysNo,
			        isnull(SUM(Quantity),0) as Qty
		        from IPP3..SO_Item
		        group by ProductSysNo
		        ) as t
	        ) as tmp
		        on tmp.ProductSysNo=product.SysNo
		
        where product.Status=1
	        and product.LanguageCode=@LanguageCode
	        and product.CompanyCode=@CompanyCode
	        and ecr.ParentSysno=(SELECT SysNo FROM OverseaECommerceManagement.dbo.EC_CategoryRelation(NOLOCK) WHERE EC_CategorySysno=@ECCateSysNo)
        order by tmp.Qty desc
			]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ECCateSysNo"/>
      <param dbType="String" name="@LanguageCode"/>
      <param dbType="String" name="@CompanyCode"/>
    </parameters>
  </dataCommand>

  <dataCommand name="QueryHotProductForC3" database="Read" commandType="Text">
    <commandText>
      <![CDATA[

select top 10
	product.SysNo,
  [OverseaContentManagement].[dbo].FN_EC_GetProductPromotionTitle(product.SysNo) as PromotionTitle,
	product.BrandSysNo,
	product.BriefName,
	product.ProductID,
	product.DefaultImage,
	product.ProductName,
	product.ProductTitle,
 -- e.TariffRate,
	price.CurrentPrice,
	price.BasicPrice,
  price.CashRebate,
	price.Discount,
	1 as Priority
from IPP3..Product product (nolock)
	join IPP3..Product_Price price(nolock)
		on price.ProductSysNo=product.SysNo
   -- join IPP3..Product_EntryInfo e (nolock)
	--	on e.ProductSysNo=product.SysNo
	join (
		select ec_cate.Sysno,
			ec_cate.C3SysNo,
			ec_cate.Status
		from OverseaECommerceManagement.dbo.EC_Category ec_cate (nolock) 
			join ( 
					select * from OverseaECommerceManagement.dbo.EC_CategoryRelation 
					where ParentSysno in 
						( 
						select Sysno from OverseaECommerceManagement.dbo.EC_CategoryRelation 
						where ParentSysno in 
							( 
							select Sysno from OverseaECommerceManagement.dbo.EC_CategoryRelation where ParentSysno is null 
							) 
						) 
					) as tmp 
				on tmp.EC_CategorySysno=ec_cate.Sysno 
		) as tp
	on tp.C3Sysno=product.C3SysNo
	left join (
		select  *
		from (
		select ProductSysNo,
			isnull(SUM(Quantity),0) as Qty
		from IPP3..SO_Item
		group by ProductSysNo
		) as t
	) as tmp
		on tmp.ProductSysNo=product.SysNo
where tp.Status='A'
	and tp.Sysno=@ECC3SysNo
	and product.Status=1
	and product.LanguageCode=@LanguageCode
	and product.CompanyCode=@CompanyCode
order by tmp.Qty desc
			]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ECC3SysNo"/>
      <param dbType="String" name="@LanguageCode"/>
      <param dbType="String" name="@CompanyCode"/>
    </parameters>
  </dataCommand>

  <!--获取广告信息-->
  <dataCommand name="Content_GetBannerInfoByPositionID" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
select * 
from (
	select
			   info.SysNo,
			   info.BannerTitle,
			   info.BannerText,
			   info.BannerResourceUrl,
			   info.BannerLink,
			   location.BeginDate,
			   location.EndDate,
			   dimension.Width,
			   dimension.Height,
			   location.Priority,
         location.RelativeTags,
			   info.BannerType,
			   info.Description,
         dimension.PositionID,
         location.PageID,
         dimension.PageType
			FROM OverseaECommerceManagement.dbo.BannerInfo info
				INNER JOIN OverseaECommerceManagement.dbo.BannerLocation location
					ON info.Sysno= location.BannerInfoSysNo
				INNER JOIN OverseaECommerceManagement.dbo.BannerDimension dimension
					ON dimension.SysNo = location.BannerDimensionSysNo
			WHERE info.Status = 'A'
				AND location.PageID = @PageID
        AND dimension.PageType = @PageType
				AND (@PositionID IS NULL OR dimension.PositionID = @PositionID)
				       
	) as t
where (GETDATE() between BeginDate and EndDate)
	or (BeginDate is null and EndDate is null)
	or (EndDate is not null and BeginDate is null and GETDATE()<=EndDate)
	or (BeginDate is not null and EndDate is null and GETDATE()>=BeginDate)
order by t.PageType asc,t.PageID asc,t.PositionID asc,t.Priority asc
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@PageType" />
      <param dbType="Int32" name="@PositionID" />
      <param dbType="Int32" name="@PageID" />
    </parameters>
  </dataCommand>


  <!--Floor 相关SQL Begin-->
  <dataCommand name="Content_GetFloorInfo" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
	         fm.SysNo AS FloorSysNo,
	         fm.FloorName,
	         fm.FloorLogoSrc,
	         fm.Priority,
	         fm.Remark,
	         ft.TemplateSysNo,
	         ft.TemplateName,
	         ft.PartialView
        FROM OverseaECommerceManagement.dbo.FloorMaster fm WITH(NOLOCK)
        INNER JOIN OverseaECommerceManagement.dbo.FloorTemplate ft WITH(NOLOCK)
           ON fm.TemplateSysNo = ft.TemplateSysNo
        WHERE fm.Status = 1
          AND ft.Status = 1
          AND fm.PageCode = @PageCode AND fm.PageType=@PageType
        ORDER BY fm.Priority ASC
      ]]>
    </commandText>
    <parameters>
      <param name="@PageCode" dbType="Int32" size="50"/>
      <param name="@PageType" dbType="Int32" size="50"/>
    </parameters>
  </dataCommand>

  <dataCommand name="Content_GetFloorSections" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
             fs.SysNo,
             fs.SectionName,
             fs.Priority
        FROM OverseaECommerceManagement.dbo.FloorSection fs WITH(NOLOCK)
        WHERE fs.FloorMasterSysNo = @SysNo
          AND fs.Status = 1
        ORDER BY fs.Priority
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" size="4"/>
    </parameters>
  </dataCommand>

  <dataCommand name="Content_GetFloorSectionItems" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
             fsi.FloorSectionSysNo,
             fsi.Priority,
             fsi.ItemType,
             fsi.ItemPosition,
             fsi.ItemValue,
             fsi.IsSelfPage
        FROM OverseaECommerceManagement.dbo.FloorSectionItem fsi WITH(NOLOCK)
        WHERE fsi.FloorMasterSysNo = @SysNo
        ORDER BY fsi.Priority
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" size="4"/>
    </parameters>
  </dataCommand>
  <dataCommand name="QueryNewProduct" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
select top 10 
	isnull(product_status.LastOnlineTime,product_status.FirstOnlineTime) as OnlineTime,
	product.SysNo,
	product.BrandSysNo,
	product.BriefName,
	product.ProductID,
	product.DefaultImage,
	product.ProductName,
	product.ProductTitle,
	price.CurrentPrice,
	price.BasicPrice,
	price.Discount,
	1 as Priority,
	price.CashRebate
--	e.TariffRate
from IPP3..Product product (nolock)
	join IPP3..Product_Status product_status(nolock)
		on product_status.ProductSysNo=product.SysNo
	join IPP3..Product_Price price(nolock)
		on price.ProductSysNo = product.SysNo
--	inner join IPP3..Product_EntryInfo e (nolock)
	--	on e.ProductSysNo=product.SysNo
where product.Status=1
	and (product_status.LastOnlineTime is not null or product_status.FirstOnlineTime is not null)
	and product.LanguageCode=@LanguageCode
	and product.CompanyCode=@CompanyCode
order by OnlineTime desc
      ]]>
    </commandText>
    <parameters>
      <param dbType="String" name="@LanguageCode"/>
      <param dbType="String" name="@CompanyCode"/>
    </parameters>
  </dataCommand>
  <!--Floor 相关SQL End-->
  
  <!--取得一周热销商品-->
  <dataCommand name="QueryWeeklyHotProduct" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
select top 5
	product.SysNo,
  [OverseaContentManagement].[dbo].FN_EC_GetProductPromotionTitle(product.SysNo) as PromotionTitle,
	product.BrandSysNo,
	product.BriefName,
	product.ProductID,
	product.DefaultImage,
	product.ProductName,
	product.ProductTitle,
--  e.TariffRate,
	price.CurrentPrice,
	price.BasicPrice,
  price.CashRebate,
	price.Discount,
	1 as Priority
from IPP3..Product product (nolock)
	inner join IPP3..Product_Price price(nolock)
		on price.ProductSysNo=product.SysNo
	inner join dbo.Product_Status st(nolock)
		on st.ProductSysNo=product.SysNo
   -- inner join IPP3..Product_EntryInfo e (nolock)
	--	on e.ProductSysNo=product.SysNo
	left join (
		select  *
		from (
		select ProductSysNo,
			isnull(SUM(Quantity),0) as Qty
		from IPP3..SO_Item i
		inner join IPP3..SO_Master so
		 on i.SOSysNo = so.SysNo
		where so.OrderDate between DateADD(d,-7,getdate()) and getdate()    
		group by ProductSysNo
		) as t
	) as tmp
		on tmp.ProductSysNo=product.SysNo
where product.Status=1
	and product.LanguageCode=@LanguageCode
	and product.CompanyCode=@CompanyCode
order by tmp.Qty,st.firstonlineTime desc
      ]]>
    </commandText>
    <parameters>
      <param dbType="String" name="@LanguageCode"/>
      <param dbType="String" name="@CompanyCode"/>
    </parameters>
  </dataCommand>
  
</dataOperations>
