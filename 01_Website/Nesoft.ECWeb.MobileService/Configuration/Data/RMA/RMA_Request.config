<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <dataCommand name="CreateRequestMasterSysNo" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
INSERT INTO dbo.RMA_Request_Sequence(CreateTime)
    SELECT GETDATE()

SELECT @SysNo = IDENT_CURRENT('dbo.RMA_Request_Sequence')
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" direction="Output" />
    </parameters>
  </dataCommand>

  <dataCommand name="InsertRequestMaster" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
INSERT INTO dbo.RMA_Request(
    SysNo,
    RequestID,
    SOSysNo,
    CustomerSysNo,
    CreateTime,
    --RecvTime,
    --CustomerSendTime,
    Address,
    Contact,
    Phone,
    Status,
    AreaSysNo,
    ShipViaCode,
    IsSubmit,
    TrackingNumber,
    StockType,
    ShippingType,
    InvoiceType,
    MerchantSysno,
    CreateUserSysNo
)
VALUES 
   ( 
    @SysNo,
    @RequestID,
    @SOSysNo,
    @CustomerSysNo,
    GETDATE(),
    --GETDATE(),
    --GETDATE(),
    @Address,
    @Contact,
    @Phone,
    @Status,
    @AreaSysNo,
    @ShipViaCode,
    @IsSubmit,
    @TrackingNumber,
    @StockType,
    @ShippingType,
    @InvoiceType,
    @MerchantSysno,
    3026
    )
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo"            dbType="Int32"         direction="Input"       />
      <param name="@RequestID"        dbType="String"         direction="Input"      />
      <param name="@SOSysNo"          dbType="Int32"    direction="Input" />
      <param name="@CustomerSysNo"    dbType="Int32"    direction="Input" />
      <param name="@Address"          dbType="String"      direction="Input"         />
      <param name="@Contact"          dbType="String"    direction="Input"           />
      <param name="@Phone"            dbType="String"     direction="Input"          />
      <param name="@Status"            dbType="Int32"     direction="Input"          />
      <param name="@AreaSysNo"        dbType="Int32"        direction="Input"        />
      <param name="@ShipViaCode"      dbType="String"        direction="Input"       />
      <param name="@IsSubmit"         dbType="Int32"         direction="Input"       />
      <param name="@TrackingNumber"         dbType="String"         direction="Input"       />
      <param name="@StockType"        dbType="String"        direction="Input"        />
      <param name="@ShippingType"     dbType="String"        direction="Input"        />
      <param name="@InvoiceType"      dbType="String"        direction="Input"        />
      <param name="@MerchantSysno"      dbType="Int32"        direction="Input"        />
    </parameters>
  </dataCommand>

  <dataCommand name="SubmitRMARequest" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE [IPP3].[dbo].[RMA_Request]
SET
IsSubmit = @IsSubmit
,Address = @Address
,Contact = @Contact
,Phone = @Phone
,AreaSysNo = @AreaSysNo
where SysNo = @SysNo

select @RequestID =  RequestID 
from [IPP3].[dbo].[RMA_Request] where SysNo = @SysNo
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo"            dbType="Int32"         direction="Input"       />
      <param name="@Address"          dbType="String"      direction="Input"         />
      <param name="@Contact"          dbType="String"    direction="Input"           />
      <param name="@Phone"            dbType="String"     direction="Input"          />
      <param name="@AreaSysNo"        dbType="Int32"        direction="Input"        />
      <param name="@IsSubmit"         dbType="Int32"         direction="Input"       />
      <param name="@RequestID" dbType="String" size="50" direction="Output"/>
    </parameters>
  </dataCommand>

  <dataCommand name="QueryRequests" database="Read" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @Condition NVARCHAR(MAX)
	SET @Condition = N' Where 1=1 '
	IF (ISNULL(@CustomerSysNo,0) <> 0)
	BEGIN
		SET @Condition = @Condition + N' AND CustomerSysNo = @CustomerSysNo'
	END
	
	IF (ISNULL(@SOSysNo,0) <> 0)
	BEGIN
		SET @Condition = @Condition + N' AND SOSysNo = @SOSysNo'
	END
  
  IF (ISNULL(@SysNo,0) <> 0)
	BEGIN
		SET @Condition = @Condition + N' AND SysNo = @SysNo'
	END
  
  IF (ISNULL(@RequestID,'') <> '')
	BEGIN
		SET @Condition = @Condition + N' AND RequestID = @RequestID'
	END
  
  DECLARE @SQL NVARCHAR(MAX)
  
SET @SQL = N'
    SELECT TOP (@PageSize) 
    request.SysNo,
    RequestID,
    request.SOSysNo,
    CustomerSysNo,
    request.CreateTime,
    RecvTime,
    CustomerSendTime,
    Address,
    Contact,
    Phone,
    Status,
    AreaSysNo,
    ShipViaCode,
    request.ShippingType,
    TrackingNumber,
    IsSubmit,
    sc.merchantSysNo AS [VendorSysNo]
    INTO #Temp
    FROM(
    SELECT  * ,
    ROW_NUMBER() OVER (ORDER BY SysNo DESC) AS RowNumber FROM IPP3.dbo.RMA_Request @Condition
    ) as request
    LEFT JOIN ipp3.dbo.so_CheckShipping sc WITH(NOLOCK) ON sc.SOSysno=request.SOSysno
    where request.RowNumber>@PageSize*(@PageIndex-1) 
 
 SELECT @TotalCount = COUNT(1) FROM IPP3.dbo.RMA_Request @Condition
 
 select * FROM #Temp
 
 SELECT 
       I.[SysNo]
      ,I.[ProductSysNo]
      ,I.[RequestType]
      ,I.[CustomerDesc]
      ,I.[RMAReason]
      ,I.[RevertStatus]
      ,I.[Status]
      ,P.[ProductName]
      ,P.[DefaultImage]
      ,RI.[RequestSysNo]
    FROM IPP3.dbo.RMA_Register I WITH(NOLOCK)
    INNER JOIN IPP3.dbo.Product P WITH(NOLOCK)
    ON I.ProductSysNo=P.SysNo 
    INNER JOIN IPP3.dbo.RMA_Request_Item RI WITH(NOLOCK)
    ON I.SysNo=RI.RegisterSysNo AND RI.RequestSysNo IN(
	    SELECT SysNo FROM #Temp	
    )
 '
 
 SET @SQL = REPLACE(@SQL,'@Condition',@Condition)
  
EXECUTE SP_EXECUTESQL @SQL 
                  ,N'@RequestID nvarchar(200) 
									,@CustomerSysNo int 
									,@SOSysNo int
                  ,@SysNo int
									,@PageSize int
									,@PageIndex int
									,@TotalCount int OUTPUT' 
                  ,@RequestID
									,@CustomerSysNo
									,@SOSysNo
                  ,@SysNo
									,@PageSize
									,@PageIndex
									,@TotalCount OUTPUT
			]]>
    </commandText>
    <parameters>
      <param name="@RequestID" dbType="String" size="200" />
      <param name="@CustomerSysNo" dbType="Int32" />
      <param name="@SOSysNo" dbType="Int32" />
      <param name="@SysNo" dbType="Int32" />
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageIndex" dbType="Int32" />
      <param name="@TotalCount" dbType="Int32" direction="Output"/>
    </parameters>
  </dataCommand>



  <dataCommand name="QueryCanRequestOrders" database="Write" commandType="Text">
    <commandText>
      <![CDATA[

IF EXISTS(SELECT * FROM tempdb..sysobjects WHERE id= OBJECT_ID('tempdb..#CanRMAOrder'))
DROP TABLE #CanRMAOrder

IF EXISTS(SELECT * FROM tempdb..sysobjects WHERE id= OBJECT_ID('tempdb..#CanRMAPagedOrder'))
DROP TABLE #CanRMAPagedOrder


SELECT
  so.[SysNo] AS SOSysno,
	so.[Status],
	so.[CustomerSysNo],
	so.[OrderDate],
	sp.[IsPayWhenRecv],
	sp.[IsNet],
	sc.[SOType],
	sc.[IsDCOrder],
	sc.[SOSplitType],
	sc.[SOSplitMaster],
	so.CashPay,
	so.DiscountAmt,
	so.GiftCardPay,
	so.PayPrice,
	so.PointAmt,
	so.PointPay,
	so.PremiumAmt,
	so.PrepayAmt,
	so.SOAmt,
	so.ShipPrice,
	so.TariffAmt,
	sc.MerchantSysNo
INTO #CanRMAOrder
FROM
	ipp3.dbo.SO_Master so (NOLOCK)
INNER JOIN ipp3.dbo.PayType as sp WITH (NOLOCK) ON so.PayTypeSysNo = sp.SysNo 
LEFT JOIN IPP3.dbo.SO_CheckShipping as sc WITH(NOLOCK) ON so.SysNo = sc.SOSysNo 
LEFT JOIN IPP3.dbo.Finance_NetPay as netpay WITH(NOLOCK) ON so.SysNo=netpay.SOSysNo
WHERE
   so.[Status]>=@SOStatus AND so.CustomerSysNo=@CustomerSysNo
   AND (ISNULL(@ProductName,'')=N'' OR EXISTS(
	SELECT TOP 1 1 FROM ipp3.dbo.SO_Item item WITH(NOLOCK)
	INNER JOIN ipp3.dbo.Product pro WITH(NOLOCK) ON item.ProductSysNo=pro.SysNo
	WHERE item.SOSysNo=so.SysNo AND pro.ProductName LIKE @ProductName
   )) 
   AND (ISNULL(@SOID,'')=N'' OR so.SOID=@SOID)
   AND (ISNULL(@SOIDList,'')=N'' OR EXISTS(SELECT TOP 1 1 FROM ipp3.[dbo].[FN_EC_Split](@SOIDList,',')t WHERE t.Data=so.SOID))
   AND EXISTS(
	SELECT TOP 1 1 FROM ipp3.dbo.SO_Item soItem (NOLOCK)
	LEFT JOIN(
		SELECT SOSysno,ProductSysNo,SoItemType,COUNT(ProductSysNo)AS Quantity 
    FROM ipp3.dbo.RMA_Register register (NOLOCK)
    INNER JOIN ipp3.dbo.RMA_Request_Item request_item (NOLOCK)
	 ON register.Sysno =  request_item.RegisterSysno
	INNER JOIN ipp3.dbo.RMA_Request request (NOLOCK)
	 ON request.SysNo = request_item.RequestSysNo
	WHERE request.Status = @WaitingAudit OR  request.Status = @Origin OR request.Status = @Handling  OR  request.Status = 2
	GROUP BY ProductSysNo,SoItemType,SOSysno
	)register 
	ON register.ProductSysNo = soItem.ProductSysNo AND register.SoItemType=soItem.ProductType 
     AND register.SOSysno = so.Sysno
	 WHERE soItem.SOSysno= so.Sysno 
   AND soItem.ProductType<>3
	 AND soItem.Quantity>isnull(register.Quantity,0)
	)


SELECT @TotalCount=COUNT(1) 
FROM #CanRMAOrder WITH(NOLOCK)


SELECT TOP(@PageSize) *
INTO #CanRMAPagedOrder
FROM (
SELECT *
	,ROW_NUMBER() OVER(ORDER BY SOSysno) RowNumber
 FROM #CanRMAOrder WITH(NOLOCK)
)Result 
WHERE Result.RowNumber>@PageSize*(@PageIndex-1) 


SELECT SoSysNo,
	[Status],
	[CustomerSysNo],
	[OrderDate],
	[IsPayWhenRecv],
	[IsNet],
	[SOType],
	[IsDCOrder],
	[SOSplitType],
	[SOSplitMaster],
	CashPay AS [Amount.CashPay],
	DiscountAmt AS [Amount.DiscountAmt],
	GiftCardPay AS [Amount.GiftCardPay],
	PayPrice AS [Amount.PayPrice],
	PointAmt AS [Amount.PointAmt],
	PointPay  AS [Amount.PointPay],
	PremiumAmt AS [Amount.PremiumAmt],
	PrepayAmt AS [Amount.PrepayAmt],
	SOAmt AS [Amount.SOAmt],
	ShipPrice AS [Amount.ShipPrice],
	TariffAmt,
	MerchantSysNo
FROM #CanRMAPagedOrder WITH(NOLOCK)
ORDER BY OrderDate DESC


SELECT 
	T.SoSysNo
    ,pd.SysNo AS ProductSysNo
    ,pd.ProductID
    ,pd.ProductName
    ,si.ProductType
    ,pd.ProductTitle
    ,pd.DefaultImage
    ,si.Quantity-ISNULL(rg.Quantity,0) AS Quantity
    ,si.Price
    ,si.Weight
    ,si.Price
    ,si.Cost
    ,si.Point
    ,si.PointType
    ,si.DiscountAmt
    ,si.OriginalPrice
FROM
#CanRMAPagedOrder AS T
INNER JOIN ipp3..so_item si(nolock)
 ON T.SoSysNo=si.SoSysNo
INNER JOIN ipp3..product pd(nolock)
 ON pd.SysNo=si.ProductSysNo	
LEFT JOIN(
  SELECT SoSysno,rg.ProductSysNo,rg.SoItemType,COUNT(rg.SysNo) AS Quantity
  FROM ipp3.dbo.RMA_Register rg WITH(NOLOCK)
  INNER JOIN ipp3.dbo.RMA_Request_Item ri WITH(NOLOCK)
   ON ri.Registersysno=rg.Sysno
  INNER JOIN ipp3.dbo.RMA_Request request (NOLOCK)
	 ON request.SysNo = ri.RequestSysNo
  WHERE request.Status = @WaitingAudit OR  request.Status = @Origin OR  request.Status = @Handling  OR  request.Status = 2
  GROUP BY rg.ProductSysNo,rg.SoItemType,SoSysno
)rg ON rg.ProductSysNo = si.ProductSysNo
 AND rg.SoItemType=si.ProductType
 AND rg.SoSysno= T.SoSysno
WHERE  si.ProductType<>3
 AND si.Quantity-ISNULL(rg.Quantity,0)>0
 
IF EXISTS(SELECT 1 FROM sysobjects WHERE id= OBJECT_ID('tempdb..#CanRMAOrder'))
DROP TABLE #CanRMAOrder

IF EXISTS(SELECT * FROM tempdb..sysobjects WHERE id= OBJECT_ID('tempdb..#CanRMAPagedOrder'))
DROP TABLE #CanRMAPagedOrder
			]]>
    </commandText>
    <parameters>
      <param name="@SOStatus" dbType="Int32" />
      <param name="@CustomerSysNo" dbType="Int32" />
      <param name="@SOID" dbType="String" />
      <param name="@SOIDList" dbType="String" />
      <param name="@ProductName" dbType="String" />
      <param name="@WaitingAudit" dbType="Int32" />
      <param name="@Origin" dbType="Int32" />
      <param name="@Handling" dbType="Int32" />
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageIndex" dbType="Int32" />
      <param name="@TotalCount" dbType="Int32" direction="Output"/>
    </parameters>
  </dataCommand>
</dataOperations>
