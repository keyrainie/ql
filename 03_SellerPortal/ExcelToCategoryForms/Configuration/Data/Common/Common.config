<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">

  <dataCommand name="InsertAddCategory1" database="Write" commandType="Text">
    <commandText>
      <![CDATA[			
--declare  @SysNo int    --真正类别编号
declare  @Category_RequestSysNo int    --审核表类别编号
--declare  @CategoryName varchar(4000)  --= 'sql测试测试第二次'   --需要传入

declare  @EC_CategorySysNo int    --前台显示分类编号
--declare  @EC_CategoryRelationSysNo int  --前台显示分类关系表SysNo

----商品一级类别导入
--模拟审核
INSERT INTO IPP3.dbo.Category_Request
		(
			CategoryType,
			CategorySysNo,--类别sysno  从IPP3.dbo.Category_Sequence获取
			ParentCategorySysNo,
			OperationType,
			CategoryName,
			CategoryStatus,
			Reasons,
			CreateUserSysNo,
			CreateTime,
			AuditUserSysNo,
			Status,
		  C3Code,
		  CompanyCode,
		  LanguageCode
		)
		VALUES
		(
			1,  --一级类别value=1二级类别value=2三级类别value=3
			null,    
			0,--父类别系统编号   一级类别 值为0
			0,--操作类型0  增加                            1  修改
			@CategoryName,--类别名称
			0,--类别状态Valid =0 有效      Invalid= -1无效
			'导入',
			-1,
			GetDate(),
			-1,
			0,--待审核apply=0审核通过verifypass=1取消审核cancelverify=-2审核未通过verifyunpass=-1
		  null,      
		  8601,
		  'zh-CN'
		)
SELECT @Category_RequestSysNo=SCOPE_IDENTITY()
--模拟审核通过后-生成Category编号
INSERT INTO IPP3.dbo.Category_Sequence
      (CreateTime)
      VALUES(GetDate())
      SELECT @SysNo=SCOPE_IDENTITY()
--模拟审核通过后-新增真正的Category
INSERT INTO IPP3.dbo.Category1
      (
      SysNo,
      C1ID,
      C1Name,
      Status,
      CompanyCode,
      LanguageCode
      )
      VALUES
      (
      @SysNo,
      @SysNo,
      @CategoryName,  --跟Category_Request中对应类别名称一致
      0,
      8601,
      'zh-CN'
      )
--模拟审核通过后-修改状态
UPDATE IPP3.dbo.Category_Request
		  SET
			  Status = 1,
			  AuditUserSysNo = -1,
        CategorySysNo = @SysNo,
			  AuditTime = GETDATE()
		  WHERE SysNo = @Category_RequestSysNo 


----插入前台显示一级分类

INSERT INTO OverseaEcommerceManagement.dbo.EC_Category
       (Level,
        C3SysNo,				--三级编号，只有当Level=L是有值
        Status,
        Name,
        PromotionStatus,		--促销标志
        Priority,				--显示优先级
        IsParentCategoryShow,   --是否父级类别页面显示   Y显示 N不显示
        InUser,
        InDate,
        EditDate,
        EditUser,
        CompanyCode,
		LanguageCode,
		StoreCompanyCode)
VALUES ('H',     --'H'一级类别  'M'中间类别   'L'底层类别
        null,  
        'A',     --'A'有效 'D'无效
        @CategoryName,   ----跟Category_Request中对应类别名称一致
        null,   --'H'最热 'N'最新
        0,
        'Y',   --Y显示 N不显示
        '导入',
        GETDATE(),
        GETDATE(),
        '导入',
        8601,'zh-CN',8601)	

SELECT @EC_CategorySysNo = SCOPE_IDENTITY()

--插入前台分类的层级关系
INSERT INTO OverseaEcommerceManagement.dbo.EC_CategoryRelation
       (EC_CategorySysNo,
        ParentSysNo,     --一级前台分类为空
        InUser,
        InDate)
VALUES (@EC_CategorySysNo,
        '',--一级前台分类为空
        '导入',
        GETDATE())

SELECT @EC_CategoryRelationSysNo = SCOPE_IDENTITY()
                ]]>
    </commandText>
    <parameters>
      <param name="@CategoryName" dbType="String" />
      <param name="@SysNo" dbType="Int32" size="10" direction="Output"/>
      <param name="@EC_CategoryRelationSysNo" dbType="Int32" size="10" direction="Output"/>
    </parameters>
  </dataCommand>

  <dataCommand name="InsertAddCategory2" database="Write" commandType="Text">
    <commandText>
      <![CDATA[			
--declare  @SysNo int    --真正类别编号
--需要传入
--declare  @ParentCategorySysNo int  =242  --父类编号--根据一级类别Sql中返回的@SysNo得到
declare  @Category_RequestSysNo int    --审核表类别编号
--需要传入
--declare  @CategoryName varchar(100)  = 'sql测试测试二级类别第一次'



declare  @EC_CategorySysNo int    --前台显示分类编号
--需要传入
--declare  @ParentSysNo int  --前台显示分类关系表SysNo  --父类编号 根据一级类别Sql中返回的@EC_CategoryRelationSysNo得到
--二级类别导入
--模拟审核
INSERT INTO IPP3.dbo.Category_Request
		(
			CategoryType,
			CategorySysNo,--类别sysno  从IPP3.dbo.Category_Sequence获取SysNo
			ParentCategorySysNo,
			OperationType,
			CategoryName,
			CategoryStatus,
			Reasons,
			CreateUserSysNo,
			CreateTime,
			AuditUserSysNo,
			Status,
		  C3Code,
		  CompanyCode,
		  LanguageCode
		)
		VALUES
		(
			2,  --一级类别value=1二级类别value=2三级类别value=3
			null,    
			@ParentCategorySysNo,--父类别系统编号   一级类别 值为0
			0,--操作类型0  增加                            1  修改
			@CategoryName,--类别名称
			0,--类别状态Valid =0 有效      Invalid= -1无效
			'导入',
			-1,
			GetDate(),
			-1,
			0,--待审核apply=0审核通过verifypass=1取消审核cancelverify=-2审核未通过verifyunpass=-1
		  null,      
		  8601,
		  'zh-CN'
		)
SELECT @Category_RequestSysNo=SCOPE_IDENTITY()
--模拟审核通过后-生成Category编号
INSERT INTO IPP3.dbo.Category_Sequence
      (CreateTime)
      VALUES(GetDate())
      SELECT @SysNo=SCOPE_IDENTITY()
--模拟审核通过后-新增真正的Category
INSERT INTO IPP3.dbo.Category2
      (
       SysNo,
       C1SysNo,
       C2ID,
       C2Name,
       Status,
       CompanyCode,
       LanguageCode
      )
      VALUES
      (
       @SysNo,
       @ParentCategorySysNo,--跟Category_Request中对应ParentCategorySysNo一致
       @SysNo,
       @CategoryName,--跟Category_Request中对应类别名称一致
       0,
       8601,
       'zh-CN'
      )
--模拟审核通过后-修改状态
UPDATE IPP3.dbo.Category_Request
		  SET
			  Status = 1,
			  AuditUserSysNo = -1,
        CategorySysNo = @SysNo,
			  AuditTime = GETDATE()
		  WHERE SysNo = @Category_RequestSysNo 


----插入前台显示二级分类
INSERT INTO OverseaEcommerceManagement.dbo.EC_Category
       (Level,
        C3SysNo,				--三级编号，只有当Level=L是有值
        Status,
        Name,
        PromotionStatus,		--促销标志
        Priority,				--显示优先级
        IsParentCategoryShow,   --是否父级类别页面显示   Y显示 N不显示
        InUser,
        InDate,
        EditDate,
        EditUser,
        CompanyCode,
		LanguageCode,
		StoreCompanyCode)
VALUES ('M',     --'H'一级类别  'M'中间类别   'L'底层类别
        null,  
        'A',     --'A'有效 'D'无效
        @CategoryName,   ----跟Category_Request中对应类别名称一致
        null,   --'H'最热 'N'最新
        0,
        'Y',   --Y显示 N不显示
        '导入',
        GETDATE(),
        GETDATE(),
        '导入',
        8601,'zh-CN',8601)	

SELECT @EC_CategorySysNo = SCOPE_IDENTITY()

--插入前台分类的层级关系
INSERT INTO OverseaEcommerceManagement.dbo.EC_CategoryRelation
       (EC_CategorySysNo,
        ParentSysNo,     --一级前台分类为空
        InUser,
        InDate)
VALUES (@EC_CategorySysNo,
        @ParentSysNo,--一级前台分类为空
        '导入',
        GETDATE())
SELECT @EC_CategoryRelationSysNo = SCOPE_IDENTITY()
                ]]>
    </commandText>
    <parameters>
      <param name="@CategoryName" dbType="String" />
      <param name="@ParentCategorySysNo" dbType="Int32" />
      <param name="@ParentSysNo" dbType="Int32" />
      <param name="@SysNo" dbType="Int32" size="10" direction="Output"/>
      <param name="@EC_CategoryRelationSysNo" dbType="Int32" size="10" direction="Output"/>
    </parameters>
  </dataCommand>

  <dataCommand name="InsertAddCategory3" database="Write" commandType="Text">
    <commandText>
      <![CDATA[			
--declare  @SysNo int    --真正类别编号
--需要传入
--declare  @ParentCategorySysNo int  =243  --父类编号--根据一级类别Sql中返回的@SysNo得到
declare  @Category_RequestSysNo int    --审核表类别编号
--需要传入
--declare  @CategoryName varchar(100)  = 'sql测试测试三级类别第一次'

declare  @EC_CategorySysNo int    --前台显示分类编号
--需要传入
--declare  @ParentSysNo int  --前台显示分类关系表SysNo  --父类编号 根据二级类别Sql中返回的@EC_CategoryRelationSysNo得到


--三级类别导入
--模拟审核
INSERT INTO IPP3.dbo.Category_Request
		(
			CategoryType,
			CategorySysNo,--类别sysno  从IPP3.dbo.Category_Sequence获取SysNo
			ParentCategorySysNo,
			OperationType,
			CategoryName,
			CategoryStatus,
			Reasons,
			CreateUserSysNo,
			CreateTime,
			AuditUserSysNo,
			Status,
		  C3Code,
		  CompanyCode,
		  LanguageCode
		)
		VALUES
		(
			3,  --一级类别value=1二级类别value=2三级类别value=3
			null,    
			@ParentCategorySysNo,--父类别系统编号   一级类别 值为0
			0,--操作类型0  增加                            1  修改
			@CategoryName,--类别名称
			0,--类别状态Valid =0 有效      Invalid= -1无效
			'导入',
			-1,
			GetDate(),
			-1,
			0,--待审核apply=0审核通过verifypass=1取消审核cancelverify=-2审核未通过verifyunpass=-1
		  null,      
		  8601,
		  'zh-CN'
		)
SELECT @Category_RequestSysNo=SCOPE_IDENTITY()
--模拟审核通过后-生成Category编号
INSERT INTO IPP3.dbo.Category_Sequence
      (CreateTime)
      VALUES(GetDate())
      SELECT @SysNo=SCOPE_IDENTITY()
--模拟审核通过后-新增真正的Category
INSERT INTO IPP3.dbo.Category3
      (
       SysNo,
       C2SysNo,
       C3ID,
       C3Name,
       Status,
       MinMargin,
       MinMarginPMD,
       SearchByAttribute,
       IsValuableProduct,
       DMSRate,
       IsMemberArea,
       IsInstalmentProduct,
       IsRequired,
       CompanyCode,
       LanguageCode,
       C3Code
      )
      VALUES
      (
       @SysNo,
       @ParentCategorySysNo, --跟Category_Request中对应ParentCategorySysNo一致
       @SysNo,
       @CategoryName,       --跟Category_Request中对应类别名称一致
       0,
       0,
       0,
       0,
       0,
       0,
       0,
       0,
       0,
       8601,
       'zh-CN',
       null
      )
--模拟审核通过后-修改状态
UPDATE IPP3.dbo.Category_Request
		  SET
			  Status = 1,
			  AuditUserSysNo = -1,
        CategorySysNo = @SysNo,
			  AuditTime = GETDATE()
		  WHERE SysNo = @Category_RequestSysNo 

----插入前台显示二级分类
INSERT INTO OverseaEcommerceManagement.dbo.EC_Category
       (Level,
        C3SysNo,				--三级编号，只有当Level=L是有值
        Status,
        Name,
        PromotionStatus,		--促销标志
        Priority,				--显示优先级
        IsParentCategoryShow,   --是否父级类别页面显示   Y显示 N不显示
        InUser,
        InDate,
        EditDate,
        EditUser,
        CompanyCode,
		LanguageCode,
		StoreCompanyCode)
VALUES ('L',     --'H'一级类别  'M'中间类别   'L'底层类别
        @SysNo,  
        'A',     --'A'有效 'D'无效
        @CategoryName,   ----跟Category_Request中对应类别名称一致
        null,   --'H'最热 'N'最新
        0,
        'Y',   --Y显示 N不显示
        '导入',
        GETDATE(),
        GETDATE(),
        '导入',
        8601,'zh-CN',8601)	

SELECT @EC_CategorySysNo = SCOPE_IDENTITY()

--插入前台分类的层级关系
INSERT INTO OverseaEcommerceManagement.dbo.EC_CategoryRelation
       (EC_CategorySysNo,
        ParentSysNo,     --一级前台分类为空
        InUser,
        InDate)
VALUES (@EC_CategorySysNo,
        @ParentSysNo,--一级前台分类为空
        '导入',
        GETDATE())
                ]]>
    </commandText>
    <parameters>
      <param name="@CategoryName" dbType="String" />
      <param name="@ParentCategorySysNo" dbType="Int32" />
      <param name="@ParentSysNo" dbType="Int32" />
      <param name="@SysNo" dbType="Int32" size="10" direction="Output"/>
    </parameters>
  </dataCommand>

  <dataCommand name="VCategory1" database="Write" commandType="Text">
    <commandText>
      <![CDATA[	
      select SysNo from IPP3.dbo.Category1
where C1Name=@CategoryName
                ]]>
    </commandText>
    <parameters>
      <param name="@CategoryName" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="VCategory2" database="Write" commandType="Text">
    <commandText>
      <![CDATA[	
      select SysNo from IPP3.dbo.Category2
where C2Name=@CategoryName
                ]]>
    </commandText>
    <parameters>
      <param name="@CategoryName" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="VCategory3" database="Write" commandType="Text">
    <commandText>
      <![CDATA[	
      select SysNo from IPP3.dbo.Category3
where C3Name=@CategoryName
                ]]>
    </commandText>
    <parameters>
      <param name="@CategoryName" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetEC_CategoryRelationSysNo" database="Write" commandType="Text">
    <commandText>
      <![CDATA[	
      select b.Sysno from OverseaEcommerceManagement.dbo.EC_Category as a WITH(NOLOCK)
inner join OverseaEcommerceManagement.dbo.EC_CategoryRelation as  b WITH(NOLOCK)
on a.Sysno=b.EC_CategorySysno

where a.Name=@CategoryName
                ]]>
    </commandText>
    <parameters>
      <param name="@CategoryName" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetEC_CategoryTopSysNo" database="Write" commandType="Text">
    <commandText>
      <![CDATA[	
      declare  @tb_TopCategorySysno table
(
	id int
)

--获取前台类别的最高父类EC_CategorySysno
INSERT INTO @tb_TopCategorySysno
(id)
SELECT   Parent.EC_CategorySysno
FROM OverseaECommerceManagement.[dbo].[EC_Category] AS A WITH(NOLOCK)
INNER JOIN [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] R WITH(NOLOCK)
ON A.SysNo=R.EC_CategorySysNo
INNER JOIN [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] Parent WITH(NOLOCK)
ON Parent.SysNo=R.ParentSysNo
WHERE A.SysNo=
(
	SELECT   Parent.EC_CategorySysno
	FROM OverseaECommerceManagement.[dbo].[EC_Category] AS A WITH(NOLOCK)
	INNER JOIN [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] R WITH(NOLOCK)
	ON A.SysNo=R.EC_CategorySysNo
	INNER JOIN [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] Parent WITH(NOLOCK)
	ON Parent.SysNo=R.ParentSysNo
	WHERE A.SysNo=@EC_CategorySysNo
)
IF EXISTS (SELECT id from @tb_TopCategorySysno)
BEGIN
(
	SELECT id from @tb_TopCategorySysno
)
END
ELSE
BEGIN
	INSERT INTO @tb_TopCategorySysno
	(id)
	VALUES
	(
		(SELECT  Parent.EC_CategorySysno
		FROM OverseaECommerceManagement.[dbo].[EC_Category] AS A WITH(NOLOCK)
		INNER JOIN [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] R WITH(NOLOCK)
		ON A.SysNo=R.EC_CategorySysNo
		INNER JOIN [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] Parent WITH(NOLOCK)
		ON Parent.SysNo=R.ParentSysNo
		WHERE A.SysNo=@EC_CategorySysNo)
	)
	SELECT id as SysNo from @tb_TopCategorySysno
END
                ]]>
    </commandText>
    <parameters>
      <param name="@EC_CategorySysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetEC_CategoryBottomSysNoList" database="Write" commandType="Text">
    <commandText>
      <![CDATA[	
DECLARE @tbBottomCategories Table
(
 Id int
)
--获取前台一级类别的三级子类的EC_CategorySysno集合
INSERT INTO @tbBottomCategories
(Id)
SELECT Parent.EC_CategorySysno
FROM [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] R WITH(NOLOCK)
INNER JOIN [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] Parent WITH(NOLOCK)
ON R.SysNo=Parent.ParentSysNo
WHERE R.EC_CategorySysNo in
(
	SELECT Parent.EC_CategorySysno
	FROM [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] R WITH(NOLOCK)
	INNER JOIN [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] Parent WITH(NOLOCK)
	ON R.SysNo=Parent.ParentSysNo
	WHERE R.EC_CategorySysNo=@EC_CategorySysNo
)
--获取前台一级类别的二级子类的EC_CategorySysno集合
INSERT INTO @tbBottomCategories
(Id)
SELECT Parent.EC_CategorySysno
FROM [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] R WITH(NOLOCK)
INNER JOIN [OverseaECommerceManagement].[dbo].[EC_CategoryRelation] Parent WITH(NOLOCK)
ON R.SysNo=Parent.ParentSysNo
WHERE R.EC_CategorySysNo=@EC_CategorySysNo

SELECT Id as SysNo from @tbBottomCategories
                ]]>
    </commandText>
    <parameters>
      <param name="@EC_CategorySysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetEC_CategorySysNoList" database="Write" commandType="Text">
    <commandText>
      <![CDATA[	
select EC_CategorySysNo as SysNo from 
OverseaEcommerceManagement.dbo.EC_CategoryRelation
                ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="UpdateEC_CategoryRelationTopAndBottom" database="Write" commandType="Text">
    <commandText>
      <![CDATA[	
update OverseaEcommerceManagement.dbo.EC_CategoryRelation
set TopCategorySysno = @TopCategorySysno,
	BottomCategories = @BottomCategories
where EC_CategorySysNo=@EC_CategorySysNo
                ]]>
    </commandText>
    <parameters>
      <param name="@EC_CategorySysNo" dbType="Int32" />
      <param name="@TopCategorySysno" dbType="String" />
      <param name="@BottomCategories" dbType="String" />
    </parameters>
  </dataCommand>
</dataOperations>