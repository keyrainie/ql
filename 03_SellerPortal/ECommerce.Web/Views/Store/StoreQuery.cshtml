@{
    ViewBag.Title = "店铺维护";
}
@section scripts
{
    @Styles.Render("~/Content/plugin/datatables/css")
    @Scripts.Render("~/Content/plugin/datatables/js")
    @Styles.Render("~/Content/plugin/datetimepicker/css")
    @Scripts.Render("~/Content/plugin/datetimepicker/js")

    <script type="text/javascript">

        var grid = new Datatable();

        $(function () {

            grid.init({
                src: $("#dataTable_storePage"),
                dataTable: { // here you can define a typical datatable settings from http://datatables.net/usage/options
                    "serverSide": true,
                    "columns": [
                    { "mData": "PageName", "orderable": true },
                    { "mData": "LinkUrl", "orderable": false },
                    { "mData": "PLinkUrl", "orderable": false },
                    { "orderable": false },
                    //{ "orderable": false },
                    { "orderable": false },
                    { "orderable": false },
                    ],
                    "columnDefs": [
                   { "name": "s.PageName", "targets": 0 },
                   //草稿页面
                   {
                       "render": function (data, type, row) {
                           var url = '@ECommerce.Utility.AppSettingManager.GetSetting("Store", "PreviewBaseUrl")' +  row.LinkUrl;
                           return "<a href='" + url + "'  target='_blank' >" + url + "</a>";
                       },
                       "targets": 1
                   },
                   //发布页面
                   {
                       "render": function (data, type, row) {
                           if (row.PLinkUrl != null && row.PLinkUrl != '') {
                               @*var purl = '@ECommerce.Utility.AppSettingManager.GetSetting("Store", "PreviewBaseUrl")' + row.PLinkUrl ;*@
                               return "<a href='" + row.PublishUrl + "' target='_blank'>" + row.PublishUrl + "</a>";
                           }
                           else
                               return '';
                       },
                       "targets": 2
                   },
                   //是否发布
                   {
                       "render": function (data, type, row) {
                           if (row.Status == 1)
                               return '<span class="label label-success">是</span>';
                           else
                               return '<span class="label label-danger">否</span>';
                       },
                       "targets": 3
                   },
                   //状态
                   {
                       "render": function (data, type, row) {
                           if (row.StorePageStatus == 1) {
                               return '保存新草稿';
                           }
                           if (row.StorePageStatus == 2) {
                               return '待审核';
                           }
                           if (row.StorePageStatus == 3) {
                               return '审核通过待发布';
                           }
                           if (row.StorePageStatus == 4) {
                               return '审核未通过';
                           }
                       },
                       "targets": 4
                   },
                   //预览
                   //{
                   //    "render": function (data, type, row) {
                   //        return "<a href='javascript:void(0);' onclick=doPreview(" + row.SysNo + ")>预览</a>";
                   //    },
                   //    "targets": 4
                   //},
                    //编辑，删除:
                   {
                       "render": function (data, type, row) {
                           if (row.PageTypeKey.trim() == 'CustomPage') {
                               var str = null;
                               str = "<a href='javascript:void(0);' id='doEdit_" + row.SysNo + "' PageName='" + row.PageName + "' PageTypeKey='" + row.PageTypeKey + "' onclick=doEdit(" + row.SysNo + ")>装修</a>&nbsp;";

                               //if (row.Status == 1)
                               //    str = str+"<a href='javascript:void(0);' onclick=doDisable(" + row.SysNo + ")>禁用</a>"
                               //else
                               //    str = str+"<a href='javascript:void(0);' onclick=doEnable(" + row.SysNo + ")>启用</a>"
                               str += "&nbsp;<a href='javascript:void(0);' onclick=doDelete(" + row.SysNo + ")>删除</a>";
                               if (row.Status == 1)
                                   str += "&nbsp;<a href='javascript:void(0);' onclick=cancelPublish(" + row.SysNo + ")>撤销发布</a>";
                               return str;
                           }
                           else {
                               return "<a href='javascript:void(0);' id='doEdit_" + row.SysNo + "' PageName='" + row.PageName + "' PageTypeKey='" + row.PageTypeKey + "' onclick=doEdit(" + row.SysNo + ")>装修</a>"
                               + "&nbsp;<a href='javascript:void(0);' onclick=restoreDefault(" + row.SysNo + ")>恢复默认</a>";
                           }
                       },
                       "targets": 5
                   }
                    ],
                    "pageLength": 10, // default record count per page
                    "ajax": {
                        "url": "@Url.Action("AjaxQueryStorePageList", "Store")",
                        "type": "POST"
                    },
                    "order": [[0, "desc"]]
                }
            });

            grid.getDataTable().ajax.reload();
        });


        function doDisable(sysno) {
            $.ajax({
                type: "post",
                url: "/Store/AjaxDisableStorePage",
                dataType: "json",
                data: { sysno: sysno },
                async: true,
                timeout: 30000,
                success: function (data) {
                    $.alert("禁用成功!", function () {
                        grid.getDataTable().ajax.reload();
                    });
                }
            });
        }

        function doEnable(sysno) {
            $.ajax({
                type: "post",
                url: "/Store/AjaxEnableStorePage",
                dataType: "json",
                data: { sysno: sysno },
                async: true,
                timeout: 30000,
                success: function (data) {
                    $.alert("启用成功!", function () {
                        grid.getDataTable().ajax.reload();
                    });
                }
            });
        }

        function doDelete(sysno) {
            $.confirm("确定要删除页面吗,当专题页删除时草稿和已发布的页面同时会删除?", function (result) {
                if (result) {
                    $.ajax({
                        type: "post",
                        url: "/Store/AjaxDeleteStorePage",
                        dataType: "json",
                        data: { sysno: sysno },
                        async: true,
                        timeout: 30000,
                        success: function (data) {
                            $.alert("删除成功!", function () {
                                grid.getDataTable().ajax.reload();
                            });
                        }
                    });
                }
            })
        }

        function cancelPublish(sysno) {
            $.confirm("确定要撤销发布吗？", function (result) {
                if (result) {
                    $.ajax({
                        type: "post",
                        url: "/Store/AjaxDeleteStorePageFromPublish",
                        dataType: "json",
                        data: { sysno: sysno },
                        async: true,
                        timeout: 30000,
                        success: function (data) {
                            $.alert("操作成功!", function () {
                                grid.getDataTable().ajax.reload();
                            });
                        }
                    });
                }
            })
        }

        function doEdit(SysNo) {
            var PageName = $("#doEdit_" + SysNo).attr("PageName");
            var PageTypeKey = $("#doEdit_" + SysNo).attr("PageTypeKey");
            window.location.href = '/store/pagemanager?PageName=' + encodeURI(PageName) + '&PageTypeKey=' + PageTypeKey;
        }

        function restoreDefault(sysno) {
            $.confirm("确定要恢复默认吗？一旦恢复，现有设置会丢失！", function (result) {
                if (result) {
                    $.ajax({
                        type: "post",
                        url: "/Store/AjaxRestoreDefaultStorePage",
                        dataType: "json",
                        data: { sysno: sysno },
                        async: true,
                        timeout: 30000,
                        success: function (data) {
                            $.alert(data.Message);
                        }
                    });
                }
            })
        }

        function doPreview(sysno)
        {
            var url = "Store/Preview/" +@ECommerce.Web.UserAuthHelper.GetCurrentUser().SellerSysNo + "/" + sysno;
            url = '@ECommerce.Utility.AppSettingManager.GetSetting("Store", "PreviewBaseUrl")' + url;
            window.location = url;
        }


    </script>
}
<div class="container-fluid">
    <div class="row-fluid">
        <div class="portlet">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-list"></i>
                    @GetText("我的店铺页面")
                </div>
                <div class="tools">
                    <a class="collapse" href="javascript:;"></a>
            </div>
             </div>
            <div class="portlet-body">
                    <table class="table table-striped table-bordered table-hover" id="dataTable_storePage">
                        <thead>
                            <tr>
                                <th width="15%">页面名称</th>
                                <th width="25%">预览</th>
                                <th width="25%">店铺页面</th>
                                <th width="10%">是否发布</th>
                                <th width="10%">状态</th>
                                @*<th width="8%">预览</th>*@
                                <th width="15%">操作</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="portlet">
            <div class="portlet-title">
                <div class="caption">
                    <i class="icon-cogs"></i>新建专题页
                </div>
                <div class="tools">
                    <a class="collapse" href="javascript:;"></a>
                </div>
            </div>
            <div class="portlet-body">
                <form class="form-inline" action="#" id="frmPageName" style="margin-top:10px">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label">名称：</label>
                                <input type="text" class="form-control" id="name" name="name"/>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <a href="javascript:gotoStorePageManager()" class="btn purple">下一步
                            <i class="m-icon-swapright m-icon-white"></i>
                            </a>
                        </div>
                    </div>
                    <div class="note note-danger" style="margin-top:10px" >
                        <p>如果输入的专题页名称与已有专题页名称重复，那么点击“下一步”将为装修该已有的专题页！</p>
                    </div>
                </form>
            </div>
        </div>
    </div>

</div>
@Styles.Render("~/Content/plugin/bootstrapValidator/css")
@Scripts.Render("~/Content/plugin/bootstrapValidator/js")
<script type="text/javascript">
    $('#frmPageName').bootstrapValidator({
        message: 'This value is not valid',
        feedbackIcons: {
            valid: 'glyphicon glyphicon-ok',
            invalid: 'glyphicon glyphicon-remove',
            validating: 'glyphicon glyphicon-refresh'
        },
        fields: {
            name: {
                validators: {
                    notEmpty: { message: '请填写页面名称' },
                    regexp: { regexp: /^[0-9a-zA-Z\u4e00-\u9fa5_]*$/, message: '请填写正确的页面名称,由汉字,字母,数字和_组成' }
                }
            }
        }
    }).on("success.form.bv", function (e) {
        var name = encodeURI($('#name').val());
        window.location.href = '@BuildUrlCA("Store", "PageManager")?PageName=' + name + '&PageTypeKey=CustomPage';
    });
    function gotoStorePageManager() {

        $('#frmPageName').bootstrapValidator('validate');

    }

    $(document).keydown(function (event) {
        if (event.keyCode == 13)
            gotoStorePageManager();
    })
</script>
