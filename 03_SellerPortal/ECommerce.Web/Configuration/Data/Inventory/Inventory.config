<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.ECommerce.com/DataOperation">

  <!--查询总仓库存-->
  <dataCommand name="QueryProductInventoryTotal" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          @TotalCount = COUNT(a.ProductSysNo) 
        FROM IPP3.dbo.Inventory a WITH(NOLOCK) 
          INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo b WITH(NOLOCK)
            ON a.ProductSysNo = b.SysNo
            INNER JOIN [IPP3].[dbo].[Product] P WITH(NOLOCK)
           ON P.[SysNo]=a.[ProductSysNo]
          #StrWhere#

        SELECT 
          ProductSysNo,
	        ProductID,
          0 AS StockSysNo,
          '总仓' AS StockName,
          IsConsign,
			    ProductName,
			    AccountQty,
			    AvailableQty,
			    AllocatedQty,
			    OrderQty,          
			    VirtualQty,
			    ConsignQty,
          PurchaseQty,  
          0 AS ShiftInQty,
          0 AS ShiftOutQty,
          ShiftQty,
          CompanyCode,
          RetainQty
        FROM
        (
	        SELECT
            a.ProductSysNo,      
	          b.ProductID,
            ISNULL(b.IsConsign,0) AS IsConsign,   --是否代销商品
			      b.ProductName,
			      a.AccountQty,
			      a.AvailableQty,
			      a.AllocatedQty,
			      a.OrderQty,
			      a.VirtualQty,
			      a.ConsignQty,
            a.PurchaseQty,
            a.ShiftQty,
            a.CompanyCode,     
            a.RetainQty,
	          (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
	        FROM IPP3.dbo.Inventory a WITH(NOLOCK) 
           INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo b WITH(NOLOCK)
              ON a.ProductSysNo = b.SysNo  
           INNER JOIN [IPP3].[dbo].[Product] P WITH(NOLOCK)
           ON P.[SysNo]=a.[ProductSysNo] 
	        #StrWhere#
        ) RESULT 
      ]]>
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>

  <!--查询分仓库存-->
  <dataCommand name="QueryProductInventoryByStock" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          @TotalCount = COUNT(a.ProductSysNo) 
        FROM IPP3.dbo.Inventory_Stock a WITH(NOLOCK) 
          INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo b WITH(NOLOCK)
            ON a.ProductSysNo = b.SysNo
            INNER JOIN [IPP3].[dbo].[Product] P WITH(NOLOCK)
              ON P.[SysNo]=a.[ProductSysNo] 
          #StrWhere#

        SELECT 
          ProductSysNo,
	        ProductID,
          StockSysNo,
          StockName,
          IsConsign,
			    ProductName,
			    AccountQty,
			    AvailableQty,
			    AllocatedQty,
			    OrderQty,          
			    VirtualQty,
			    ConsignQty,
          PurchaseQty, 
          ShiftInQty,
          ShiftOutQty,
          0 AS ShiftQty,
          CompanyCode,
          RetainQty
        FROM
        (
	        SELECT
            a.ProductSysNo,
            a.StockSysNo,
            s.StockName,
	          b.ProductID,
            ISNULL(b.IsConsign,0) AS IsConsign,   --是否代销商品
			      b.ProductName,
			      a.AccountQty,
			      a.AvailableQty,
			      a.AllocatedQty,
			      a.OrderQty,
			      a.VirtualQty,
			      a.ConsignQty,
            a.PurchaseQty,
            a.ShiftInQty,
            a.ShiftOutQty,            
            a.CompanyCode,  
            a.RetainQty,
	          (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
	        FROM IPP3.dbo.Inventory_Stock a WITH(NOLOCK) 
           INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo b WITH(NOLOCK)
              ON a.ProductSysNo = b.SysNo  
            LEFT JOIN [IPP3].[dbo].[Stock] AS S WITH(NOLOCK)
              ON a.StockSysNo=S.SysNo
              INNER JOIN [IPP3].[dbo].[Product] P WITH(NOLOCK)
              ON P.[SysNo]=a.[ProductSysNo] 
	        #StrWhere#
        ) RESULT 
      ]]>
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>

  <!--查询分仓库存单据-->
  <dataCommand name="QueryItemsCardReLatedOrder" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          @TotalCount = Count(a.OrderCode)
        FROM 
        (
           --instock '0':PO(Instock) '1':PO-Return(Instock) '2':PO-History-Return(Instock) '3':PO-调价(Instock)
	        (
            select 
									case when potype=0 then '0' when potype=1 then '1' 
                  when potype=2 then '2' 
                  when potype=3 then '3' end as OrderName,
									productsysno as ProductSysNo,  
									intime as OrderTime,
									poid as OrderCode,
									po_master.sysno as OrderSysNo,
									quantity as OrderQty,
									PayStockSysNo StockSysNo,
                  0 as RelatedSysNo,
                  po_master.CompanyCode
									from 
									IPP3.dbo.V_POPayStock po_master with (nolock) 
                  inner join IPP3.dbo.po_item with (nolock)
									on po_master.sysno = IPP3.dbo.po_item.posysno
									where po_master.status in(4,6,7,8) and po_master.VirStockSysNo = @WarehouseSysNo and productsysno=@ItemSysNo 
                  and po_master.CompanyCode = @CompanyCode
	        )
	        UNION ALL
	        -- lend
	        (
		        SELECT 
		          '4' AS OrderName, 
		          productsysno AS ProductSysNo, 
		          outtime AS OrderTime,
		          lendid AS OrderCode,
		          st_lend.sysno AS OrderSysNo,
		          lendqty*(-1) AS OrderQty,
		          stocksysno AS StockSysNo,
              0 AS RelatedSysNo,
              IPP3.dbo.st_lend.CompanyCode
		        FROM IPP3.dbo.st_lend WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
		        ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
		        WHERE status >= 3 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo 
            AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
	        )
	        UNION ALL
	        -- lendReturn
	        (
		        SELECT 
		          '5' AS OrderName, 
		          productsysno AS ProductSysNo, 
		          returntime AS OrderTime,
		          lendid AS OrderCode,
		          st_lend.sysno AS OrderSysNo,
		          returnqty AS OrderQty,
		          stocksysno AS StockSysNo,
              0 AS RelatedSysNo,
              IPP3.dbo.st_lend.CompanyCode
		        FROM IPP3.dbo.st_lend WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_lend_return WITH(NOLOCK)
		        ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_return.lendsysno
		        WHERE status >= 4 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo 
            AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
	        )								
	        UNION ALL
	        -- so
	        (
            select 
						'6' as OrderName,
						productsysno as ProductSysNo,  
						outtime as OrderTime,
						soid as OrderCode,
						so_master.sysno as OrderSysNo,
						quantity*(-1) as OrderQty,
						v_so_item.WarehouseNumber as StockSysNo,
            0 as RelatedSysNo,
            so_master.CompanyCode
						from 
						IPP3.dbo.v_so_master so_master  with(nolock) 
            inner join IPP3.dbo.v_so_item with(nolock) on so_master.sysno = v_so_item.sosysno
            left join OverseaOrderManagement.dbo.V_OM_SO_CheckShipping so_check with(nolock)  on so_master.sysno = so_check.sosysno 
						where status = 4 and  WarehouseNumber = replicate('0',2-datalength(cast(@WarehouseSysNo as varchar(2))))+cast(@WarehouseSysNo as varchar(2))/*stocksysno = @WarehouseSysNo*/ and productsysno=@ItemSysNo and IPP3.dbo.v_so_item.producttype not in (3,4)
            and so_master.CompanyCode = @CompanyCode
            and  ISNULL(so_check.sotype,0)<>10
	        )
	        UNION ALL
	        -- transfer
	        (
		        SELECT 
		          '7' AS OrderName,
		          productsysno AS ProductSysNo, 
		          outtime AS OrderTime,
		          transferid AS OrderCode,
		          IPP3.dbo.st_transfer.sysno AS OrderSysNo,
		          CASE transfertype WHEN 1 THEN transferqty*(-1) ELSE transferqty END AS OrderQty,
		          stocksysno AS StockSysNo,
              0 AS RelatedSysNo,
              IPP3.dbo.st_transfer.CompanyCode
		        FROM IPP3.dbo.st_transfer  WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
		        ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
		        WHERE status = 3 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
            AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
	        )
	        UNION ALL
	        -- 移仓单(移出)
	        (
		        SELECT 
		          '8' AS OrderName,
		          productsysno AS ProductSysNo, 
		          outtime AS OrderTime,
		          shiftid AS OrderCode,
		          IPP3.dbo.st_shift.sysno AS OrderSysNo,
		          CASE shifttype 
                WHEN 1 THEN abs(shiftqty)*(-1) 
                ELSE shiftqty * (-1) END AS OrderQty,
		          CASE shifttype
                WHEN 1 THEN stocksysnoB
                ELSE stocksysnoA END AS StockSysNo,
              RelatedShiftSysno AS  RelatedSysNo,
              IPP3.dbo.st_shift.CompanyCode
		        FROM IPP3.dbo.st_shift WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		        ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
		        WHERE status >= 3 AND  ((shifttype<>1 AND stocksysnoA = @WarehouseSysNo) OR (shifttype=1 AND stocksysnoB = @WarehouseSysNo)) AND productsysno = @ItemSysNo
            AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
	        )
	        UNION ALL
	        -- 移仓单(移入)
	        (
		        SELECT 
		          '9' AS OrderName,
		          productsysno AS ProductSysNo, 
		          intime AS OrderTime,
		          shiftid AS OrderCode,
		          IPP3.dbo.st_shift.sysno AS OrderSysNo,
		          CASE shifttype
                WHEN 1 THEN abs(instockqty)
                ELSE instockqty END AS OrderQty,
		          CASE shifttype
                WHEN 1 THEN stocksysnoA
                ELSE stocksysnob END AS StockSysNo,
		          RelatedShiftSysno AS  RelatedSysNo,
              IPP3.dbo.st_shift.CompanyCode
		        FROM IPP3.dbo.st_shift WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		        ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
		        WHERE status >= 4  AND  ((shifttype<>1 AND stocksysnoB = @WarehouseSysNo) OR (shifttype=1 AND stocksysnoA = @WarehouseSysNo))  AND productsysno = @ItemSysNo
            AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
	        )    
	        UNION ALL
	        -- adjust
	        (
		        SELECT 
		          '10' AS OrderName, 
		          productsysno AS ProductSysNo, 
		          outtime AS OrderTime,
		          adjustid AS OrderCode,
		          st_adjust.sysno AS OrderSysNo,
		          adjustqty AS OrderQty,
		          stocksysno AS StockSysNo,
              0 AS RelatedSysNo,
              IPP3.dbo.st_adjust.CompanyCode
		        FROM IPP3.dbo.st_adjust WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
		        ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
		        WHERE status=3 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
            AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
	        )
          UNION ALL
	        -- RMAOut
	        (
            select 
									'11' as OrderName, 
									rrs.revertproductsysno as ProductSysNo, 
									outtime as OrderTime,
									RevertID as OrderCode,
									rr.SysNo as OrderSysNo,
									'-1' as OrderQty,
									rri.StockSysNo,
                  0 as RelatedSysNo,
                  rr.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMARevertMaster rr with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMARevertTransaction rri with (nolock)
									on rr.SysNo = rri.RevertSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rri.RegisterSysNo
									where rr.Status=1 
                  and rrs.NewProductStatus<>0 
                  and  stocksysno = @WarehouseSysNo 
                  and rrs.revertproductsysno=@ItemSysNo 
                  and rr.OutTime<@RevertTime
                  AND rr.CompanyCode = @CompanyCode
	        )
          UNION ALL
	        -- RMAReturn
	        (
            select 
									'12' as OrderName, 
									rrni.Targetproductsysno as ProductSysNo, 
									max(ReturnTime) as OrderTime,
									ReturnID as OrderCode,
									rrn.SysNo as OrderSysNo,
									count(*) as OrderQty,
									rrn.StockSysNo,
                  0 as RelatedSysNo,
                  rrn.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMAReturnMaster rrn with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMAReturnTransaction rrni with (nolock)
									on rrn.SysNo = rrni.ReturnSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rrni.RegisterSysNo
									where rrn.Status=1 and rrni.OriginalWarehouse = @WarehouseSysNo 
                  and rrni.Targetproductsysno=@ItemSysNo	
                  AND rrn.CompanyCode = @CompanyCode
                  group by rrn.SysNo,rrn.ReturnID,rrn.stocksysno,rrni.Targetproductsysno,rrn.CompanyCode
           )
           union all
          --RMA IT/RT单
          (
              select distinct '18' as OrderName, 
              c.targetproductsysno as ProductSysNo, 
              max(a.Intime) as OrderTime,
              cast (a.SysNo as nvarchar) as OrderCode,
              a.SysNo as OrderSysNo,
              sum(c.TargetProductQty) as OrderQty,
              a.StockSysNoA as StockSysNo,
              0 as RelatedSysNo,
              d.CompanyCode
              from rma.dbo.RMA_Stock_Shift a (nolock)
              inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno
              inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
              where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
              and a.StockSysNoB = @WarehouseSysNo and c.targetproductsysno=@ItemSysNo	
              and (d.shippedwarehouse=a.stocksysnoB or (d.shippedwarehouse!=a.stocksysnoB and isnull(d.refundstatus,0)!=2))
              and d.CompanyCode = @CompanyCode
              group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode

              union All
              select distinct 
              '18' as OrderName, 
              c.targetproductsysno as ProductSysNo, 
              max(a.Intime) as OrderTime,
              cast (a.SysNo as nvarchar) as OrderCode,
              a.SysNo as OrderSysNo,
              sum(c.TargetProductQty) as OrderQty,
              a.StockSysNoA as StockSysNo,
              0 as RelatedSysNo,
              d.CompanyCode
              from rma.dbo.RMA_Stock_Shift a (nolock)                                    
              inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno 
              inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
              where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
              and d.shippedwarehouse =@WarehouseSysNo and c.targetproductsysno=@ItemSysNo	
              and d.shippedwarehouse!=a.stocksysnoB and d.refundstatus=2
              and d.CompanyCode = @CompanyCode
              group by a.sysno,a.StockSysNoA,c.targetproductsysno ,d.CompanyCode    
                                              
              )                             
             union all
            --OPC-RMA单，未进行company限定 
            (
                select 
								'19' as OrderName, 
								b.productsysno as ProductSysNo, 
								a.CreateTime as OrderTime,
								cast (a.SysNo as nvarchar) as OrderCode,
								a.SysNo as OrderSysNo,
								(-1)*b.ShiftQty as OrderQty,
								a.StockSysNoA as StockSysNo,
                0 as RelatedSysNo,
                null as CompanyCode
								from rma.dbo.RMA_Stock_Shift a (nolock)
								inner join rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
								where a.Status>=2 and a.shifttype=2 and a.StockSysNoA = @WarehouseSysNo and b.ProductSysNo=@ItemSysNo								
           ) 
           UNION ALL
            ---Balance，未进行company限定
            (    
              SELECT 
                '13' AS OrderName,
                productsysno AS ProductSysNo,
                createtime AS OrderTime,
                '' AS OrderCode,
                '' AS OrderSysNo,
                quantity AS OrderQty,
                stocksysno AS StockSysNo,
	              0 AS RelatedSysNo,
                null as CompanyCode
              FROM IPP3.dbo.st_balance WITH(NOLOCK) 
              WHERE stocksysno=@WarehouseSysNo AND productsysno=@ItemSysNo
            )
            UNION ALL
              --RMA 换发单原产品库存加
             (
                select '21' as OrderName,
                a.SourceProductSysNo as ProductSysNo,
                a.InTime as OrderTime,
                CAST(a.sysno as nvarchar) as OrderCode,
                a.SysNo as OrderSysNo,
                1 as OrderQty,
                e.StockSysNoB as StockSysNo,
                0 as RelatedSysNo,
                null as CompanyCode
                From IPP3.dbo.RMA_Transmit a with (nolock)
                inner join RMA.dbo.RMA_ChangeItem_Detail b with (nolock) on b.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_ChangeItem c with (nolock) on c.Sysno=b.RMAChangeItemSysNo
                inner join RMA.dbo.RMA_Shift_Register d with (nolock) on d.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_Stock_Shift e with (nolock) on e.Sysno=d.RMAShiftSysno
                where a.Status=3 and c.Status=1 and e.Status=4
                and (e.shifttype=0 or e.shifttype=1)
                and e.StockSysNoB=@WarehouseSysNo
                and a.SourceProductSysNo=@ItemSysNo
              )
             UNION ALL
             --RMA换发单转换产品为正常品时库存减
             (
                select '22' as OrderName,
                a.TransmitProductSysNo as ProductSysNo,
                a.InTime as OrderTime,
                CAST(a.sysno as nvarchar) as OrderCode,
                a.SysNo as OrderSysNo,
                -1 as OrderQty,
                e.StockSysNoB as StockSysNo,
                0 as RelatedSysNo,
                null as CompanyCode
                From IPP3.dbo.RMA_Transmit a with (nolock)
                inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                where a.Status=3 and b.TargetProductType=0 and c.Status=1 and e.Status=4 
                and (e.shifttype=0 or e.shifttype=1)
                and e.StockSysNoB=@WarehouseSysNo
                and a.TransmitProductSysNo=@ItemSysNo
              )
              UNION ALL
              --RMA换发单转换产品为二手品时二手品对应的原产品库存减
              (
                select '23' as OrderName,
                g.SysNo as ProductSysNo,
                a.InTime as OrderTime,
                CAST(a.sysno as nvarchar) as OrderCode,
                a.SysNo as OrderSysNo,
                -1 as OrderQty,
                e.StockSysNoB as StockSysNo,
                0 as RelatedSysNo,
                null as CompanyCode
                 From IPP3.dbo.RMA_Transmit a with (nolock)
                inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                inner join OverseaContentManagement.dbo.V_IM_Product f with(nolock) on f.SysNo=a.TransmitProductSysNo
                inner join OverseaContentManagement.dbo.V_IM_Product g with(nolock) on g.ProductID=substring(f.ProductID,1,10)
                where a.Status=3 and b.TargetProductType=1 and c.Status=1 and e.Status=4 
                and (e.shifttype=0 or e.shifttype=1)
                and e.StockSysNoB=@WarehouseSysNo
                and g.SysNo=@ItemSysNo
             )
        )AS a 
        INNER JOIN [IPP3].[dbo].[Product] PDT WITH(NOLOCK)
        ON PDT.[SysNo]=a.[ProductSysNo] 
        WHERE  a.ProductSysNo=@ItemSysNo AND PDT.[MerchantSysNo]=@MerchantSysNo
       
        SELECT 
          a.OrderName,
          '' AS OrderNameString,
          a.ProductSysNo,
          a.OrderTime,
          a.OrderCode,
          a.OrderSysNo,
          a.OrderQty,
          a.StockSysNo,
          a.RelatedSysNo,
          a.CompanyCode
        FROM 
        (
			    SELECT 
			      RESULT.OrderName,
			      RESULT.ProductSysNo,
			      RESULT.OrderTime,
			      RESULT.OrderCode,
			      RESULT.OrderSysNo,
			      RESULT.OrderQty,
			      RESULT.StockSysNo,
			      RESULT.RelatedSysNo,
            RESULT.CompanyCode,
			      (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
			    FROM
			    (
					    --instock '0':PO(Instock) '1':PO-Return(Instock) '2':PO-History-Return(Instock) '3':PO-调价(Instock)
					    (SELECT 
							( CASE 
								WHEN porcv.purno IS NULL THEN cast(potype as varchar) 
								ELSE cast(potype as varchar) +'_' 
							END) AS OrderName 
						   ,productsysno AS ProductSysNo 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN intime 
								ELSE porcv.ReceivedDate 
							END) AS OrderTime 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN poid 
								ELSE cast(poid as varchar)+'_' +cast(porcv.batchnumber as varchar)
							END) AS OrderCode 
						   ,po_master.sysno AS OrderSysNo 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN quantity 
								ELSE porcv.ReceivedQuantity 
							END) AS OrderQty 
						   ,PayStockSysNo StockSysNo 
						   ,0 AS RelatedSysNo 
						   ,po_master.CompanyCode 
						FROM IPP3.dbo.V_POPayStock po_master WITH (NOLOCK) 
						INNER JOIN IPP3.dbo.po_item WITH (NOLOCK) 
							ON po_master.sysno = po_item.posysno 
						LEFT JOIN Scm.dbo.POReceivedDetail porcv WITH (NOLOCK) 
							ON po_master.sysno=porcv.Purno 
							AND porcv.item=( 
							SELECT 
								productid 
							FROM OverseaContentManagement.dbo.V_CM_ItemBasicInfo WITH(NOLOCK) 
							WHERE 
								sysno=po_item.productsysno 
						 ) 
						 where po_master.status in(4,6,7,8)
						 and po_master.VirStockSysNo = @WarehouseSysNo 
						 and productsysno=@ItemSysNo
						 and po_master.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- lend
					      (
						      SELECT 
						        '4' AS OrderName, 
						        productsysno AS ProductSysNo, 
						        outtime AS OrderTime,
						        lendid AS OrderCode,
						        st_lend.sysno AS OrderSysNo,
						        lendqty*(-1) AS OrderQty,
						        stocksysno AS StockSysNo,
						        0 AS RelatedSysNo,
                    IPP3.dbo.st_lend.CompanyCode
						      FROM IPP3.dbo.st_lend WITH(NOLOCK)
						      INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
						      ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
						      WHERE status >= 3  AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
                  AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- lendReturn
					      (
						      SELECT 
						        '5' AS OrderName, 
						        productsysno AS ProductSysNo, 
						        returntime AS OrderTime,
						        lendid AS OrderCode,
						        st_lend.sysno AS OrderSysNo,
						        returnqty AS OrderQty,
						        stocksysno AS StockSysNo,
						        0 AS RelatedSysNo,
                    IPP3.dbo.st_lend.CompanyCode
						      FROM IPP3.dbo.st_lend  WITH(NOLOCK)
						      INNER JOIN IPP3.dbo.st_lend_return WITH(NOLOCK)
						      ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_return.lendsysno
						      WHERE status >= 4  AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
                  AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
					      )								
					      UNION ALL
					      -- so
					      (
						      select 
						      '6' as OrderName,
						      productsysno as ProductSysNo,  
						      outtime as OrderTime,
						      soid as OrderCode,
						      so_master.sysno as OrderSysNo,
						      quantity*(-1) as OrderQty,
						      v_so_item.WarehouseNumber as StockSysNo,
                  0 as RelatedSysNo,
                  so_master.CompanyCode
						      from 
						      IPP3.dbo.v_so_master so_master  with(nolock) 
                  inner join IPP3.dbo.v_so_item  with(nolock) on so_master.sysno = IPP3.dbo.v_so_item.sosysno
                  left join OverseaOrderManagement.dbo.V_OM_SO_CheckShipping so_check with(nolock)  on so_master.sysno = so_check.sosysno
						      where status = 4 and  WarehouseNumber = replicate('0',2-datalength(cast(@WarehouseSysNo as varchar(2))))+cast(@WarehouseSysNo as varchar(2))/*stocksysno = @WarehouseSysNo*/ and productsysno=@ItemSysNo and IPP3.dbo.v_so_item.producttype not in (3,4)
                  and so_master.CompanyCode = @CompanyCode
                  and  ISNULL(so_check.sotype,0)<>10
					      )
					      UNION ALL
					      -- transfer
					      (
						      SELECT 
						        '7' AS OrderName,
						        productsysno AS ProductSysNo, 
						        outtime AS OrderTime,
						        transferid AS OrderCode,
						        IPP3.dbo.st_transfer.sysno AS OrderSysNo,
						        CASE transfertype WHEN 1 THEN transferqty*(-1) ELSE transferqty END AS OrderQty,
						        stocksysno AS StockSysNo,
						        0 AS RelatedSysNo,
                    IPP3.dbo.st_transfer.CompanyCode
						      FROM IPP3.dbo.st_transfer  WITH(NOLOCK)
						      INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
						      ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
						      WHERE status = 3 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
                  AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- 移仓单(移出)
					      (
						      SELECT 
						        '8' AS OrderName,
						        productsysno AS ProductSysNo, 
						        outtime AS OrderTime,
						        shiftid AS OrderCode,
						        IPP3.dbo.st_shift.sysno AS OrderSysNo,
						        CASE shifttype 
						           WHEN 1 THEN abs(shiftqty)*(-1) 
						           ELSE shiftqty * (-1) END AS OrderQty,
						        CASE shifttype
						           WHEN 1 THEN stocksysnoB
						           ELSE stocksysnoA END AS StockSysNo,
						        RelatedShiftSysno AS  RelatedSysNo,
                    IPP3.dbo.st_shift.CompanyCode
						      FROM IPP3.dbo.st_shift WITH(NOLOCK) 
						      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
						      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
						      WHERE status >= 3 AND  ((shifttype<>1 AND stocksysnoA = @WarehouseSysNo) OR (shifttype=1 AND stocksysnoB = @WarehouseSysNo)) 
							        AND productsysno = @ItemSysNo   
                      AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- 移仓单(移入)
					      (
						      SELECT 
						        '9' AS OrderName,
						        productsysno AS ProductSysNo, 
						        intime AS OrderTime,
						        shiftid AS OrderCode,
						        IPP3.dbo.st_shift.sysno AS OrderSysNo,
						        CASE shifttype
						           WHEN 1 THEN abs(instockqty)
						           ELSE instockqty END AS OrderQty,
						        CASE shifttype
						           WHEN 1 THEN stocksysnoA
						           ELSE stocksysnob END AS StockSysNo,
						        RelatedShiftSysno AS  RelatedSysNo,
                    IPP3.dbo.st_shift.CompanyCode
						      FROM IPP3.dbo.st_shift WITH(NOLOCK)
						      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
						      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
						      WHERE status >= 4  AND  ((shifttype<>1 AND stocksysnoB = @WarehouseSysNo) OR (shifttype=1 AND stocksysnoA = @WarehouseSysNo))  
							        AND productsysno=@ItemSysNo
                      AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
					      )    
					      UNION ALL
					      -- adjust
					      (
						      SELECT 
						        '10' AS OrderName, 
						        productsysno AS ProductSysNo, 
						        outtime AS OrderTime,
						        adjustid AS OrderCode,
						        IPP3.dbo.st_adjust.sysno AS OrderSysNo,
						        adjustqty AS OrderQty,
						        stocksysno AS StockSysNo,
						        0 AS RelatedSysNo,
                    IPP3.dbo.st_adjust.CompanyCode
						      FROM IPP3.dbo.st_adjust  WITH(NOLOCK)
						      INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
						      ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
						      WHERE status = 3 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
                  AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- RMAOut
					      (
                  select 
									'11' as OrderName, 
									rrs.revertproductsysno as ProductSysNo, 
									outtime as OrderTime,
									RevertID as OrderCode,
									rr.SysNo as OrderSysNo,
									'-1' as OrderQty,
									rri.StockSysNo,
                  0 as RelatedSysNo,
                  rr.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMARevertMaster rr with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMARevertTransaction rri with (nolock)
									on rr.SysNo = rri.RevertSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rri.RegisterSysNo
									where 
                  rr.Status=1 
                  and rrs.NewProductStatus<>0 
                  and  stocksysno = @WarehouseSysNo 
                  and rrs.revertproductsysno=@ItemSysNo 
                  and rr.OutTime<@RevertTime
                  AND rr.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- RMAReturn
					      (
                  select 
									'12' as OrderName, 
									rrni.Targetproductsysno as ProductSysNo, 
									max(ReturnTime) as OrderTime,
									ReturnID as OrderCode,
									rrn.SysNo as OrderSysNo,
									count(*) as OrderQty,
									rrn.StockSysNo,
                  0 as RelatedSysNo,
                  rrn.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMAReturnMaster rrn with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMAReturnTransaction rrni with (nolock)
									on rrn.SysNo = rrni.ReturnSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rrni.RegisterSysNo
									where rrn.Status=1 and rrni.OriginalWarehouse = @WarehouseSysNo and rrni.Targetproductsysno=@ItemSysNo	
                  AND rrn.CompanyCode = @CompanyCode
                  group by rrn.SysNo,rrn.ReturnID,rrn.stocksysno,rrni.Targetproductsysno,rrn.CompanyCode
					       )
				         UNION ALL
                 --RMA IT/RT单
                (
                    select distinct '18' as OrderName, 
                    c.targetproductsysno as ProductSysNo, 
                    max(a.Intime) as OrderTime,
                    cast (a.SysNo as nvarchar) as OrderCode,
                    a.SysNo as OrderSysNo,
                    sum(c.TargetProductQty) as OrderQty,
                    a.StockSysNoA as StockSysNo,
                    0 as RelatedSysNo,
                    d.CompanyCode
                    from rma.dbo.RMA_Stock_Shift a (nolock)
                    inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno
                    inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                    where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                    and a.StockSysNoB = @WarehouseSysNo and c.targetproductsysno=@ItemSysNo	
                    and (d.shippedwarehouse=a.stocksysnoB or (d.shippedwarehouse!=a.stocksysnoB and isnull(d.refundstatus,0)!=2))
                    and d.CompanyCode = @CompanyCode
                    group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode

                    union All
                    select distinct 
                    '18' as OrderName, 
                    c.targetproductsysno as ProductSysNo, 
                    max(a.Intime) as OrderTime,
                    cast (a.SysNo as nvarchar) as OrderCode,
                    a.SysNo as OrderSysNo,
                    sum(c.TargetProductQty) as OrderQty,
                    a.StockSysNoA as StockSysNo,
                    0 as RelatedSysNo,
                    d.CompanyCode
                    from rma.dbo.RMA_Stock_Shift a (nolock)                                    
                    inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno 
                    inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                    where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                    and d.shippedwarehouse =@WarehouseSysNo and c.targetproductsysno=@ItemSysNo	
                    and d.shippedwarehouse!=a.stocksysnoB and d.refundstatus=2
                    and d.CompanyCode = @CompanyCode
                    group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode
                                                    
                    )                             
                   union all
                  --OPC-RMA单，未进行company限定 
                  (
                      select 
								      '19' as OrderName, 
								      b.productsysno as ProductSysNo, 
								      a.CreateTime as OrderTime,
								      cast (a.SysNo as nvarchar) as OrderCode,
								      a.SysNo as OrderSysNo,
								      (-1)*b.ShiftQty as OrderQty,
								      a.StockSysNoA as StockSysNo,
                      0 as RelatedSysNo,
                      null as CompanyCode
								      from rma.dbo.RMA_Stock_Shift a (nolock)
								      inner join rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
								      where a.Status>=2 and a.shifttype=2 and a.StockSysNoA = @WarehouseSysNo and b.ProductSysNo=@ItemSysNo								
                 ) 
                 UNION ALL
					      ---Balance，未进行company限定
					      (    
                  SELECT 
						         '13' AS OrderName,
						         productsysno AS ProductSysNo,
						         createtime AS OrderTime,
						         '' AS OrderCode,
						         '' AS OrderSysNo,
						         quantity AS OrderQty,
						         stocksysno AS StockSysNo,
						         0 AS RelatedSysNo,
                     null as CompanyCode
						       FROM IPP3.dbo.st_balance WITH(NOLOCK) 
						       WHERE stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
					        )
                  UNION ALL
                  --RMA 换发单原产品库存加
                 (
                    select '21' as OrderName,
                    a.SourceProductSysNo as ProductSysNo,
                    a.InTime as OrderTime,
                    CAST(a.sysno as nvarchar) as OrderCode,
                    a.SysNo as OrderSysNo,
                    1 as OrderQty,
                    e.StockSysNoB as StockSysNo,
                    0 as RelatedSysNo,
                    null as CompanyCode
                    From IPP3.dbo.RMA_Transmit a with (nolock)
                    inner join RMA.dbo.RMA_ChangeItem_Detail b with (nolock) on b.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_ChangeItem c with (nolock) on c.Sysno=b.RMAChangeItemSysNo
                    inner join RMA.dbo.RMA_Shift_Register d with (nolock) on d.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_Stock_Shift e with (nolock) on e.Sysno=d.RMAShiftSysno
                    where a.Status=3 and c.Status=1 and e.Status=4
                    and (e.shifttype=0 or e.shifttype=1)
                    and e.StockSysNoB=@WarehouseSysNo
                    and a.SourceProductSysNo=@ItemSysNo
                  )
                 UNION ALL
                 --RMA换发单转换产品为正常品时库存减
                 (
                    select '22' as OrderName,
                    a.TransmitProductSysNo as ProductSysNo,
                    a.InTime as OrderTime,
                    CAST(a.sysno as nvarchar) as OrderCode,
                    a.SysNo as OrderSysNo,
                    -1 as OrderQty,
                    e.StockSysNoB as StockSysNo,
                    0 as RelatedSysNo,
                    null as CompanyCode
                    From IPP3.dbo.RMA_Transmit a with (nolock)
                    inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                    inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                    where a.Status=3 and b.TargetProductType=0 and c.Status=1 and e.Status=4 
                    and (e.shifttype=0 or e.shifttype=1)
                    and e.StockSysNoB=@WarehouseSysNo
                    and a.TransmitProductSysNo=@ItemSysNo
                  )
                  UNION ALL
                  --RMA换发单转换产品为二手品时二手品对应的原产品库存减
                  (
                    select '23' as OrderName,
                    g.SysNo as ProductSysNo,
                    a.InTime as OrderTime,
                    CAST(a.sysno as nvarchar) as OrderCode,
                    a.SysNo as OrderSysNo,
                    -1 as OrderQty,
                    e.StockSysNoB as StockSysNo,
                    0 as RelatedSysNo,
                    null as CompanyCode
                     From IPP3.dbo.RMA_Transmit a with (nolock)
                    inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                    inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                    inner join OverseaContentManagement.dbo.V_IM_Product f with(nolock) on f.SysNo=a.TransmitProductSysNo
                    inner join OverseaContentManagement.dbo.V_IM_Product g with(nolock) on g.ProductID=substring(f.ProductID,1,10)
                    where a.Status=3 and b.TargetProductType=1 and c.Status=1 and e.Status=4 
                    and (e.shifttype=0 or e.shifttype=1)
                    and e.StockSysNoB=@WarehouseSysNo
                    and g.SysNo=@ItemSysNo
                 )                                    
				      )RESULT
              INNER JOIN [IPP3].[dbo].[Product] PDT WITH(NOLOCK)
              ON PDT.[SysNo]=RESULT.[ProductSysNo] 
              WHERE  RESULT.ProductSysNo=@ItemSysNo AND PDT.[MerchantSysNo]=@MerchantSysNo
        )
        AS a 
        WHERE a.RowNumber > @StartNumber
        ORDER BY  #SortColumnName#
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@WarehouseSysNo"/>
      <param dbType="Int32" name="@ItemSysNo"/>
      <param dbType="Int32" name="@MerchantSysNo"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <!--查询总仓库存单据-->
  <dataCommand name="QueryItemsCardReLatedOrderWithOutWarehouseNumber" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
            SELECT 
              @TotalCount = Count(a.OrderCode)
            FROM 
            (
	              --instock '0':PO(Instock) '1':PO-Return(Instock) '2':PO-History-Return(Instock) '3':PO-调价(Instock)
                (
	                select 
									case when potype=0 then '0' when potype=1 then '1' 
                  when potype=2 then '2' 
                  when potype=3 then '3' end as OrderName,
									productsysno as ProductSysNo,  
									intime as OrderTime,
									poid as OrderCode,
									po_master.sysno as OrderSysNo,
									quantity as OrderQty,
									PayStockSysNo StockSysNo,
                  0 as RelatedSysNo,
                  po_master.CompanyCode
									from 
									IPP3.dbo.V_POPayStock po_master with (nolock) 
                  inner join IPP3.dbo.po_item with (nolock)
									on po_master.sysno = IPP3.dbo.po_item.posysno
									where po_master.status in(4,6,7,8) and productsysno=@ItemSysNo
                  and po_master.CompanyCode = @CompanyCode
                )
	              UNION ALL
	                -- lend
	                (
	                  SELECT 
	                    '4' AS OrderName, 
	                    productsysno AS ProductSysNo, 
	                    outtime AS OrderTime,
	                    lendid AS OrderCode,
	                    IPP3.dbo.st_lend.sysno AS OrderSysNo,
	                    lendqty*(-1) AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_lend.CompanyCode
                    FROM IPP3.dbo.st_lend  WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
                    ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
                    WHERE status >= 3   AND productsysno = @ItemSysNo
                    AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
	                )
	                UNION ALL
	                -- lendReturn
	                (
	                  SELECT 
	                    '5' AS OrderName, 
	                    productsysno AS ProductSysNo, 
	                    returntime AS OrderTime,
	                    lendid AS OrderCode,
	                    IPP3.dbo.st_lend.sysno AS OrderSysNo,
	                    returnqty AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_lend.CompanyCode
                    FROM IPP3.dbo.st_lend  WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_lend_return WITH(NOLOCK)
                    ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_return.lendsysno
                    WHERE status >= 4 AND productsysno = @ItemSysNo
                    AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
	                )								
	                UNION ALL
	                -- so
	                (
	                  select 
						        '6' as OrderName,
						        productsysno as ProductSysNo,  
						        outtime as OrderTime,
						        soid as OrderCode,
						        so_master.sysno as OrderSysNo,
						        quantity*(-1) as OrderQty,
						        IPP3.dbo.v_so_item.WarehouseNumber as StockSysNo,
                    0 as RelatedSysNo,
                    so_master.CompanyCode
						        from 
						        v_so_master so_master  with(nolock) 
                    inner join IPP3.dbo.v_so_item  with(nolock) on so_master.sysno = IPP3.dbo.v_so_item.sosysno
                    left join OverseaOrderManagement.dbo.V_OM_SO_CheckShipping so_checkShipping with(nolock)  on so_master.sysno = so_checkShipping.sosysno
						        where status = 4 and productsysno=@ItemSysNo and IPP3.dbo.v_so_item.producttype not in (3,4)
                    and so_master.CompanyCode = @CompanyCode
                    and ISNULL(so_checkShipping.sotype,0)<>10
	                )
	                UNION ALL
	                -- transfer
	                (
	                  SELECT 
	                    '7' AS OrderName,
	                    productsysno AS ProductSysNo, 
	                    outtime AS OrderTime,
	                    transferid AS OrderCode,
	                    IPP3.dbo.st_transfer.sysno AS OrderSysNo,
	                    CASE transfertype WHEN 1 THEN transferqty*(-1) ELSE transferqty END AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_transfer.CompanyCode
                    FROM IPP3.dbo.st_transfer  WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
                    ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
                    WHERE status = 3 AND productsysno = @ItemSysNo
                    AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
	                )
	                UNION ALL
	                -- 移仓单(移出)
	                (
	                  SELECT 
	                    '8' AS OrderName,
	                    productsysno AS ProductSysNo, 
	                    outtime AS OrderTime,
	                    shiftid AS OrderCode,
	                    IPP3.dbo.st_shift.sysno AS OrderSysNo,
	                    CASE shifttype 
	                      WHEN 1 THEN abs(shiftqty)*(-1) 
	                      ELSE shiftqty * (-1) END AS OrderQty,
	                    CASE shifttype
	                      WHEN 1 THEN stocksysnoB
	                      ELSE stocksysnoA END AS StockSysNo,
	                    RelatedShiftSysno AS  RelatedSysNo,
                      IPP3.dbo.st_shift.CompanyCode
                    FROM IPP3.dbo.st_shift WITH(NOLOCK) 
                    INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
                    ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
                    WHERE status >= 3  AND productsysno = @ItemSysNo      
                    AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
	                )
	                UNION ALL
	                -- 移仓单(移入)
	                (
	                  SELECT 
	                    '9' AS OrderName,
	                    productsysno AS ProductSysNo, 
	                    intime AS OrderTime,
	                    shiftid AS OrderCode,
	                    IPP3.dbo.st_shift.sysno AS OrderSysNo,
	                    CASE shifttype
	                      WHEN 1 THEN abs(instockqty)
	                      ELSE instockqty END AS OrderQty,
	                    CASE shifttype
	                      WHEN 1 THEN stocksysnoA
	                      ELSE stocksysnob END AS StockSysNo,
	                    RelatedShiftSysno AS  RelatedSysNo,
                      IPP3.dbo.st_shift.CompanyCode
                    FROM IPP3.dbo.st_shift WITH(NOLOCK) 
                    INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
                    ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
                    WHERE status >= 4 AND productsysno=@ItemSysNo
                    AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
                    --status>=4 means status is one of InStock OR PartlyInStock
	                )    
	                UNION ALL
	                -- adjust
	                (
	                  SELECT 
	                    '10' AS OrderName, 
	                    productsysno AS ProductSysNo, 
	                    outtime AS OrderTime,
	                    adjustid AS OrderCode,
	                    IPP3.dbo.st_adjust.sysno AS OrderSysNo,
	                    adjustqty AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_adjust.CompanyCode
                    FROM IPP3.dbo.st_adjust  WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
                    ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
                    WHERE status=3 AND productsysno = @ItemSysNo
                    AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
                    --status=3 means status=AdjustStatus.OutStock
	                )
	                UNION ALL
	                -- RMAOut
	                (
	                 select 
									'11' as OrderName, 
									rrs.revertproductsysno as ProductSysNo, 
									outtime as OrderTime,
									RevertID as OrderCode,
									rr.SysNo as OrderSysNo,
									'-1' as OrderQty,
									rri.StockSysNo,
                  0 as RelatedSysNo,
                  rr.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMARevertMaster rr with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMARevertTransaction rri with (nolock)
									on rr.SysNo = rri.RevertSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rri.RegisterSysNo
									where 
                  rr.Status=1 
                  and rrs.NewProductStatus<>0 
                  and rrs.revertproductsysno=@ItemSysNo 
                  and rr.OutTime<@RevertTime
                  AND rr.CompanyCode = @CompanyCode
	                )
	                UNION ALL
	                -- RMAReturn
	                (
                  
                  select 
									'12' as OrderName, 
									rrni.Targetproductsysno as ProductSysNo, 
									max(ReturnTime) as OrderTime,
									ReturnID as OrderCode,
									rrn.SysNo as OrderSysNo,
									count(*) as OrderQty,
									rrn.StockSysNo,
                  0 as RelatedSysNo,
                  rrn.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMAReturnMaster rrn with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMAReturnTransaction rrni  with (nolock)
									on rrn.SysNo = rrni.ReturnSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rrni.RegisterSysNo
									where rrn.Status=1 and rrni.Targetproductsysno=@ItemSysNo	
                  AND rrn.CompanyCode = @CompanyCode
                  group by rrn.SysNo,rrn.ReturnID,rrn.stocksysno,rrni.Targetproductsysno,rrn.CompanyCode		
	                )
	                UNION ALL
                  --RMA IT/RT单
                  (
                      select distinct '18' as OrderName, 
                      c.targetproductsysno as ProductSysNo, 
                      max(a.Intime) as OrderTime,
                      cast (a.SysNo as nvarchar) as OrderCode,
                      a.SysNo as OrderSysNo,
                      sum(c.TargetProductQty) as OrderQty,
                      a.StockSysNoA as StockSysNo,
                      0 as RelatedSysNo,
                      d.CompanyCode
                      from rma.dbo.RMA_Stock_Shift a (nolock)
                      inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno
                      inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                      where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                      and c.targetproductsysno=@ItemSysNo	
                      and (d.shippedwarehouse=a.stocksysnoB or (d.shippedwarehouse!=a.stocksysnoB and isnull(d.refundstatus,0)!=2))
                      and d.CompanyCode = @CompanyCode
                      group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode

                      union All
                      select distinct 
                      '18' as OrderName, 
                      c.targetproductsysno as ProductSysNo, 
                      max(a.Intime) as OrderTime,
                      cast (a.SysNo as nvarchar) as OrderCode,
                      a.SysNo as OrderSysNo,
                      sum(c.TargetProductQty) as OrderQty,
                      a.StockSysNoA as StockSysNo,
                      0 as RelatedSysNo,
                      d.CompanyCode
                      from rma.dbo.RMA_Stock_Shift a (nolock)                                    
                      inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno 
                      inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                      where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                      and c.targetproductsysno=@ItemSysNo	
                      and d.shippedwarehouse!=a.stocksysnoB and d.refundstatus=2
                      and d.CompanyCode = @CompanyCode
                      group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode      
                                                      
                      )                             
                     union all
                    --OPC-RMA单 ，未进行company限定 
                    (
                        select 
								        '19' as OrderName, 
								        b.productsysno as ProductSysNo, 
								        a.CreateTime as OrderTime,
								        cast (a.SysNo as nvarchar) as OrderCode,
								        a.SysNo as OrderSysNo,
								        (-1)*b.ShiftQty as OrderQty,
								        a.StockSysNoA as StockSysNo,
                        0 as RelatedSysNo,
                        null as CompanyCode
								        from rma.dbo.RMA_Stock_Shift a (nolock)
								        inner join rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
								        where a.Status>=2 and a.shifttype=2 and  b.ProductSysNo=@ItemSysNo								
                   ) 
                   UNION ALL
	                ---Balance ，未进行company限定
	                (    
                      SELECT 
	                    '13' AS OrderName,
	                    productsysno AS ProductSysNo,
	                    createtime AS OrderTime,
	                    '' AS OrderCode,
	                    '' AS OrderSysNo,
	                    quantity AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      null as CompanyCode
	                    FROM IPP3.dbo.st_balance WITH(NOLOCK) 
	                    WHERE productsysno = @ItemSysNo
	                )
                   UNION ALL
                    --RMA 换发单原产品库存加
                   (
                      select '21' as OrderName,
                      a.SourceProductSysNo as ProductSysNo,
                      a.InTime as OrderTime,
                      CAST(a.sysno as nvarchar) as OrderCode,
                      a.SysNo as OrderSysNo,
                      1 as OrderQty,
                      e.StockSysNoB as StockSysNo,
                      0 as RelatedSysNo,
                      null as CompanyCode
                      From IPP3.dbo.RMA_Transmit a with (nolock)
                      inner join RMA.dbo.RMA_ChangeItem_Detail b with (nolock) on b.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_ChangeItem c with (nolock) on c.Sysno=b.RMAChangeItemSysNo
                      inner join RMA.dbo.RMA_Shift_Register d with (nolock) on d.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_Stock_Shift e with (nolock) on e.Sysno=d.RMAShiftSysno
                      where a.Status=3 and c.Status=1 and e.Status=4
                      and (e.shifttype=0 or e.shifttype=1)                   
                      and a.SourceProductSysNo=@ItemSysNo
                    )
                   UNION ALL
                   --RMA换发单转换产品为正常品时库存减
                   (
                      select '22' as OrderName,
                      a.TransmitProductSysNo as ProductSysNo,
                      a.InTime as OrderTime,
                      CAST(a.sysno as nvarchar) as OrderCode,
                      a.SysNo as OrderSysNo,
                      -1 as OrderQty,
                      e.StockSysNoB as StockSysNo,
                      0 as RelatedSysNo,
                      null as CompanyCode
                      From IPP3.dbo.RMA_Transmit a with (nolock)
                      inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                      inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                      where a.Status=3 and b.TargetProductType=0 and c.Status=1 and e.Status=4 
                      and (e.shifttype=0 or e.shifttype=1)                  
                      and a.TransmitProductSysNo=@ItemSysNo
                    )
                    UNION ALL
                    --RMA换发单转换产品为二手品时二手品对应的原产品库存减
                    (
                      select '23' as OrderName,
                      g.SysNo as ProductSysNo,
                      a.InTime as OrderTime,
                      CAST(a.sysno as nvarchar) as OrderCode,
                      a.SysNo as OrderSysNo,
                      -1 as OrderQty,
                      e.StockSysNoB as StockSysNo,
                      0 as RelatedSysNo,
                      null as CompanyCode
                       From IPP3.dbo.RMA_Transmit a with (nolock)
                      inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                      inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                      inner join OverseaContentManagement.dbo.V_IM_Product f with(nolock) on f.SysNo=a.TransmitProductSysNo
                      inner join OverseaContentManagement.dbo.V_IM_Product g with(nolock) on g.ProductID=substring(f.ProductID,1,10)
                      where a.Status=3 and b.TargetProductType=1 and c.Status=1 and e.Status=4 
                      and (e.shifttype=0 or e.shifttype=1)                    
                      and g.SysNo=@ItemSysNo
                   )
              )AS a 
              INNER JOIN [IPP3].[dbo].[Product] PDT WITH(NOLOCK)
              ON PDT.[SysNo]=a.[ProductSysNo] 
              WHERE  a.ProductSysNo=@ItemSysNo AND PDT.[MerchantSysNo]=@MerchantSysNo

            SELECT 
              a.OrderName,
              '' AS OrderNameString,
              a.ProductSysNo,
              a.OrderTime,
              a.OrderCode,
              a.StockSysNo,
              a.RelatedSysNo,
              a.OrderQty,
              a.OrderSysNo,
              a.CompanyCode
            FROM 
            (
	            SELECT  
                RESULT.OrderName,
                RESULT.ProductSysNo,
                RESULT.OrderTime,
                RESULT.OrderCode,
                RESULT.StockSysNo,
                RESULT.RelatedSysNo,
                RESULT.OrderQty,
                RESULT.OrderSysNo,
                RESULT.CompanyCode,
                (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
	            FROM
	            (
		            --instock '0':PO(Instock) '1':PO-Return(Instock) '2':PO-History-Return(Instock) '3':PO-调价(Instock)
		            (
		              SELECT 
							( CASE 
								WHEN porcv.purno IS NULL THEN cast(potype as varchar) 
								ELSE cast(potype as varchar) +'_' 
							END) AS OrderName 
						   ,productsysno AS ProductSysNo 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN intime 
								ELSE porcv.ReceivedDate 
							END) AS OrderTime 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN poid 
								ELSE cast(poid as varchar)+'_' +cast(porcv.batchnumber as varchar)
							END) AS OrderCode 
						   ,po_master.sysno AS OrderSysNo 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN quantity 
								ELSE porcv.ReceivedQuantity 
							END) AS OrderQty 
						   ,PayStockSysNo StockSysNo 
						   ,0 AS RelatedSysNo 
						   ,po_master.CompanyCode 
						FROM IPP3.dbo.V_POPayStock po_master WITH (NOLOCK) 
						INNER JOIN IPP3.dbo.po_item WITH (NOLOCK) 
							ON po_master.sysno = IPP3.dbo.po_item.posysno 
						LEFT JOIN Scm.dbo.POReceivedDetail porcv WITH (NOLOCK) 
							ON po_master.sysno=porcv.Purno 
							AND porcv.item=( 
							SELECT 
								productid 
							FROM OverseaContentManagement.dbo.V_CM_ItemBasicInfo WITH(NOLOCK) 
							WHERE 
								sysno=po_item.productsysno 
						 ) 
						 where po_master.status in(4,6,7,8)
						 and productsysno=@ItemSysNo
						 and po_master.CompanyCode = @CompanyCode
                  )
                  UNION ALL
                  -- lend
                  (
		                SELECT 
	                    '4' AS OrderName, 
	                    productsysno AS ProductSysNo, 
	                    outtime AS OrderTime,
	                    lendid AS OrderCode,
	                    IPP3.dbo.st_lend.sysno AS OrderSysNo,
	                    lendqty*(-1) AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_lend.CompanyCode
                    FROM IPP3.dbo.st_lend WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
                    ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
                    WHERE status >= 3   AND productsysno = @ItemSysNo
                    AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
                  )
                  UNION ALL
                  -- lendReturn
                  (
		                SELECT 
	                    '5' AS OrderName, 
	                    productsysno AS ProductSysNo, 
	                    returntime AS OrderTime,
	                    lendid AS OrderCode,
	                    IPP3.dbo.st_lend.sysno AS OrderSysNo,
	                    returnqty AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_lend.CompanyCode
                    FROM IPP3.dbo.st_lend WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_lend_return WITH(NOLOCK)
                    ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_return.lendsysno
                    WHERE status >= 4 AND productsysno=@ItemSysNo
                    AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
                    )								
                    UNION ALL
                    -- so
                    (
		                  select 
						          '6' as OrderName,
						          productsysno as ProductSysNo,  
						          outtime as OrderTime,
						          soid as OrderCode,
						          so_master.sysno as OrderSysNo,
						          quantity*(-1) as OrderQty,
						          IPP3.dbo.v_so_item.WarehouseNumber as StockSysNo,
                      0 as RelatedSysNo,
                      so_master.CompanyCode
						          from 
						          IPP3.dbo.v_so_master so_master  with(nolock) 
                      inner join IPP3.dbo.v_so_item  with(nolock) on so_master.sysno = IPP3.dbo.v_so_item.sosysno
                      left join OverseaOrderManagement.dbo.V_OM_SO_CheckShipping so_checkShipping with(nolock)  on so_master.sysno = so_checkShipping.sosysno
						          where status = 4 and productsysno=@ItemSysNo and IPP3.dbo.v_so_item.producttype not in (3,4)
                      and so_master.CompanyCode = @CompanyCode
                      and  ISNULL(so_checkShipping.sotype,0)<>10
	                    )
	                    UNION ALL
	                    -- transfer
	                    (
		                    SELECT 
		                      '7' AS OrderName,
		                      productsysno AS ProductSysNo, 
		                      outtime AS OrderTime,
		                      transferid AS OrderCode,
		                      IPP3.dbo.st_transfer.sysno AS OrderSysNo,
		                      CASE transfertype WHEN 1 THEN transferqty*(-1) ELSE transferqty END AS OrderQty,
		                      stocksysno AS StockSysNo,
		                      0 AS RelatedSysNo,
                          IPP3.dbo.st_transfer.CompanyCode
		                    FROM IPP3.dbo.st_transfer WITH(NOLOCK)
		                    INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
		                    ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
		                    WHERE status = 3 AND productsysno = @ItemSysNo
                        AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
		                    )
		                    UNION ALL
		                    -- 移仓单(移出)
		                    (
		                      SELECT 
		                        '8' AS OrderName,
		                        productsysno AS ProductSysNo, 
		                        outtime AS OrderTime,
		                        shiftid AS OrderCode,
		                        IPP3.dbo.st_shift.sysno AS OrderSysNo,
		                        CASE shifttype 
		                          WHEN 1 THEN abs(shiftqty)*(-1) 
		                          ELSE shiftqty * (-1) END AS OrderQty,
		                        CASE shifttype
		                          WHEN 1 THEN stocksysnoB
		                          ELSE stocksysnoA END AS StockSysNo,
		                        RelatedShiftSysno AS  RelatedSysNo,
                            IPP3.dbo.st_shift.CompanyCode
		                      FROM IPP3.dbo.st_shift WITH(NOLOCK) 
		                      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		                      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
		                      WHERE status >= 3  AND productsysno = @ItemSysNo     
                          AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
		                    )
		                    UNION ALL
		                    -- 移仓单(移入)
		                    (
		                      SELECT 
		                        '9' AS OrderName,
		                        productsysno AS ProductSysNo, 
		                        intime AS OrderTime,
		                        shiftid AS OrderCode,
		                        IPP3.dbo.st_shift.sysno AS OrderSysNo,
		                        CASE shifttype
		                          WHEN 1 THEN abs(instockqty)
		                          ELSE instockqty END AS OrderQty,
		                        CASE shifttype
		                          WHEN 1 THEN stocksysnoA
		                          ELSE stocksysnob END AS StockSysNo,
		                        RelatedShiftSysno AS  RelatedSysNo,
                            IPP3.dbo.st_shift.CompanyCode
		                      FROM IPP3.dbo.st_shift WITH(NOLOCK) 
		                      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		                      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
		                      WHERE status >= 4 AND productsysno = @ItemSysNo
                          AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
		                    )    
		                    UNION ALL
		                    -- adjust
		                    (
		                      SELECT 
		                        '10' AS OrderName, 
		                        productsysno AS ProductSysNo, 
		                        outtime AS OrderTime,
		                        adjustid AS OrderCode,
		                        IPP3.dbo.st_adjust.sysno AS OrderSysNo,
		                        adjustqty AS OrderQty,
		                        stocksysno AS StockSysNo,
		                        0 AS RelatedSysNo,
                            IPP3.dbo.st_adjust.CompanyCode
		                      FROM IPP3.dbo.st_adjust  WITH(NOLOCK)
		                      INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
		                      ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
		                      WHERE status = 3 AND productsysno = @ItemSysNo
                          AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
		                    )
		                    UNION ALL
		                    -- RMAOut
		                    (
                        select 
									        '11' as OrderName, 
									        rrs.revertproductsysno as ProductSysNo, 
									        outtime as OrderTime,
									        RevertID as OrderCode,
									        rr.SysNo as OrderSysNo,
									        '-1' as OrderQty,
									        rri.StockSysNo,
                          0 as RelatedSysNo,
                          rr.CompanyCode
									        from 
									        OverseaServiceManagement.dbo.V_SM_RMARevertMaster rr with (nolock) 
                          inner join OverseaServiceManagement.dbo.V_SM_RMARevertTransaction rri with (nolock)
									        on rr.SysNo = rri.RevertSysNo
                          inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                          on rrs.SysNo = rri.RegisterSysNo
									        where rr.Status=1 
                          and rrs.NewProductStatus<>0 
                          and rrs.revertproductsysno=@ItemSysNo 
                          and rr.OutTime<@RevertTime
                          AND rr.CompanyCode = @CompanyCode
		                    )
		                    UNION ALL
		                    -- RMAReturn
		                    (
                         select 
									        '12' as OrderName, 
									        rrni.Targetproductsysno as ProductSysNo, 
									        max(ReturnTime) as OrderTime,
									        ReturnID as OrderCode,
									        rrn.SysNo as OrderSysNo,
									        count(*) as OrderQty,
									        rrn.StockSysNo,
                          0 as RelatedSysNo,
                          rrn.CompanyCode
									        from 
									        OverseaServiceManagement.dbo.V_SM_RMAReturnMaster rrn with (nolock) 
                          inner join OverseaServiceManagement.dbo.V_SM_RMAReturnTransaction rrni with (nolock)
									        on rrn.SysNo = rrni.ReturnSysNo
                          inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                          on rrs.SysNo = rrni.RegisterSysNo
									        where rrn.Status=1 and rrni.Targetproductsysno=@ItemSysNo	
                          AND rrn.CompanyCode = @CompanyCode
                          group by rrn.SysNo,rrn.ReturnID,rrn.stocksysno,rrni.Targetproductsysno,rrn.CompanyCode				
		                    )
		                    UNION ALL
                        --RMA IT/RT单
                        (
                            select distinct '18' as OrderName, 
                            c.targetproductsysno as ProductSysNo, 
                            max(a.Intime) as OrderTime,
                            cast (a.SysNo as nvarchar) as OrderCode,
                            a.SysNo as OrderSysNo,
                            sum(c.TargetProductQty) as OrderQty,
                            a.StockSysNoA as StockSysNo,
                            0 as RelatedSysNo,
                            d.CompanyCode
                            from rma.dbo.RMA_Stock_Shift a (nolock)
                            inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno
                            inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                            where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                            and c.targetproductsysno=@ItemSysNo	
                            and (d.shippedwarehouse=a.stocksysnoB or (d.shippedwarehouse!=a.stocksysnoB and isnull(d.refundstatus,0)!=2))
                            and d.CompanyCode = @CompanyCode
                            group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode

                            union All
                            select distinct 
                            '18' as OrderName, 
                            c.targetproductsysno as ProductSysNo, 
                            max(a.Intime) as OrderTime,
                            cast (a.SysNo as nvarchar) as OrderCode,
                            a.SysNo as OrderSysNo,
                            sum(c.TargetProductQty) as OrderQty,
                            a.StockSysNoA as StockSysNo,
                            0 as RelatedSysNo,
                            d.CompanyCode
                            from rma.dbo.RMA_Stock_Shift a (nolock)                                    
                            inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno 
                            inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                            where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                            and c.targetproductsysno=@ItemSysNo	
                            and d.shippedwarehouse!=a.stocksysnoB and d.refundstatus=2
                            and d.CompanyCode = @CompanyCode
                            group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode     
                                                            
                            )                             
                           union all
                          --OPC-RMA单 ，未进行company限定
                          (
                              select 
								              '19' as OrderName, 
								              b.productsysno as ProductSysNo, 
								              a.CreateTime as OrderTime,
								              cast (a.SysNo as nvarchar) as OrderCode,
								              a.SysNo as OrderSysNo,
								              (-1)*b.ShiftQty as OrderQty,
								              a.StockSysNoA as StockSysNo,
                              0 as RelatedSysNo,
                              null as CompanyCode
								              from rma.dbo.RMA_Stock_Shift a (nolock)
								              inner join rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
								              where a.Status>=2 and a.shifttype=2 and  b.ProductSysNo=@ItemSysNo								
                         ) 
                         UNION ALL
		                    ---Balance ，未进行company限定
		                    (    
		                      SELECT 
		                        '13' AS OrderName,
		                        productsysno AS ProductSysNo,
		                        createtime AS OrderTime,
		                        '' AS OrderCode,
		                        '' AS OrderSysNo,
		                        quantity AS OrderQty,
		                        stocksysno AS StockSysNo,
		                        0 AS RelatedSysNo,
                            null as CompanyCode
		                      FROM IPP3.dbo.st_balance WITH(NOLOCK) 
		                      WHERE productsysno = @ItemSysNo
		                    )
                        UNION ALL
                        --RMA 换发单原产品库存加
                       (
                          select '21' as OrderName,
                          a.SourceProductSysNo as ProductSysNo,
                          a.InTime as OrderTime,
                          CAST(a.sysno as nvarchar) as OrderCode,
                          a.SysNo as OrderSysNo,
                          1 as OrderQty,
                          e.StockSysNoB as StockSysNo,
                          0 as RelatedSysNo,
                          null as CompanyCode
                          From IPP3.dbo.RMA_Transmit a with (nolock)
                          inner join RMA.dbo.RMA_ChangeItem_Detail b with (nolock) on b.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_ChangeItem c with (nolock) on c.Sysno=b.RMAChangeItemSysNo
                          inner join RMA.dbo.RMA_Shift_Register d with (nolock) on d.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_Stock_Shift e with (nolock) on e.Sysno=d.RMAShiftSysno
                          where a.Status=3 and c.Status=1 and e.Status=4
                          and (e.shifttype=0 or e.shifttype=1)                   
                          and a.SourceProductSysNo=@ItemSysNo
                        )
                       UNION ALL
                       --RMA换发单转换产品为正常品时库存减
                       (
                          select '22' as OrderName,
                          a.TransmitProductSysNo as ProductSysNo,
                          a.InTime as OrderTime,
                          CAST(a.sysno as nvarchar) as OrderCode,
                          a.SysNo as OrderSysNo,
                          -1 as OrderQty,
                          e.StockSysNoB as StockSysNo,
                          0 as RelatedSysNo,
                          null as CompanyCode
                          From IPP3.dbo.RMA_Transmit a with (nolock)
                          inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                          inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                          where a.Status=3 and b.TargetProductType=0 and c.Status=1 and e.Status=4 
                          and (e.shifttype=0 or e.shifttype=1)                  
                          and a.TransmitProductSysNo=@ItemSysNo
                        )
                        UNION ALL
                        --RMA换发单转换产品为二手品时二手品对应的原产品库存减
                        (
                          select '23' as OrderName,
                          g.SysNo as ProductSysNo,
                          a.InTime as OrderTime,
                          CAST(a.sysno as nvarchar) as OrderCode,
                          a.SysNo as OrderSysNo,
                          -1 as OrderQty,
                          e.StockSysNoB as StockSysNo,
                          0 as RelatedSysNo,
                          null as CompanyCode
                           From IPP3.dbo.RMA_Transmit a with (nolock)
                          inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                          inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                          inner join OverseaContentManagement.dbo.V_IM_Product f with(nolock) on f.SysNo=a.TransmitProductSysNo
                          inner join OverseaContentManagement.dbo.V_IM_Product g with(nolock) on g.ProductID=substring(f.ProductID,1,10)
                          where a.Status=3 and b.TargetProductType=1 and c.Status=1 and e.Status=4 
                          and (e.shifttype=0 or e.shifttype=1)                    
                          and g.SysNo=@ItemSysNo
                       )
	                )RESULT
                  INNER JOIN [IPP3].[dbo].[Product] PDT WITH(NOLOCK)
                  ON PDT.[SysNo]=RESULT.[ProductSysNo] 
                  WHERE  RESULT.ProductSysNo=@ItemSysNo AND PDT.[MerchantSysNo]=@MerchantSysNo
            )AS a 
            WHERE a.RowNumber > @StartNumber
            ORDER BY  #SortColumnName#
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ItemSysNo"/>
      <param dbType="Int32" name="@MerchantSysNo"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <!--查询仓库-->
  <dataCommand name="GetStock" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
 DECLARE @StockType CHAR(3)
 SELECT @StockType=[StockType] FROM [IPP3].[dbo].[Vendor_Ex] WHERE [VendorSysNo]=@MerchantSysNo
 IF @StockType='NEG'
 BEGIN
	SELECT 
		a.[SysNo],
		a.[StockID],
		a.[StockName],
		a.[Status],
    a.[WebChannelSysNo],
    a.[WarehouseSysNo]
	FROM [IPP3].[dbo].[Stock] a WITH(NOLOCK)
  WHERE  (MerchantSysNo=@MerchantSysNo OR [StockType]=1) AND [Status]=0
 END
 ELSE
 BEGIN
	SELECT 
		a.[SysNo],
		a.[StockID],
		a.[StockName],
		a.[Status],
    a.[WebChannelSysNo],
    a.[WarehouseSysNo]
	FROM [IPP3].[dbo].[Stock] a WITH(NOLOCK)
  WHERE  MerchantSysNo=@MerchantSysNo AND [Status]=0
 END
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@MerchantSysNo"/>
    </parameters>
  </dataCommand>


  <dataCommand name="Inventory_AdjustProductInventoryByStock" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
      IF EXISTS(SELECT TOP 1 1 FROM  [IPP3].[dbo].[Inventory_Stock] (NOLOCK) WHERE ProductSysNo = @ProductSysNo AND StockSysNo = @StockSysNo )
      BEGIN
         UPDATE [IPP3].[dbo].[Inventory_Stock]
            SET [AccountQty] = [AccountQty] + @AccountQty
                ,[AvailableQty] = [AvailableQty] + @AvailableQty
                ,[AllocatedQty] =  CASE 
                                      WHEN AllocatedQty+@AllocatedQty<0 THEN 0 
                                      ELSE AllocatedQty+@AllocatedQty
                                   END      
                ,[OrderQty] = [OrderQty] + @OrderQty
                ,[PurchaseQty] = [PurchaseQty] + @PurchaseQty
                ,[ShiftInQty] = [ShiftInQty] + @ShiftInQty
                ,[ShiftOutQty] = [ShiftOutQty] + @ShiftOutQty            
                ,[ConsignQty] = [ConsignQty] + @ConsignQty
                ,[VirtualQty] = [VirtualQty] + @VirtualQty
                ,[ReservedQty] = ISNULL([ReservedQty], 0) + @ReservedQty
                ,[InvalidQty] = ISNULL([InvalidQty], 0) + @InvalidQty
                ,[ChannelQty] = ISNULL([ChannelQty], 0) + @ChannelQty   
            WHERE ProductSysNo = @ProductSysNo
                AND StockSysNo = @StockSysNo 
      END
      ELSE 
      BEGIN
        INSERT INTO [IPP3].[dbo].[Inventory_Stock]
               ([StockSysNo]
               ,[ProductSysNo]
               ,[AccountQty]
               ,[AvailableQty]
               ,[AllocatedQty]
               ,[OrderQty]
               ,[PurchaseQty]
               ,[ShiftInQty]
               ,[ShiftOutQty]
               ,[SafeQty]
               ,[Position1]
               ,[Position2]
               ,[ConsignQty]
               ,[VirtualQty]
               ,[DMSValue]
               ,[SaleDays]
               ,[CompanyCode]
               ,[LanguageCode]
               ,[StoreCompanyCode]
               ,[ReservedQty]
               ,[InvalidQty]
               ,[ChannelQty])
         VALUES
               (@StockSysNo
               ,@ProductSysNo
               ,0
               ,@AvailableQty
               ,0
               ,0
               ,0
               ,0
               ,0
               ,0
               ,null
               ,null
               ,0
               ,0
               ,0
               ,0
               ,'8601'
               ,'zh-CN'
               ,'8601'
               ,0
               ,0
               ,0)
      END
          ]]>
    </commandText>
    <parameters>
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@AccountQty" dbType="Int32" />
      <param name="@AvailableQty" dbType="Int32" />
      <param name="@AllocatedQty" dbType="Int32" />
      <param name="@OrderQty" dbType="Int32" />
      <param name="@PurchaseQty" dbType="Int32" />
      <param name="@ShiftInQty" dbType="Int32" />
      <param name="@ShiftOutQty" dbType="Int32" />
      <param name="@ConsignQty" dbType="Int32" />
      <param name="@VirtualQty" dbType="Int32" />
      <param name="@ReservedQty" dbType="Int32" />
      <param name="@InvalidQty" dbType="Int32" />
      <param name="@ChannelQty" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_AdjustProductTotalInventory" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
          UPDATE [IPP3].[dbo].[Inventory]
          SET [AccountQty] = [AccountQty] + @AccountQty
              ,[AvailableQty] = [AvailableQty] + @AvailableQty              
              ,[AllocatedQty]=   CASE 
                                      WHEN AllocatedQty+@AllocatedQty<0 THEN 0 
                                      ELSE AllocatedQty+@AllocatedQty
                                  END              
              ,[OrderQty] = [OrderQty] + @OrderQty
              ,[PurchaseQty] =  [PurchaseQty] + @PurchaseQty
              ,[VirtualQty] = [VirtualQty] + @VirtualQty
              ,[ConsignQty] = [ConsignQty] + @ConsignQty
              ,[ShiftQty] = [ShiftQty] + @ShiftQty
              ,[ReservedQty] = ISNULL([ReservedQty], 0) + @ReservedQty
              ,[InvalidQty] = ISNULL([InvalidQty], 0) + @InvalidQty
              ,[ChannelQty] = ISNULL([ChannelQty], 0) + @ChannelQty
          WHERE  [ProductSysNo] = @ProductSysNo
          ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@AccountQty" dbType="Int32" />
      <param name="@AvailableQty" dbType="Int32" />
      <param name="@AllocatedQty" dbType="Int32" />
      <param name="@OrderQty" dbType="Int32" />
      <param name="@PurchaseQty" dbType="Int32" />
      <param name="@ShiftQty" dbType="Int32" />
      <param name="@ConsignQty" dbType="Int32" />
      <param name="@VirtualQty" dbType="Int32" />
      <param name="@ReservedQty" dbType="Int32" />
      <param name="@InvalidQty" dbType="Int32" />
      <param name="@ChannelQty" dbType="Int32" />
    </parameters>
  </dataCommand>



  <dataCommand name="Inventory_InitProductInventoryInfo" database="Write" commandType="Text">
    <commandText>
      <![CDATA[  
            IF NOT EXISTS (
	            SELECT TOP 1 1 FROM IPP3.dbo.Inventory_Stock WITH(NOLOCK)   
                WHERE ProductSysNo = @ProductSysNo AND StockSysNo = @StockSysNo
            )  
            BEGIN  
	            INSERT INTO IPP3.dbo.Inventory_Stock  
	            (  
		            StockSysNo ,ProductSysNo  ,CompanyCode  
		            ,AccountQty ,AvailableQty ,AllocatedQty ,OrderQty ,PurchaseQty
		            ,ConsignQty ,VirtualQty ,ShiftInQty ,ShiftOutQty ,SafeQty  
		            ,Position1 ,Position2  
		            ,DMSValue  ,SaleDays  
	            )   
	            VALUES   
	            (  
		            @StockSysNo  ,@ProductSysNo  ,'8601'/*[Mark][Alan.X.Luo 硬编码]*/
		            ,0 ,0 ,0 ,0 ,0  
		            ,0 ,0 ,0 ,0 ,0  
		            ,'' ,''  
		            ,0.0 ,0.0  
	            )  
            END  
  
            IF NOT EXISTS (
	            SELECT TOP 1 1 FROM IPP3.dbo.Inventory WITH(NOLOCK)
	            WHERE ProductSysNo = @ProductSysNo
            )  
            BEGIN  
	            INSERT INTO IPP3.dbo.Inventory  
	            (  
		              ProductSysNo  ,CompanyCode 
		            ,AccountQty  ,AvailableQty  ,AllocatedQty  ,OrderQty  ,PurchaseQty  
		            ,VirtualQty  ,ConsignQty  ,ShiftQty  
	     
	            )   
	            VALUES   
	            (  
		              @ProductSysNo  ,'8601'  /*[Mark][Alan.X.Luo 硬编码]*/
		            ,0  ,0  ,0  ,0  ,0  
		            ,0  ,0  ,0  
	            )  
            END  
        ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>


  <dataCommand name="Inventory_GetProductInventroyType" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT top 1 InventoryType from ipp3.dbo.product with(nolock)     
      WHERE SysNo = @ProductSysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>


  <dataCommand name="Inventory_GetProductInventoryInfoByStock" database="Write" commandType="Text">
    <commandText>
      <![CDATA[  
            SELECT  I.[SysNo]
              , I.[StockSysNo]
              , I.[StockSysNo] AS [StockInfo.SysNo]
              ,S.StockName AS [StockInfo.StockName]
              , I.[ProductSysNo]
              , I.[AccountQty]
              , I.[AvailableQty]
              , I.[AllocatedQty]
              , I.[OrderQty]
              , I.[PurchaseQty]
              , I.[ShiftInQty]
              , I.[ShiftOutQty]
              , I.[ConsignQty]
              , I.[VirtualQty]      
              ,ISNULL( I.[ReservedQty], 0) AS [ReservedQty]
              ,ISNULL( I.[InvalidQty], 0) AS [InvalidQty]
              ,ISNULL( I.[ChannelQty], 0) AS [ChannelQty]
            FROM [IPP3].[dbo].[Inventory_Stock] AS I WITH(NOLOCK)
            LEFT JOIN [IPP3].[dbo].[Stock] AS S WITH(NOLOCK)
            ON I.StockSysNo=S.SysNo
            WHERE [ProductSysNo] = @ProductSysNo 
              AND [StockSysNo] = @StockSysNo 
        ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetProductTotalInventoryInfoByProduct" database="Write" commandType="Text">
    <commandText>
      <![CDATA[  
            SELECT [SysNo]
              ,[ProductSysNo]
              ,[AccountQty]
              ,[AvailableQty]
              ,[AllocatedQty]
              ,[OrderQty]
              ,[PurchaseQty]
              ,[VirtualQty]
              ,[ConsignQty]
              ,[ShiftQty]
              ,ISNULL([ReservedQty], 0) AS [ReservedQty]
              ,ISNULL([InvalidQty], 0) AS [InvalidQty]
              ,ISNULL([ChannelQty], 0) AS [ChannelQty]
            FROM [IPP3].[dbo].[Inventory] WITH(NOLOCK)
            WHERE [ProductSysNo] = @ProductSysNo
        ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetProductCostIn" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
              select pc.Sysno,pc.LeftQuantity,pc.LockQuantity 
                  from  OverseaInventoryManagement.dbo.ProductCostIn  pc with(nolock)   
                        inner join ipp3.dbo.PO_Item item with(nolock)   
                         on item.ProductSysNo=pc.ProductSysNo 
                  where item.POSysNo=@PoSysNo
                  and item.ProductSysNo=@ProductSysNo 
                  and pc.LeftQuantity>0
                  --and pc.LeftQuantity-pc.LockQuantity>0 
                  and item.OrderPrice=pc.Cost
                  and pc.WarehouseNumber=@WarehouseNumber
              order by pc.Priority,pc.Sysno    
      ]]>
    </commandText>
    <parameters>
      <param name="@PoSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@WarehouseNumber" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_LockProductCostInList" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
         update OverseaInventoryManagement.dbo.ProductCostIn
          set LockQuantity=@LockQuantity
          where Sysno=@SysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@LockQuantity" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="AdjustBatchNumberInventory" database="Write" commandType="Text">
    <commandText>
      <![CDATA[  
            Execute OverseaInventoryManagement.dbo.UP_ProductBatch_Maintain_V1 @Msg;
     ]]>
    </commandText>
    <parameters>
      <param name="@Msg" dbType="Xml" />
    </parameters>
  </dataCommand>

  <!--写成本日志-->
  <dataCommand name="Inventory_WriteCostLog"  database="Write" commandType="Text">
    <commandText>
      <![CDATA[
         INSERT INTO [OverseaInventoryManagement].[dbo].[ProductCostLog]
           ([BillType]
           ,[BillSysNo]
           ,[Message]
           ,[InDate])
         VALUES
               (@BillType
               ,@BillSysNo
               ,@Message
               ,GETDATE())

		]]>
    </commandText>
    <parameters>
      <param name="@BillType" dbType="Int32" />
      <param name="@BillSysNo" dbType="Int32" />
      <param name="@Message" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_WriteProductCost" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
      IF EXISTS(SELECT TOP 1 1 FROM [OverseaInventoryManagement].[dbo].[ProductCostIn] WITH(NOLOCK)
					WHERE [ProductSysNo]=@ProductSysNo
					AND [BillType]=@BillType
					AND [BillSysNo]=@BillSysNo
					AND [Cost]=@Cost)
		  BEGIN
			  UPDATE TOP(1) [OverseaInventoryManagement].[dbo].[ProductCostIn]
			  SET [Quantity] = [Quantity]+@Quantity
				  ,[LeftQuantity] = [LeftQuantity]+@Quantity
			  WHERE [ProductSysNo]=@ProductSysNo
					  AND [BillType]=@BillType
					  AND [BillSysNo]=@BillSysNo
					  AND [Cost]=@Cost
		  END
		  ELSE 
		  BEGIN
      
        DECLARE @CurrencySysNo INT;
        DECLARE @ExchangeRate DECIMAL(19,6);
        SELECT  @CurrencySysNo=CurrencySysNo,
	              @ExchangeRate=ExchangeRate
        FROM [OverseaInventoryManagement].[dbo].[FN_Inventory_GetCurrencyForCostIn](@BillType,@BillSysNo,@ProductSysNo,@WarehouseNumber)
      
			  INSERT INTO [OverseaInventoryManagement].[dbo].[ProductCostIn]
				 ([ProductSysNo]
				 ,[BillType]
				 ,[BillSysNo]
				 ,[Cost]
				 ,[Quantity]
				 ,[LeftQuantity]
				 ,[LockQuantity]
				 ,[TaxRate]
				 ,[InDate]
         ,CurrencySysNo
         ,ExchangeRate
         ,WarehouseNumber
				 )
			  SELECT TOP(1)
				 @ProductSysNo
				 ,@BillType
				 ,@BillSysNo
				 ,@Cost
				 ,@Quantity
				 ,@Quantity
				 ,0
				 ,ISNULL(PC.TaxRate,0.17) AS TaxRate
				 ,GETDATE()
         ,ISNULL(@CurrencySysNo,1)
         ,ISNULL(@ExchangeRate,1)
         ,@WarehouseNumber
			  FROM IPP3.dbo.Product P WITH(NOLOCK)
			  LEFT JOIN OverseaContentManagement.dbo.ProductCommonInfo_TaxRate PC WITH(NOLOCK)
			  ON P.ProductCommonInfoSysno = PC.ProductCommonInfoSysNo
			  WHERE P.SysNo=@ProductSysNo
		  END
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@BillType" dbType="Int32" />
      <param name="@BillSysNo" dbType="Int32"/>
      <param name="@Cost" dbType="Decimal" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@WarehouseNumber" dbType="Int32" />
    </parameters>
  </dataCommand>

  <!--获取同仓库成本序列-->
  <dataCommand name="Inventory_GetCostListByProductStock"  database="Write" commandType="Text">
    <commandText>
      <![CDATA[     
        SELECT [Sysno]
        ,[ProductSysNo]
        ,[BillType]
        ,[BillSysNo]
        ,[Cost]
        ,[Quantity]
        ,[LeftQuantity]
        ,[LockQuantity]
        ,[WarehouseNumber]
        FROM [OverseaInventoryManagement].[dbo].[ProductCostIn] WITH(NOLOCK)
        where ProductSysNo=@ProductSysNo and LeftQuantity-LockQuantity>0 and WarehouseNumber=@WarehouseNumber
        order by [Priority],sysno 
		]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@WarehouseNumber" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateProductCost"  database="Write" commandType="Text">
    <commandText>
      <![CDATA[     
      update [OverseaInventoryManagement].[dbo].[ProductCostIn]
        set LeftQuantity=LeftQuantity-@Quantity,
        --负采购要扣减锁定库存
        LockQuantity=case when @BillType= 40 then LockQuantity-@Quantity else LockQuantity end
        where Sysno=@CostInSysNo 

        INSERT INTO [OverseaInventoryManagement].[dbo].[ProductCostOut]
                   ([ProductSysNo]
                   ,[BillType]
                   ,[BillSysNo]
                   ,[Cost]
                   ,[Quantity]
                   ,[CostInSysNo]
                   ,[OutType]
                   ,[OutTypeRefrenceSysNo]
                   ,[InDate])
             VALUES
                   (@ProductSysNo
                   ,@BillType
                   ,@BillSysNo
                   ,@Cost
                   ,@Quantity
                   ,@CostInSysNo
                   ,0
                   ,0
                   ,GETDATE())

		]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@BillType" dbType="Int32" />
      <param name="@BillSysNo" dbType="Int32" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@Cost" dbType="Decimal" />
      <param name="@CostInSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateCostToBiz" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
         Execute OverseaInventoryManagement.dbo.UP_InventoryUpdateCostToBiz @BillType,@BillSysNo,@ProductSysNo,@UnitCost
      ]]>
    </commandText>
    <parameters>
      <param name="@BillType" dbType="Int32" />
      <param name="@BillSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@UnitCost" dbType="Decimal" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetAdjustRequestBySysNo" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          a.[SysNo]
         ,a.[AdjustID] AS RequestID
         ,a.[CreateTime] AS CreateDate
         ,a.[CreateUserSysNo] AS [CreateUser.SysNo]
         ,a.[AuditTime] AS AuditDate
         ,a.[AuditUserSysNo] AS [AuditUser.SysNo]
         ,a.[OutTime] AS [OutStockDate]
         ,a.[OutUserSysNo] AS [OutStockUser.SysNo]
         ,a.[Status] AS [RequestStatus]
         ,a.[Note]
         ,a.[AdjustType]
         ,a.[AdjustProperty]
         ,a.[StockSysNo] AS [Stock.SysNo]
         ,e.[StockName] AS [Stock.StockName]
			   ,au.DisplayName AS [AuditUser.UserName]
			   ,cu.DisplayName AS [CreateUser.UserName]
			   ,ou.DisplayName AS [OutStockUser.UserName] 
         ,a.CompanyCode         
		     ,ISNULL(a.IsConsign,0) AS ConsignFlag
      FROM IPP3.dbo.St_Adjust AS a WITH(NOLOCK) 
			LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS cu WITH(NOLOCK) 
				  ON a.CreateUserSysNo = cu.UserSysNo 
			LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS ou WITH(NOLOCK) 
				  ON a.OutUserSysNo = ou.UserSysNo 
			LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS au WITH(NOLOCK) 
				  ON a.AuditUserSysNo = au.UserSysNo
			INNER JOIN IPP3.dbo.Stock AS e WITH(NOLOCK) 
				  ON e.SysNo = a.StockSysNo 
      WHERE 
          a.SysNo=@SysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetAdjustItemListByRequestSysNo" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          a.[SysNo]
         ,a.[AdjustSysNo] AS RequestSysNo
         ,a.[ProductSysNo] AS [ProductSysNo]
         ,a.[AdjustQty] AS AdjustQuantity
         ,a.[AdjustCost] AS AdjustCost  
      FROM IPP3.dbo.St_Adjust_Item AS a WITH(NOLOCK)      
      WHERE AdjustSysNo=@RequestSysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>


  <dataCommand name="Inventory_GetAdjustInvoiceByRequestSysNo" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          [SysNo]
         ,[AdjustSysNo] AS RequestSysNo
         ,[ReceiveName]
         ,[Contact] AS ContactAddress
         ,[Address] AS ContactShippingAddress
         ,[Phone] AS ContactPhoneNumber
         ,[CustomerID] AS CustomerID
         ,[InvoiceNo] AS InvoiceNumber
         ,[Notes] AS Note         
      FROM IPP3.dbo.St_Adjust_Invoice WITH(NOLOCK) 
      WHERE AdjustSysNo=@RequestSysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetItemCost" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT TOP 1 Cost FROM OverseaInventoryManagement.dbo.ProductCostIn WITH(NOLOCK)
          WHERE ProductSysNo=@ProductSysNo AND BillType=40
          ORDER BY SysNo DESC
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateAdjustItemCost" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
       UPDATE [IPP3].[dbo].[St_Adjust_Item] 
       SET  AdjustCost=@AdjustCost
       WHERE Sysno=@AdjustItemSysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@AdjustItemSysNo" dbType="Int32" />
      <param name="@AdjustCost" dbType="Decimal" />
    </parameters>
  </dataCommand>


  <dataCommand name="Inventory_UpdateAdjustRequestStatus" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE [IPP3].[dbo].[St_Adjust] 
        SET [Status] = @RequestStatus
            ,[AuditTime] = @AuditDate 
            ,[AuditUserSysNo] = @AuditUserSysNo 
            ,[OutTime] = @OutStockDate 
            ,[OutUserSysNo] = @OutStockUserSysNo 
        WHERE 
            [SysNo] = @RequestSysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
      <param name="@RequestStatus" dbType="Int32" />
      <param name="@AuditDate" dbType="DateTime" />
      <param name="@AuditUserSysNo" dbType="Int32" />
      <param name="@OutStockDate" dbType="DateTime" />
      <param name="@OutStockUserSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetProductBelongVendorSysNo" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT DISTINCT pl.LastVendorSysNo FROM IPP3.dbo.Product_LastPOInfo pl WITH(NOLOCK) 
        INNER JOIN 
        (
	        SELECT plp.ProductSysNo,MAX(plp.LastPOSysNo) AS LastPOSysNo FROM IPP3.dbo.Product_LastPOInfo plp WITH(NOLOCK) 
	        GROUP BY plp.ProductSysNo
        )pp 
        ON pl.ProductSysNo = pp.ProductSysNo AND pl.LastPOSysNo = pp.LastPOSysNo
        WHERE pl.ProductSysNo=@ProductSysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>


  <dataCommand name="CreatePOConsignToAccLogForInventory" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
			DECLARE @SysNo int
			INSERT INTO [IPP3].[dbo].[POConsign_ToAccLog_Sequence](CreateTime)Values(getdate());
			SELECT @SysNo=SCOPE_IDENTITY()	
			
			DECLARE @VenderSysNo int
			SELECT 
				@VenderSysNo=LastVendorSysNo 
			FROM OverseaContentManagement.dbo.V_IM_Product_LastPOInfo WITH(NOLOCK)
			WHERE 
				ProductSysNo=@ProductSysNo 
			AND StockSysNo=@StockSysNo

			DECLARE @RetailPrice decimal(12,2)
			DECLARE @SettleType char(1)
			DECLARE @SettlePercentage decimal(5,2)
			SET @SettleType=''
			
			SELECT @RetailPrice=CurrentPrice
			FROM OverseaContentManagement.dbo.V_IM_Product_Price
			WHERE ProductSysNo=@ProductSysNo


			DECLARE @ManufacturerSysNo int
			DECLARE @C2SysNo int
			DECLARE @C3SysNo int

			--查找查询参数
			SELECT 
				@ManufacturerSysNo=p.ManufacturerSysNo
				,@C3SysNo=p.C3SysNo
				,@C2SysNo=c.C2SysNo
			FROM OverseaContentManagement.dbo.V_IM_Product p
			INNER JOIN OverseaContentManagement.dbo.V_IM_Category3 c ON p.C3SysNo=c.SysNo AND c.[Status]=0
			WHERE p.SysNo=@ProductSysNo

			--如果找不到对应的C3类别，就以C2类别查询
			SELECT top 1
				@SettleType=ISNULL(SettleType,'')
				,@SettlePercentage=SettlePercentage
			FROM IPP3.dbo.Vendor_Manufacturer
			WHERE VendorSysNo=@VenderSysNo
					AND ManufacturerSysNo=@ManufacturerSysNo
					AND C3SysNo=@C3SysNo
					AND [Status]=0
					AND CompanyCode=@CompanyCode
					AND StoreCompanyCode=@StoreCompanyCode
					AND LanguageCode='zh-CN'

            IF(@SettleType='')
			BEGIN
				SELECT top 1 
				@SettleType=ISNULL(SettleType,'')
				,@SettlePercentage=SettlePercentage
				FROM IPP3.dbo.Vendor_Manufacturer
				WHERE VendorSysNo=@VenderSysNo
					AND ManufacturerSysNo=@ManufacturerSysNo
					AND C2SysNo=@C2SysNo
					AND [Status]=0
					AND CompanyCode=@CompanyCode
					AND StoreCompanyCode=@StoreCompanyCode
					AND LanguageCode='zh-CN'
			END
			
			IF(@SettleType='')
			SET @SettleType='O'
			

			
			INSERT INTO [IPP3].[dbo].[POConsign_ToAccLog]
           ([SysNo]
		   ,[ProductSysNo]
           ,[VendorSysNo]
           ,[StockSysNo]
           ,[Quantity]
           ,[CreateCost]
           ,[CreateTime]
		   ,[Note]
           ,[ConsignToAccType]
           ,[Status]
           ,[CompanyCode]
		   ,[SettleType]
		   ,[SettlePercentage]
		   ,[RetailPrice]
		   ,[Point]
		   ,[OrderSysNo]
       ,[IsConsign]
		   )
     VALUES
           (@SysNo
		   ,@ProductSysNo
		   ,@VendorSysNoOut  --,ISNull(@VenderSysNo,0)
           ,@StockSysNo
           ,@Quantity
           ,@CreateCost
           ,@CreateTime
		   ,'Created by Inventory when Adjust OutStock!'
           ,2
           ,0
           ,@CompanyCode
		   ,@SettleType
		   ,@SettlePercentage
		   ,@RetailPrice
		   ,NULL
		   ,@OrderSysNo
       ,@IsConsign
		   )       
       SELECT @SysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@CreateCost" dbType="Decimal" />
      <param name="@CreateTime" dbType="DateTime" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
      <param name="@OrderSysNo" dbType="Int32"/>
      <param name="@IsConsign" dbType="Int32"/>
      <param name="@VendorSysNoOut" dbType="Int32"/>
      <param name="@StoreCompanyCode" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetBatchDetailsInfoEntityListByNumber" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
         Number
        ,[Type]    
        ,BatchNumber 
        ,ProductSysNo 
        ,StockSysNo
        ,Quantity
        ,ReturnQty 
        FROM OverseaInventoryManagement.dbo.St_Batch WITH(NOLOCK)
        WHERE Number=@Number;
        ]]>
    </commandText>
    <parameters>
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>


  <dataCommand name="Inventory_SendSSBToWMS" database="Write" commandType="Text">
    <commandText>
      <![CDATA[  
              Execute OverseaInventoryManagement.dbo.usp_SSB_SendSSBToWMS @Msg;
       ]]>
    </commandText>
    <parameters>
      <param name="@Msg" dbType="Xml" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_CheckISBatchNumberProduct" database="Write" commandType="Text">
    <commandText>
      <![CDATA[
         SELECT ISNULL(IsBatch,'N') AS IsBatch FROM IPP3.dbo.Product_EX WITH(NOLOCK) WHERE SysNo = @SysNo;
        ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
</dataOperations>