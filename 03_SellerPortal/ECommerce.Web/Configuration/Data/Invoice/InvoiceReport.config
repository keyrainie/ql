<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.ECommerce.com/DataOperation">

  <dataCommand name="FinancialReportSalesStatisticsReportQuery" database="Write" commandType="Text">
    <commandText>
      <![CDATA[				 
SELECT @TotalCount = COUNT(1) FROM (
	SELECT rpt.ProductSysNo
	FROM [ReportDB].[dbo].[Fin_Report_ProductSales] rpt WITH(NOLOCK)
	LEFT JOIN [OverseaContentManagement].[dbo].[Brand] brand WITH(NOLOCK) ON brand.SysNo = rpt.ProductSysNo
	 #StrWhere# GROUP BY rpt.ProductSysNo, rpt.ProductID, rpt.PayTypeSysNo,rpt.VendorSysNo ) T
	  

IF OBJECT_ID('tempdb.dbo.#TEMP') IS NOT NULL
	DROP TABLE dbo.#TEMP

CREATE TABLE #TEMP (
	SysNo int IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	--初始可以筛选字段
	ProductSysNo int,
	PayTypeSysNo int,
	BeginDate datetime,
	EndDate datetime,		
  VendorSysNo int,
  WarehouseNumber nvarchar(10),
	--需要计算的字段
	Quantity int, 
	ProductCost decimal(19, 6),
	ProductPriceAmount decimal(19, 6),
	PromotionDiscountAmount decimal(19, 6),
	ProductSaleAmount decimal(19, 6),
	ProductGrossMargin decimal(19, 6),
	
	RowNumber int,
	PRIMARY KEY (SysNo)
)

;WITH T AS (
	  SELECT rpt.ProductSysNo, rpt.PayTypeSysNo, rpt.VendorSysNo, rpt.WarehouseNumber,MIN(rpt.OrderDate) AS BeginDate, MAX(rpt.OrderDate) AS EndDate, ROW_NUMBER() OVER(ORDER BY rpt.ProductID DESC) AS RowNumber
	  FROM [ReportDB].[dbo].[Fin_Report_ProductSales] rpt WITH(NOLOCK)
	  LEFT JOIN [OverseaContentManagement].[dbo].[Brand] brand WITH(NOLOCK) 
    ON brand.SysNo = rpt.BrandSysNo
	  #StrWhere#
	  GROUP BY rpt.ProductSysNo, rpt.ProductID, rpt.PayTypeSysNo,rpt.VendorSysNo, rpt.WarehouseNumber
)
INSERT #TEMP (
	ProductSysNo,
	PayTypeSysNo,
	BeginDate,
	EndDate,
  VendorSysNo,
  WarehouseNumber,
	RowNumber
)
SELECT 
	ProductSysNo,
	PayTypeSysNo,
	BeginDate,
	EndDate,
  VendorSysNo,
  WarehouseNumber,
	RowNumber
FROM T

DECLARE @MinOrderDate DATETIME, @MaxOrderDate DATETIME
SELECT TOP 1 @MinOrderDate = MIN(BeginDate), @MaxOrderDate = MAX(EndDate) FROM #TEMP WITHN(NOLOCK)

DECLARE @rowcount INT	
DECLARE @currentRow INT

SELECT @rowcount = 0, @currentRow = 1

SELECT @rowcount = COUNT(1) FROM #TEMP WITH(NOLOCK)

WHILE @currentRow <= @rowcount
BEGIN
	DECLARE 
		@ProductSysNo				int,
		@PayTypeSysNo				int,
		@Quantity					int,
		@ProductCost				decimal(19, 6),		--销售成本
		@ProductPriceAmount			decimal(19, 6),		--销售金额
		@PromotionDiscountAmount	decimal(19, 6),		--优惠金额
		@ProductSaleAmount			decimal(19, 6),		--实际销售金额
		@ProductGrossMargin			decimal(19, 6)		--商品毛利
		
	SELECT TOP 1 @ProductSysNo = ProductSysNo, @PayTypeSysNo = PayTypeSysNo FROM #TEMP WITH(NOLOCK) WHERE SysNo = @currentRow

	SELECT TOP 1 
		@Quantity					= SUM(ISNULL(ProductQuantity, 0)),
		@ProductCost				= SUM(ISNULL(ProductAvgCost, 0) * ISNULL(ProductQuantity, 0)),
		@ProductPriceAmount			= SUM(ISNULL(ProductPrice, 0) * ISNULL(ProductQuantity, 0)),
		@PromotionDiscountAmount	= SUM(ISNULL(PromotionDiscountPrice, 0) * ISNULL(ProductQuantity, 0)),
		@ProductSaleAmount			= SUM(ISNULL(ProductPrice, 0) * ISNULL(ProductQuantity, 0) + ISNULL(PromotionDiscountPrice, 0) * ISNULL(ProductQuantity, 0)),
		@ProductGrossMargin			= SUM(ISNULL(ProductPrice, 0) * ISNULL(ProductQuantity, 0) + ISNULL(PromotionDiscountPrice, 0) * ISNULL(ProductQuantity, 0) - ISNULL(ProductAvgCost, 0) * ISNULL(ProductQuantity, 0))
	FROM ReportDB.dbo.Fin_Report_ProductSales WITH(NOLOCK) 
	WHERE ProductSysNo = @ProductSysNo AND PayTypeSysNo = @PayTypeSysNo AND OrderDate BETWEEN @MinOrderDate AND @MaxOrderDate
	
	UPDATE #TEMP
	SET
		Quantity					= @Quantity,
		ProductCost					= @ProductCost,
		ProductPriceAmount			= @ProductPriceAmount,
		PromotionDiscountAmount		= @PromotionDiscountAmount,
		ProductSaleAmount			= @ProductSaleAmount,
		ProductGrossMargin			= @ProductGrossMargin
	WHERE SysNo = @currentRow

	SET @currentRow = @currentRow + 1
END

;WITH A AS (
	SELECT 
		 A.ProductSysNo
		,A.BeginDate
		,A.EndDate		
		,A.Quantity
		,A.ProductCost
		,A.ProductPriceAmount
		,A.PromotionDiscountAmount
		,A.ProductSaleAmount
		,A.ProductGrossMargin
    ,A.VendorSysNo
    ,A.WarehouseNumber
    ,vendor.VendorName
    ,stock.StockName
		,B.ProductID
		,B.ProductName
		,c1.C1Name
		,c2.C2Name
		,c3.C3Name
		,B.BrandSysNo
		,brand.BrandName_Ch AS BrandName
		,brand.BrandName_En
		,B.PayTypeSysNo
		,pay.PayTypeName
		,B.BMCode
		,B.ProductProperty1
		,B.ProductProperty2
    ,PC.ProductGroupSysno
		,ROW_NUMBER() OVER(ORDER BY #SortColumnName#) AS RowNumber
	FROM #TEMP A WITH(NOLOCK)
	LEFT JOIN (
			SELECT * 
			FROM
			(
				SELECT *, ROW_NUMBER() OVER(PARTITION BY ProductSysNo, PayTypeSysNo ORDER BY SysNo) as r
				FROM ReportDB.dbo.Fin_Report_ProductSales WITH(NOLOCK)
			) AS t
			WHERE r = 1
		) B ON B.ProductSysNo = A.ProductSysNo AND B.PayTypeSysNo = A.PayTypeSysNo
	LEFT JOIN IPP3.dbo.Category1 c1 WITH(NOLOCK) ON c1.SysNo = B.C1SysNo
	LEFT JOIN IPP3.dbo.Category2 c2 WITH(NOLOCK) ON c2.SysNo = B.C2SysNo
	LEFT JOIN IPP3.dbo.Category3 c3 WITH(NOLOCK) ON c3.SysNo = B.C3SysNo
	LEFT JOIN OverseaContentManagement.dbo.Brand brand WITH(NOLOCK) ON brand.SysNo = B.BrandSysNo
	LEFT JOIN IPP3.dbo.PayType pay WITH(NOLOCK) ON pay.SysNo = B.PayTypeSysNo
  LEFT JOIN IPP3.dbo.Vendor vendor WITH(NOLOCK) ON vendor.SysNo = A.VendorSysNo
  LEFT JOIN IPP3.dbo.Stock stock WITH(NOLOCK) ON stock.SysNo = A.WarehouseNumber
  LEFT JOIN [IPP3].[dbo].[Product] AS P WITH(NOLOCK)
    ON B.[ProductSysNo]=P.[SysNo]
    LEFT JOIN [OverseaContentManagement].[dbo].[ProductCommonInfo] AS PC WITH(NOLOCK)
    ON P.ProductCommonInfoSysno=PC.SysNo
)
SELECT * FROM A
WHERE A.RowNumber > @StartNumber AND A.RowNumber <= @EndNumber
ORDER BY A.RowNumber

;WITH A AS (
	SELECT ProductCost,ProductPriceAmount,PromotionDiscountAmount,ProductSaleAmount,ProductGrossMargin FROM #TEMP
)
-- statistics for current page rows.
SELECT 
	 SUM(ISNULL(ProductCost, 0))				AS ProductCost
	,SUM(ISNULL(ProductPriceAmount, 0))			AS ProductPriceAmount
	,SUM(ISNULL(PromotionDiscountAmount, 0))	AS PromotionDiscountAmount
	,SUM(ISNULL(ProductSaleAmount, 0))			AS ProductSaleAmount
	,SUM(ISNULL(ProductGrossMargin, 0))			AS ProductGrossMargin
FROM #TEMP WITH(NOLOCK)
WHERE RowNumber > @StartNumber AND RowNumber <= @EndNumber
-- statistics for all rows.
UNION ALL
SELECT 
	 SUM(ISNULL(ProductCost, 0))				AS ProductCost
	,SUM(ISNULL(ProductPriceAmount, 0))			AS ProductPriceAmount
	,SUM(ISNULL(PromotionDiscountAmount, 0))	AS PromotionDiscountAmount
	,SUM(ISNULL(ProductSaleAmount, 0))			AS ProductSaleAmount
	,SUM(ISNULL(ProductGrossMargin, 0))			AS ProductGrossMargin
FROM #TEMP WITH(NOLOCK)

DROP TABLE #TEMP
			]]>
    </commandText>
  </dataCommand>

</dataOperations>