<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <dataCommand name="CreateCategoryRequest" database="IMService"  commandType="Text">
    <commandText>
      <![CDATA[
		INSERT INTO IPP3.dbo.Category_Request
		(
			CategoryType,
			CategorySysNo,
			ParentCategorySysNo,
			OperationType,
			CategoryName,
			CategoryStatus,
			Reasons,
			CreateUserSysNo,
			CreateTime,
			AuditUserSysNo,
			Status,
      C3Code,
      CompanyCode,
      LanguageCode
		)
		VALUES
		(
			@CategoryType,
			@CategorySysNo,
			@ParentCategorySysNo,
			@OperationType,
			@CategoryName,
			@CategoryStatus,
			@Reasons,
			@CreateUserSysNo,
			GetDate(),
			@AuditUserSysNo,
			@Status,
      @C3Code,
      @CompanyCode,
      @LanguageCode
		)
	
		]]>
    </commandText>
    <parameters>
      <param name="@CategoryType" dbType="Int32"/>
      <param name="@CategorySysNo" dbType="Int32"/>
      <param name="@ParentCategorySysNo" dbType="Int32"/>
      <param name="@OperationType" dbType="Int32"/>
      <param name="@CategoryName" dbType="String" size="50"/>
      <param name="@CategoryStatus" dbType="Int32"/>
      <param name="@Reasons" dbType="String" size="200"/>
      <param name="@CreateUserSysNo" dbType="Int32"/>
      <param name="@AuditUserSysNo" dbType="Int32"/>
      <param name="@Status" dbType="Int32"/>
      <param name="@C3Code" dbType="AnsiStringFixedLength" size="10"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" size="50" />
      <param name="@LanguageCode" dbType="AnsiStringFixedLength" size="50" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateCategoryRequest" database="IMService"  commandType="Text">
    <commandText>
      <![CDATA[
		UPDATE IPP3.dbo.Category_Request
		SET 
			CategoryType=@CategoryType,
			CategorySysNo=@CategorySysNo,
			ParentCategorySysNo=@ParentCategorySysNo,
			OperationType=@OperationType,
			CategoryName=@CategoryName,
			CategoryStatus=@CategoryStatus,
			Reasons=@Reasons,
      AuditUserSysNo=@AuditUserSysNo,
			AuditTime=GETDATE(),
			Status=@Status,
      C3Code=@C3Code
		WHERE SysNo=@SysNo 
		]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32"/>
      <param name="@CategoryType" dbType="Int32"/>
      <param name="@CategorySysNo" dbType="Int32"/>
      <param name="@ParentCategorySysNo" dbType="Int32"/>
      <param name="@OperationType" dbType="Int32"/>
      <param name="@CategoryName" dbType="String" size="50"/>
      <param name="@CategoryStatus" dbType="Int32"/>
      <param name="@Reasons" dbType="String" size="200"/>
      <param name="@AuditUserSysNo" dbType="Int32"/>
      <param name="@Status" dbType="Int32"/>
      <param name="@C3Code" dbType="AnsiStringFixedLength" size="10"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetCategoryRequest1List" database="IMService"  commandType="Text">
    <commandText>
      <![CDATA[
      DECLARE @WhereSql NVARCHAR(2000) 
      DECLARE @SelectSql NVARCHAR(MAX)
      DECLARE @CountSql NVARCHAR(MAX)

      SET @WhereSql = N' WHERE  A.Status = 0 AND A.CategoryType = 1 '
      IF @CreateUserSysNo > 0
	      SET @WhereSql = @WhereSql + N' AND A.CreateUserSysNo = @CreateUserSysNo'
	if @SortField is null
	set @SortField='A.SysNo desc'


      SET @SelectSql = N'
      SELECT TOP (@PageSize) 
	      TT.SysNo,
	      TT.CategoryType,
	      TT.CategorySysNo,
	      TT.ParentCategorySysNo,
	      TT.OperationType,
	      TT.CategoryName,
	      TT.CategoryStatus,
	      TT.Reasons,
	      TT.CreateUserSysNo,
	      TT.CreateTime,
	      TT.AuditUserSysNo,
	      TT.AuditTime,
	      TT.Status,
	      TT.Category1SysNo,
	      TT.Category1Name,
	      TT.OriginalCategory1SysNo,
	      TT.OriginalCategory1Name,
	      TT.OriginalStatus
      FROM (SELECT ROW_NUMBER() OVER (ORDER BY ' + @SortField  + N') AS RowNumber,
		      A.SysNo,
		      A.CategoryType,
		      A.CategorySysNo,
		      A.ParentCategorySysNo,
		      A.OperationType,
		      A.CategoryName,
		      A.CategoryStatus,
		      A.Reasons,
		      A.CreateUserSysNo,
		      A.CreateTime,
		      A.AuditUserSysNo,
		      A.AuditTime,
		      A.Status,
		      case when A.OperationType = 1 then 0
		      else B.SysNo end AS Category1SysNo,
		      A.CategoryName AS Category1Name,
		      case when A.OperationType = 1 then 0
		      else B.SysNo end AS OriginalCategory1SysNo,
		      case when A.OperationType = 1 then ''''
		      else B.C1Name end AS OriginalCategory1Name,
		      case when A.OperationType = 1 then ''''
		      else B.Status end AS OriginalStatus
	      FROM IPP3.dbo.Category_Request A WITH (NOLOCK)
          LEFT JOIN IPP3.dbo.Category1 B WITH(NOLOCK) ON A.CategorySysNo = B.SysNo  ' + @WhereSql + N') TT
	      WHERE TT.RowNumber > @PageSize * @PageCurrent'
		
      SET @CountSql =N' SELECT @TotalCount = COUNT(1) FROM IPP3.dbo.Category_Request A WITH (NOLOCK)
          LEFT JOIN IPP3.dbo.Category1 B WITH(NOLOCK) ON A.CategorySysNo = B.SysNo  '+ @WhereSql

      EXEC SP_EXECUTESQL @CountSql,
        N'@TotalCount INT OUTPUT,
            @CreateUserSysNo INT',
		    	 @TotalCount OUTPUT,
            @CreateUserSysNo

      EXEC SP_EXECUTESQL @SelectSql,
        N'@PageSize INT,
	        @PageCurrent INT,
          @SortField VARCHAR(50),
          @TotalCount INT OUTPUT,
	        @CreateUserSysNo INT',
	        @PageSize,
	        @PageCurrent,
            @SortField,
			 @TotalCount OUTPUT,
	        @CreateUserSysNo
			]]>
    </commandText>
    <parameters>
      <param name="@PageCurrent" dbType="Int32"/>
      <param name="@PageSize" dbType="Int32"/>
      <param name="@CreateUserSysNo" dbType="Int32"/>
      <param name="@TotalCount" dbType="Int32" size="10" direction="Output"/>
      <param name="@SortField" dbType="AnsiString" size="50"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetCategoryRequest2List" database="IMService"  commandType="Text">
    <commandText>
      <![CDATA[
       DECLARE @WhereSql NVARCHAR(2000) 
      DECLARE @SelectSql NVARCHAR(MAX)
      DECLARE @CountSql NVARCHAR(MAX)
      SET @WhereSql = N' WHERE A.Status = 0 AND A.CategoryType = 2 '
      IF @CreateUserSysNo > 0
	      SET @WhereSql = @WhereSql + N' AND A.CreateUserSysNo = @CreateUserSysNo'
		
	if @SortField is null
	begin
		set @SortField='A.SysNo desc'
	end		
      SET @SelectSql = N'
      SELECT TOP (@PageSize) 
	      TT.SysNo,
	      TT.CategoryType,
	      TT.CategorySysNo,
	      TT.ParentCategorySysNo,
	      TT.OperationType,
	      TT.CategoryName,
	      TT.CategoryStatus,
	      TT.Reasons,
	      TT.CreateUserSysNo,
	      TT.CreateTime,
	      TT.AuditUserSysNo,
	      TT.AuditTime,
	      TT.Status,
	      TT.Category2SysNo,
	      TT.Category2Name,
	      TT.Category1SysNo,
	      TT.Category1Name,
	      TT.OriginalCategory2SysNo,
	      TT.OriginalCategory2Name,
	      TT.OriginalStatus,
	      TT.OriginalCategory1SysNo,
	      TT.OriginalCategory1Name
      FROM (SELECT ROW_NUMBER() OVER (ORDER BY ' + @SortField +N') AS RowNumber,
		      A.SysNo,
		      A.CategoryType,
		      A.CategorySysNo,
		      A.ParentCategorySysNo,
		      A.OperationType,
		      A.CategoryName,
		      A.CategoryStatus,
		      A.Reasons,
		      A.CreateUserSysNo,
		      A.CreateTime,
		      A.AuditUserSysNo,
		      A.AuditTime,
		      A.Status,
		      case when A.OperationType = 1 then 0
		      else B.SysNo end AS Category2SysNo,
		      A.CategoryName AS Category2Name,
		      C.SysNo AS Category1SysNo,
		      C.C1Name AS Category1Name,
		      case when A.OperationType = 1 then 0
		      else B.SysNo end AS OriginalCategory2SysNo,
		      case when A.OperationType = 1 then ''''
		      else B.C2Name end AS OriginalCategory2Name,
		      case when A.OperationType = 1 then ''''
		      else B.Status end AS OriginalStatus,
		      case when A.OperationType = 1 then 0
		      else D.SysNo end AS OriginalCategory1SysNo,
		      case when A.OperationType = 1 then ''''
		      else D.C1Name end AS OriginalCategory1Name
	      FROM IPP3.dbo.Category_Request A WITH (NOLOCK)
	      LEFT JOIN IPP3.dbo.Category2 B WITH(NOLOCK) ON A.CategorySysNo = B.SysNo  
	      LEFT JOIN IPP3.dbo.Category1 C WITH(NOLOCK) ON A.ParentCategorySysNo = C.SysNo 
	      LEFT JOIN IPP3.dbo.Category1 D WITH(NOLOCK) ON B.C1SysNo = D.SysNo  ' + @WhereSql + N') TT
	      WHERE TT.RowNumber > @PageSize * @PageCurrent'

      SET @CountSql =N' SELECT @TotalCount = COUNT(1) FROM IPP3.dbo.Category_Request A WITH (NOLOCK)
	      LEFT JOIN IPP3.dbo.Category2 B WITH(NOLOCK) ON A.CategorySysNo = B.SysNo
	      LEFT JOIN IPP3.dbo.Category1 C WITH(NOLOCK) ON A.ParentCategorySysNo = C.SysNo 
	      LEFT JOIN IPP3.dbo.Category1 D WITH(NOLOCK) ON B.C1SysNo = D.SysNo  '+ @WhereSql

      EXEC SP_EXECUTESQL @CountSql,
        N'@TotalCount INT OUTPUT,
       @CreateUserSysNo INT',
          @TotalCount OUTPUT,
      @CreateUserSysNo

      EXEC SP_EXECUTESQL @SelectSql,
        N'@PageSize INT,
	        @PageCurrent INT,
       @SortField VARCHAR(50),
          @TotalCount INT OUTPUT,
	        @CreateUserSysNo INT',
	        @PageSize,
	        @PageCurrent,
       @SortField,
	      @TotalCount OUTPUT,
	        @CreateUserSysNo
			]]>
    </commandText>
    <parameters>
      <param name="@PageCurrent" dbType="Int32"/>
      <param name="@PageSize" dbType="Int32"/>
      <param name="@CreateUserSysNo" dbType="Int32"/>
      <param name="@TotalCount" dbType="Int32" size="10" direction="Output"/>
      <param name="@SortField" dbType="AnsiString" size="50"/>
  
    </parameters>
  </dataCommand>

  <dataCommand name="GetCategoryRequest3List" database="IMService"  commandType="Text">
    <commandText>
      <![CDATA[
    DECLARE @WhereSql NVARCHAR(2000) 
      DECLARE @SelectSql NVARCHAR(MAX)
      DECLARE @CountSql NVARCHAR(MAX)
      SET @WhereSql = N' WHERE  A.Status = 0 AND A.CategoryType = 3 '
      IF @CreateUserSysNo > 0
	      SET @WhereSql = @WhereSql + N' AND A.CreateUserSysNo = @CreateUserSysNo'

		if @SortField is null
		begin
			set @SortField='A.SysNo desc'
		end
      SET @SelectSql = N'
      SELECT TOP (@PageSize) 
	      TT.SysNo,
	      TT.CategoryType,
	      TT.CategorySysNo,
	      TT.ParentCategorySysNo,
	      TT.OperationType,
	      TT.CategoryName,
	      TT.CategoryStatus,
	      TT.Reasons,
	      TT.CreateUserSysNo,
	      TT.CreateTime,
	      TT.AuditUserSysNo,
	      TT.AuditTime,
	      TT.Status,			  
	      TT.Category3SysNo,
	      TT.Category3Name,
	      TT.Category2SysNo,
	      TT.Category2Name,
	      TT.Category1SysNo,
	      TT.Category1Name,
	      TT.OriginalCategory3SysNo,
	      TT.OriginalCategory3Name,
	      TT.OriginalStatus,
	      TT.OriginalCategory2SysNo,
	      TT.OriginalCategory2Name,
	      TT.OriginalCategory1SysNo,
	      TT.OriginalCategory1Name,
        TT.C3Code,
        TT.OriginalC3Code
      FROM (SELECT ROW_NUMBER() OVER (ORDER BY ' + @SortField+ N') AS RowNumber,
		      A.SysNo,
		      A.CategoryType,
		      A.CategorySysNo,
		      A.ParentCategorySysNo,
		      A.OperationType,
		      A.CategoryName,
		      A.CategoryStatus,
		      A.Reasons,
		      A.CreateUserSysNo,
		      A.CreateTime,
		      A.AuditUserSysNo,
		      A.AuditTime,
		      A.Status,			  
		      case when A.OperationType = 1 then 0
		      else A.CategorySysNo end AS Category3SysNo,
		      A.CategoryName AS Category3Name,
		      C.SysNo AS Category2SysNo,
		      C.C2Name AS Category2Name,
		      E.SysNo AS Category1SysNo,
		      E.C1Name AS Category1Name,
		      case when A.OperationType = 1 then 0
		      else B.SysNo end AS OriginalCategory3SysNo,
		      case when A.OperationType = 1 then ''''
		      else B.C3Name end AS OriginalCategory3Name,
		      case when A.OperationType = 1 then ''''
		      else B.Status end AS OriginalStatus,
		      case when A.OperationType = 1 then 0
		      else D.SysNo end AS OriginalCategory2SysNo,
		      case when A.OperationType = 1 then ''''
		      else D.C2Name end AS OriginalCategory2Name,
		      case when A.OperationType = 1 then 0
		      else F.SysNo end AS OriginalCategory1SysNo,
		      case when A.OperationType = 1 then ''''
		      else F.C1Name end AS OriginalCategory1Name,
          A.C3Code,
          B.C3Code as OriginalC3Code
	      FROM IPP3.dbo.Category_Request A WITH (NOLOCK)
	      LEFT JOIN IPP3.dbo.Category3 B WITH(NOLOCK) ON A.CategorySysNo = B.SysNo  
	      LEFT JOIN IPP3.dbo.Category2 C WITH(NOLOCK) ON A.ParentCategorySysNo = C.SysNo  
	      LEFT JOIN IPP3.dbo.Category2 D WITH(NOLOCK) ON B.C2SysNo = D.SysNo 
	      LEFT JOIN IPP3.dbo.Category1 E WITH(NOLOCK) ON C.C1SysNo = E.SysNo  
	      LEFT JOIN IPP3.dbo.Category1 F WITH(NOLOCK) ON D.C1SysNo = F.SysNo  ' + @WhereSql + N') TT
	      WHERE TT.RowNumber > @PageSize * @PageCurrent'

      SET @CountSql =N' SELECT @TotalCount = COUNT(1) FROM IPP3.dbo.Category_Request A WITH (NOLOCK)
	      LEFT JOIN IPP3.dbo.Category3 B WITH(NOLOCK) ON A.CategorySysNo = B.SysNo 
	      LEFT JOIN IPP3.dbo.Category2 C WITH(NOLOCK) ON A.ParentCategorySysNo = C.SysNo 
	      LEFT JOIN IPP3.dbo.Category2 D WITH(NOLOCK) ON B.C2SysNo = D.SysNo 
	      LEFT JOIN IPP3.dbo.Category1 E WITH(NOLOCK) ON C.C1SysNo = E.SysNo 
	      LEFT JOIN IPP3.dbo.Category1 F WITH(NOLOCK) ON D.C1SysNo = F.SysNo  '+ @WhereSql

      EXEC SP_EXECUTESQL @CountSql,
        N'@TotalCount INT OUTPUT,
          @CreateUserSysNo INT',
          @TotalCount OUTPUT,
         @CreateUserSysNo

      EXEC SP_EXECUTESQL @SelectSql,
        N'@PageSize INT,
	        @PageCurrent INT,
			@SortField VARCHAR(50),
       @TotalCount INT OUTPUT,
	        @CreateUserSysNo INT',
	        @PageSize,
	        @PageCurrent,
			@SortField,
	       @TotalCount OUTPUT,
	        @CreateUserSysNo
			]]>
    </commandText>
    <parameters>
      <param name="@PageCurrent" dbType="Int32"/>
      <param name="@PageSize" dbType="Int32"/>
      <param name="@CreateUserSysNo" dbType="Int32"/>
      <param name="@TotalCount" dbType="Int32" size="10" direction="Output"/>
      <param name="@SortField" dbType="AnsiString" size="50"/>
    </parameters>
  </dataCommand>

  <dataCommand name="ActiveCategoryRequest" database="IMService"  commandType="Text">
    <commandText>
      <![CDATA[
		  UPDATE IPP3.dbo.Category_Request
		  SET
			  Status = @Status,
			  AuditUserSysNo = @AuditUserSysNo,
        CategorySysNo = @CategorySysNo,
			  AuditTime = GETDATE()
		  WHERE SysNo = @SysNo 
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32"/>
      <param name="@Status" dbType="Int32"/>
      <param name="@AuditUserSysNo" dbType="Int32"/>
      <param name="@CategorySysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>
  <dataCommand name="UpdateSyncForCategoryApprove" database="IMService"  commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE IPP3.dbo.Sys_Sync 
        SET  LastVersionTime=GETDATE()
        WHERE SyncType=@SyncType 
		]]>
    </commandText>
    <parameters>
      <param name="@SyncType" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="IsExistsCategoryRequest" database="IMService"  commandType="Text">
    <commandText>
      <![CDATA[
      set @flag=0
      if not exists(select 1 from IPP3.dbo.Category_Request where isnull(ParentCategorySysNo,0)=@ParentCategorySysNo and CategoryName=@CategoryName and Status=0)
      begin
      set @flag=1
      end
		]]>
    </commandText>
    <parameters>
      <param name="@ParentCategorySysNo" dbType="Int32"/>
      <param name="@CategoryName" dbType="AnsiString" size="50"/>
      <param name="@flag" dbType="Int32" size="10" direction="Output" />
    </parameters>
  </dataCommand>
  <dataCommand name="CheckCategoryUser" database="IMService"  commandType="Text">
    <commandText>
      <![CDATA[
     set  @flag=0
    if Exists(select * from IPP3.dbo.Category_Request where  CreateUserSysNo=@AuditUserSysNo and SysNo=@SysNo)
    begin
    set @flag=-1
    end
		]]>
    </commandText>
    <parameters>
      <param name="@AuditUserSysNo" dbType="Int32"/>
      <param name="@SysNo" dbType="Int32"/>
      <param name="@flag" dbType="Int32" size="10" direction="Output" />
    </parameters>
  </dataCommand>
</dataOperations>
