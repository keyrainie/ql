<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">

  <dataCommand name="QueryPropertyList" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[
SET NOCOUNT ON;
DECLARE @WhereSql NVARCHAR(2000)
DECLARE @CountSql NVARCHAR(MAX)
DECLARE @SelectSql NVARCHAR(MAX)	

IF((@SortField IS NULL) OR (LEN(@SortField) = 0))
  SET @SortField = N'A.SysNo DESC'
SET @WhereSql = N' A.CompanyCode=@CompanyCode '
    
IF(LEN(@PropertyDescription)>0)
SET @WhereSql = @WhereSql+N' AND A.PropertyDescription LIKE @PropertyDescription '
IF(@IsActive <> -999)
SET @WhereSql = @WhereSql+N' AND A.IsActive = @IsActive '
      
IF @PageSize > 0 
BEGIN
	SET @SelectSql = N'
            SELECT TOP (@PageSize) 
					    TT.SysNo
					   ,TT.PropertyDescription AS PropertyName
             ,TT.IsActive AS Status
					   ,TT.LastEditUserSysNo
					   ,TT.UserName AS LastEditUser
					   ,TT.LastEditTime
				    FROM (	
					    SELECT ROW_NUMBER() OVER (ORDER BY ' + @SortField + N' '+ N') AS RowNumber
						    ,A.SysNo
							  ,A.PropertyDescription
							  ,A.IsActive
							  ,A.LastEditUserSysNo
							  ,B.DisplayName as UserName
							  ,A.LastEditTime
					    FROM PMDB.dbo.PIM_Property A WITH(NOLOCK) 
							LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo B WITH(NOLOCK)
								ON A.LastEditUserSysNo = B.UserSysNo 
                AND B.CompanyCode = A.CompanyCode
              WHERE ' + @WhereSql + N'		
					    ) TT
				    WHERE TT.RowNumber > @PageSize * @PageCurrent '

END
ELSE
BEGIN
	SET @SelectSql = N'
            SELECT  
					    TT.SysNo
					   ,TT.PropertyDescription AS PropertyName
             ,TT.IsActive AS Status
					   ,TT.LastEditUserSysNo
					   ,TT.UserName AS LastEditUser
					   ,TT.LastEditTime
				    FROM (	
					    SELECT ROW_NUMBER() OVER (ORDER BY ' + @SortField + N' '+ N') AS RowNumber
						    ,A.SysNo
							  ,A.PropertyDescription
							  ,A.IsActive
							  ,A.LastEditUserSysNo
							  ,B.DisplayName as UserName
							  ,A.LastEditTime
					    FROM PMDB.dbo.PIM_Property A WITH(NOLOCK) 
							LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo B WITH(NOLOCK)
								ON A.LastEditUserSysNo = B.UserSysNo 
                AND B.CompanyCode = A.CompanyCode
              WHERE ' + @WhereSql + N'	
					    ) TT
				    WHERE 1=1 '
END

EXEC SP_EXECUTESQL @SelectSql,
	               N'@PropertyDescription NVARCHAR(50),
                   @IsActive INT,
                   @CompanyCode CHAR(50),
	                 @SortField CHAR(50),
	                 @PageSize INT,
	                 @PageCurrent INT',
    
	                 @PropertyDescription,
                   @IsActive,
                   @CompanyCode,
	                 @SortField,
	                 @PageSize,
	                 @PageCurrent 
                   
SET @CountSql = N'SELECT @TotalCount = COUNT(1) 
	                FROM PMDB.dbo.PIM_Property A WITH(NOLOCK) 
                  LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo B WITH(NOLOCK)
			              ON A.LastEditUserSysNo = B.UserSysNo 
                    AND B.CompanyCode = A.CompanyCode
                  WHERE '+@WhereSql

EXEC SP_EXECUTESQL @CountSql,
	N'@PropertyDescription NVARCHAR(50),
    @IsActive INT,
    @CompanyCode CHAR(50),
	  @TotalCount			INT OUTPUT',
	  @PropertyDescription,
    @IsActive,
    @CompanyCode,
	  @TotalCount OUTPUT                   
			
	  ]]>
    </commandText>
    <parameters>
      
      <param name="@PropertyDescription" dbType="String" size="50" />
      <param name="@IsActive" dbType="Int32" />
      
      <param name="@SortField" dbType="AnsiString" size="50"/>
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageCurrent" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" size="50"/>
      <param name="@TotalCount" dbType="Int32" size="10" direction="Output"/>
      
    </parameters>
  </dataCommand>
  
  <dataCommand name="GetPropertyValueByProductSysNo" database="IMService"  commandType="Text">
    <commandText>
      <![CDATA[
     SELECT 
           p.SysNo
          ,k.SysNo AS [PropertyInfo.SysNo] 
          ,k.PropertyDescription AS [PropertyInfo.PropertyName.Content]
          ,v.ValueDescription AS [ValueDescription.Content] 
          ,v.Priority
          ,v.SysNo
      FROM PMDB.dbo.PIM_ProductProperty p WITH(NOLOCK) 
      INNER JOIN PMDB.dbo.PIM_PropertyValue v WITH(NOLOCK) 
          ON v.SysNo=p.ValueSysNo 
      INNER JOIN PMDB.dbo.PIM_Property k WITH(NOLOCK) 
          ON k.SysNo=p.PropertySysNo 
      WHERE p.ProductSysNo=@ProductSysNo
		]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="AddProperty" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[

			INSERT INTO PMDB.dbo.PIM_Property
			(
			[PropertyDescription],
			[LastEditUserSysNo],
			[IsActive],
			[LastEditTime],
      [CompanyCode]
			)
			VALUES
			(
			@PropertyDescription,
			@LastEditUserSysNo,
			@IsActive,
			GETDATE(),
      @CompanyCode
			)
      SET @SysNo = SCOPE_IDENTITY()

			]]>
    </commandText>
    <parameters>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" size="50"/>
      <param name="@PropertyDescription" dbType="String" size="50" />
      <param name="@LastEditUserSysNo" dbType="Int32" />
      <param name="@IsActive" dbType="Int32" />
      <param name="@SysNo" dbType="Int32" size="10" direction="Output"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetPropertyByPropertyName" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
      SELECT 
        [SysNo]
        ,[PropertyDescription] AS [PropertyName.Content]
        ,[IsActive]
        ,[LastEditUserSysNo]
        ,[LastEditTime]
      FROM PMDB.dbo.PIM_Property WITH(NOLOCK)
      WHERE PropertyDescription = @PropertyName
		]]>
    </commandText>
    <parameters>
      <param name="@PropertyName" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetPropertyListByPropertyName" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
      SELECT 
        [SysNo]
        ,[PropertyDescription] AS [PropertyName.Content]
        ,[IsActive]
        ,[LastEditUserSysNo]
        ,[LastEditTime]
      FROM PMDB.dbo.PIM_Property WITH(NOLOCK)
      WHERE PropertyDescription LIKE '%'+@PropertyName+'%'
		]]>
    </commandText>
    <parameters>
      <param name="@PropertyName" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetPropertyInfoByEntity" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
      SELECT 
        [SysNo]
        ,[PropertyDescription] AS [PropertyName.Content]
        ,[IsActive]
        ,[LastEditUserSysNo]
        ,[LastEditTime]
      FROM PMDB.dbo.PIM_Property WITH(NOLOCK)
      WHERE SysNo != @PropertySysNo
        AND PropertyDescription = @PropertyName
		]]>
    </commandText>
    <parameters>
      <param name="@PropertySysNo" dbType="Int32" />
      <param name="@PropertyName" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetPropertyBySysNo" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
      SELECT 
        [SysNo]
        ,[PropertyDescription] AS [PropertyName.Content]
        ,[IsActive] AS Status
        ,[LastEditUserSysNo]
        ,[LastEditTime]
      FROM PMDB.dbo.PIM_Property WITH(NOLOCK)
      WHERE SysNo = @SysNo
		]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetAllProperty" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
      SELECT 
        [SysNo]
        ,[PropertyDescription] AS [PropertyName.Content]
        ,[IsActive] AS Status
        ,[LastEditUserSysNo]
        ,[LastEditTime]
      FROM PMDB.dbo.PIM_Property P WITH(NOLOCK)
      WHERE P.IsActive = 1
		]]>
    </commandText>
    <parameters>
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateProperty" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[
			UPDATE PMDB.dbo.PIM_Property 
      SET PropertyDescription = @PropertyDescription
        ,IsActive = @IsActive
        ,LastEditUserSysNo = @LastEditUserSysNo
        ,LastEditTime = GETDATE()
      WHERE SysNo =  @SysNo 
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" size="10"/>
      <param name="@PropertyDescription" dbType="String" size="50" />
      <param name="@LastEditUserSysNo" dbType="Int32" />
      <param name="@IsActive" dbType="Int32" />      
    </parameters>
  </dataCommand>

  <dataCommand name="QueryPropertyValueListByPropertySysNo" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[
SET NOCOUNT ON;
DECLARE @WhereSql NVARCHAR(2000)
DECLARE @CountSql NVARCHAR(MAX)
DECLARE @SelectSql NVARCHAR(MAX)	

IF((@SortField IS NULL) OR (LEN(@SortField) = 0))
  SET @SortField = N'ppv.SysNo DESC'
SET @WhereSql = N' ppv.CompanyCode=@CompanyCode '
    
SET @WhereSql = @WhereSql+N' AND ppv.PropertySysNo = @PropertySysNo '
      
IF @PageSize > 0 
BEGIN
	SET @SelectSql = N'
            SELECT TOP (@PageSize) 
					     TT.SysNo
					    ,TT.PropertySysNo 
              ,TT.ValueDescription 
              ,TT.Priority
              ,TT.LastEditUserSysNo
              ,TT.LastEditTime
              ,TT.IsActive AS Status
              ,TT.DisplayName AS LastEditUser
				    FROM (	
					    SELECT ROW_NUMBER() OVER (ORDER BY ' + @SortField + N' '+ N') AS RowNumber
						    ,ppv.SysNo
                ,ppv.PropertySysNo
                ,ppv.ValueDescription
                ,ppv.Priority
                ,ppv.LastEditUserSysNo
                ,ppv.LastEditTime
                ,ppv.IsActive 
                ,vaui.DisplayName 
					    FROM PMDB.dbo.PIM_PropertyValue ppv WITH(NOLOCK)
              LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo vaui WITH(NOLOCK)
                ON ppv.LastEditUserSysNo = vaui.UserSysNo
              WHERE ' + @WhereSql + N'		
					    ) TT
				    WHERE TT.RowNumber > @PageSize * @PageCurrent '

END
ELSE
BEGIN
	SET @SelectSql = N'
            SELECT  
					     TT.SysNo
					    ,TT.PropertySysNo 
              ,TT.ValueDescription 
              ,TT.Priority
              ,TT.LastEditUserSysNo
              ,TT.LastEditTime
              ,TT.IsActive AS Status
              ,TT.DisplayName AS LastEditUser
				    FROM (	
					    SELECT ROW_NUMBER() OVER (ORDER BY ' + @SortField + N' '+ N') AS RowNumber
						    ,ppv.SysNo
                ,ppv.PropertySysNo
                ,ppv.ValueDescription
                ,ppv.Priority
                ,ppv.LastEditUserSysNo
                ,ppv.LastEditTime
                ,ppv.IsActive 
                ,vaui.DisplayName
					    FROM PMDB.dbo.PIM_PropertyValue ppv WITH(NOLOCK)
              INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo vaui WITH(NOLOCK)
                ON ppv.LastEditUserSysNo = vaui.UserSysNo
                AND ppv.CompanyCode = vaui.CompanyCode
              WHERE ' + @WhereSql + N'	
					    ) TT
				    WHERE 1=1 '
END

EXEC SP_EXECUTESQL @SelectSql,
	               N'@PropertySysNo INT,
                   @CompanyCode CHAR(50),
	                 @SortField CHAR(50),
	                 @PageSize INT,
	                 @PageCurrent INT',
    
                   @PropertySysNo,
                   @CompanyCode,
	                 @SortField,
	                 @PageSize,
	                 @PageCurrent 
                   
SET @CountSql = N'SELECT @TotalCount = COUNT(1) 
	                FROM PMDB.dbo.PIM_PropertyValue ppv WITH(NOLOCK)
                  INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo vaui WITH(NOLOCK)
                    ON ppv.LastEditUserSysNo = vaui.UserSysNo
                    AND ppv.CompanyCode = vaui.CompanyCode
                  WHERE '+@WhereSql

EXEC SP_EXECUTESQL @CountSql,
	N'@PropertySysNo INT,
    @CompanyCode CHAR(50),
	  @TotalCount			INT OUTPUT',
    @PropertySysNo,
    @CompanyCode,
	  @TotalCount OUTPUT                   
			
	  ]]>
    </commandText>
    <parameters>
      <param name="@PropertySysNo" dbType="Int32" />

      <param name="@SortField" dbType="AnsiString" size="50"/>
      <param name="@PageSize" dbType="Int32" />
      <param name="@PageCurrent" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" size="50"/>
      <param name="@TotalCount" dbType="Int32" size="10" direction="Output"/>
    </parameters>
  </dataCommand>

  <dataCommand name="CreatePropertyValue" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[

				INSERT INTO PMDB.dbo.PIM_PropertyValue
				(
				[PropertySysNo],
				[ValueDescription],
				[Priority],
				[LastEditUserSysNo],
				[LastEditTime],
        [CompanyCode],
        [IsActive]
				)
				VALUES
				(
				@PropertySysNo,
				@ValueDescription,
				@Priority,
				@LastEditUserSysNo,
				GETDATE(),
        @CompanyCode,
        @IsActive
				)
					
				SET @SysNo = SCOPE_IDENTITY()

			]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" size="10" direction="Output"/>
      <param name="@PropertySysNo" dbType="Int32" />
      <param name="@ValueDescription" dbType="String" size="102"/>
      <param name="@Priority" dbType="Int32" />
      <param name="@LastEditUserSysNo" dbType="Int32" />
      <param name="@IsActive" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" size="50"/>      
    </parameters>
  </dataCommand>

  <dataCommand name="UpdatePropertyValue" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[

				UPDATE PMDB.dbo.PIM_PropertyValue
				SET ValueDescription = @ValueDescription,
					Priority = @Priority,
					LastEditUserSysNo = @LastEditUserSysNo,
					LastEditTime = GETDATE(),
          IsActive = @IsActive
				WHERE SysNo = @SysNo 
          AND CompanyCode=@CompanyCode

			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
      <param name="@PropertySysNo" dbType="Int32" />
      <param name="@ValueDescription" dbType="String" size="102" />
      <param name="@Priority" dbType="Int32" />
      <param name="@LastEditUserSysNo" dbType="Int32" />      
      <param name="@IsActive" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" size="50"/>
    </parameters>
  </dataCommand>

  <dataCommand name="IsExistsPropertyValueByPropertySysNo" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[

				SELECT COUNT(1) 
        FROM PMDB.dbo.PIM_PropertyValue WITH(NOLOCK)
        WHERE SysNo <> @SysNo
          AND PropertySysNo = @PropertySysNo
          AND ValueDescription = @ValueDescription

			]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@PropertySysNo" dbType="Int32" />
      <param name="@ValueDescription" dbType="String" size="102" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetPropertyValueByPropertyValueSysNo" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[

				SELECT 
           [SysNo]
          ,[PropertySysNo] AS [PropertyInfo.SysNo]
          ,[ValueDescription] AS [ValueDescription.Content] 
          ,[Priority]
          ,[LastEditUserSysNo]
          ,[LastEditTime]
          ,[IsActive] AS ValueStatus
        FROM PMDB.dbo.PIM_PropertyValue WITH(NOLOCK)
        WHERE SysNo = @SysNo          

			]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>

  <dataCommand name="IsExistsProductPropertyValue" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[          
       SELECT COUNT(1) 
       FROM PMDB.dbo.PIM_PropertyValue ppv WITH(NOLOCK)
       INNER JOIN OverseaContentManagement.dbo.ProductGroupInfo_PropertySetting pgips WITH(NOLOCK)
         ON ppv.PropertySysNo = pgips.PropertySysno 
       WHERE ppv.SysNo = @SysNo 
	  ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetPropertyValueInfoListByPropertySysNo" database="IMService" commandType="Text">
    <commandText>
     <![CDATA[                  
        DECLARE @SelectSql NVARCHAR(MAX)
        DECLARE @WhereSql NVARCHAR(2000)
        
        set @WhereSql = N' ppv.IsActive=1 and pp.SysNo IN ('+@SysNoSTR+N') ORDER BY pp.SysNo  '
        set @SelectSql = N'
               SELECT 
                   ppv.ValueDescription AS [ValueDescription.Content] 
                  ,ppv.IsActive AS [ValueStatus]
                  ,ppv.Priority AS [Priority]
                  ,ppv.SysNo AS [SysNo]
                  ,pp.SysNo AS [PropertyInfo.SysNo]
                  ,pp.IsActive AS [PropertyInfo.Status]
                  ,pp.PropertyDescription AS [PropertyInfo.PropertyName.Content]
               FROM PMDB.dbo.PIM_Property pp WITH(NOLOCK) 
               INNER JOIN PMDB.dbo.PIM_PropertyValue ppv WITH(NOLOCK) 
                 ON ppv.PropertySysNo = pp.SysNo 
               WHERE ' + @WhereSql      
         
         EXEC SP_EXECUTESQL @SelectSql,
			        N'
              @SysNoSTR NVARCHAR(200)',
			        @SysNoSTR    
	  ]]>
    </commandText>
    <parameters>
      <param name="@SysNoSTR" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetPropertyGroupSysNoByPropertySysNo" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[                  
SELECT 
    CTP.GroupSysNo 
FROM PMDB.dbo.PIM_CategoryTemplate CT WITH(NOLOCK) 
INNER JOIN PMDB.dbo.PIM_CategoryTemplateProperty CTP WITH(NOLOCK) 
    ON CT.SysNo=CTP.CategoryTemplateSysNo 
INNER JOIN PMDB.dbo.PIM_Property PP WITH(NOLOCK) 
    ON CTP.PropertySysNo = PP.SysNo 
LEFT JOIN PMDB.dbo.PIM_PropertyGroup PG WITH(NOLOCK) 
    ON CTP.GroupSysno=PG.SysNo 
WHERE 
    CT.CategorySysNo=@CategorySysNo 
    AND CTP.PropertySysNo=@PropertySysNo
	  ]]>
    </commandText>
    <parameters>
      <param name="@CategorySysNo" dbType="Int32"/>
      <param name="@PropertySysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetPropertyGroupBySysNo" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[                  
Select SysNo,GroupDescription as [PropertyGroupName.Content]
FROM PMDB.dbo.PIM_PropertyGroup PG WITH(NOLOCK) 
WHERE PG.SysNo=@SysNo
	  ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="ItemCopy_CheckExist" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
      SELECT @TotalCount=Count(1)
      FROM PMDB.dbo.PIM_ProductDescription PIM WITH (NOLOCK)
      INNER JOIN ipp3.dbo.Product b WITH (NOLOCK)
        ON PIM.ProductSysNo = b.SysNo 
      WHERE b.SysNo = @ProductSysNo
	  ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32"/>
      <param name="@TotalCount" dbType="Int32" size="10" direction="Output"/>      
    </parameters>
  </dataCommand>

  <dataCommand name="ItemCopy_ProductExist" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
SELECT @TotalCount=Count(1)
FROM ipp3.dbo.product WITH (NOLOCK)
WHERE SysNo = @ProductSysNo
	  ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32"/>
      <param name="@TotalCount" dbType="Int32" size="10" direction="Output"/>
    </parameters>
  </dataCommand>

  <dataCommand name="ItemCopy_SameC3SysNo" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
      SELECT @TotalCount=Count(1)
      FROM IPP3.dbo.[Product] a WITH (NOLOCK) ,IPP3.dbo.[Product] b WITH (NOLOCK)
      WHERE a.SysNo=@ProductSysNo1 
        and b.SysNo=@ProductSysNo2 
        and a.C3SysNo=b.C3SysNo 
	  ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo1" dbType="Int32"/>
      <param name="@ProductSysNo2" dbType="Int32"/>      
      <param name="@TotalCount" dbType="Int32" size="10" direction="Output"/>
    </parameters>
  </dataCommand>


  
</dataOperations>
