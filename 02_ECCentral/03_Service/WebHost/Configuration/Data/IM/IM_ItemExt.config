<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <dataCommand name="GetItemExtList" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
	SET NOCOUNT ON;
    DECLARE @WhereSql NVARCHAR(2000)
    DECLARE @CountSql NVARCHAR(MAX)
    DECLARE @SelectSql NVARCHAR(MAX)
    DECLARE @FromSql  NVARCHAR(MAX)	  
    SET @WhereSql =' where 1=1 '
	    IF LEN(@ProductID) > 0
		    SET @WhereSql = @WhereSql + N'AND ProductID = @ProductID '
	    IF @ProductStatus in (-1,0,1,2)
		    SET @WhereSql = @WhereSql + N'AND Product.Status = @ProductStatus '
	    IF @ProductType in (0,1,2,4)
		    SET @WhereSql = @WhereSql + N'AND Product.ProductType = @ProductType '
	    IF LEN(@Manufacturer) > 0
		    SET @WhereSql = @WhereSql + N'AND Manufacturer.ManufacturerName LIKE RTRIM(@Manufacturer) '
	    IF @ProductPrice > 0.0
		    SET @WhereSql = @WhereSql + N'AND Product_Price.CurrentPrice >= @ProductPrice '
	    IF @IsPermitRefund in (0,1)
	        SET @WhereSql = @WhereSql + N'AND Product_Ex.IsPermitRefund = @IsPermitRefund '
	    IF @Category1 > 0
		    SET @WhereSql = @WhereSql + N'AND Category1.Sysno = @Category1 '
	    IF @Category2 > 0
		    SET @WhereSql = @WhereSql + N'AND Category2.Sysno = @Category2 '
	    IF @Category3 > 0
		    SET @WhereSql = @WhereSql + N'AND Category3.Sysno = @Category3 '

    SET @FromSql='from  IPP3.dbo.product with(nolock) inner join IPP3.dbo.category3 with(nolock) on product.c3sysno = category3.sysno 
		      inner join IPP3.dbo.category2 with(nolock) on category3.c2sysno = category2.sysno 
		      inner join IPP3.dbo.category1 with(nolock) on category2.c1sysno = category1.sysno 
		      left join IPP3.dbo.product_ex with(nolock) on product.sysno = product_ex.sysno 
		      left join IPP3.dbo.manufacturer with(nolock) on product.manufacturersysno = manufacturer.sysno 
		      left join IPP3.dbo.product_price with(nolock) on product.sysno = product_price.productsysno 
		      left join OverseaArchitecture.dbo.V_AR_UserInfo userInfo with(nolock) on product.pmusersysno = userInfo.UserSysno  ' + @WhereSql
    SET @CountSql =   N'SELECT @TotalCount = COUNT(1)' + @FromSql
    IF((@SortField IS NULL) OR (LEN(@SortField) = 0))
	    SET @SortField = N'product.Sysno desc'
    
    	
    IF @PageSize > 0 AND @PageCurrent >= 0
    BEGIN
	    SET @SelectSql = N'SELECT TOP (@PageSize) tt.sysno,tt.productid,tt.productname,tt.Currentprice,tt.c3name,tt.UserName,tt.ManufacturerName,    
    tt.Status,tt.IsPermitRefund FROM (SELECT ROW_NUMBER() OVER (ORDER BY ' + @SortField + N' ) AS RowNumber,
    product.sysno as sysno,product.productid as productid,product.ProductName as productname,
    convert(decimal(18,2),product_price.CurrentPrice) as Currentprice,category3.c3name as c3name,userInfo.DisplayName as UserName,manufacturer.ManufacturerName as ManufacturerName,
    product.Status as Status,product_ex.IsPermitRefund as IsPermitRefund '+@FromSql + N'		
					        ) TT
	     WHERE TT.RowNumber > @PageSize * @PageCurrent '
    END
    ELSE
    BEGIN
	    SET @SelectSql =  N'SELECT product.sysno as sysno,product.productid as productid,product.ProductName as productname,
    convert(decimal(18,2),product_price.CurrentPrice) as Currentprice,category3.c3name as c3name,userInfo.DisplayName as UserName,manufacturer.ManufacturerName as ManufacturerName,
    product.Status as Status,product_ex.IsPermitRefund as IsPermitRefund '+@FromSql + N'	 ORDER BY ' + @SortField 
    END
    EXEC SP_EXECUTESQL @CountSql,
        N'@ProductID NVARCHAR(20),
        @ProductStatus INT,
        @ProductType INT,
        @Category1 INT,
        @Category2 INT,
        @Category3 INT,
        @Manufacturer NVARCHAR(100),
        @ProductPrice Decimal,
        @IsPermitRefund int,
        @TotalCount INT OUTPUT',
        @ProductID,
        @ProductStatus,
        @ProductType,
        @Category1,
        @Category2,
        @Category3,
        @Manufacturer,
        @ProductPrice,
        @IsPermitRefund,
        @TotalCount OUTPUT
    EXEC SP_EXECUTESQL @SelectSql,
	    N'@ProductID NVARCHAR(20),
        @ProductStatus INT,
        @ProductType INT,
        @Category1 INT,
        @Category2 INT,
        @Category3 INT,
        @Manufacturer NVARCHAR(100),
        @ProductPrice Decimal,
        @IsPermitRefund int,
        @SortField VARCHAR(50),
        @PageSize INT,
        @PageCurrent INT',
        @ProductID,
        @ProductStatus,
        @ProductType,
        @Category1,
        @Category2,
        @Category3,
        @Manufacturer,
        @ProductPrice,
        @IsPermitRefund,
        @SortField,
        @PageSize,
        @PageCurrent
     
	  ]]>
    </commandText>
    <parameters>
      <param name="@ProductID" dbType="String" />
      <param name="@ProductStatus" dbType="Int32" />
      <param name="@ProductType" dbType="Int32" />
      <param name="@Manufacturer" dbType="String" size = "100" />
      <param name="@ProductPrice" dbType="Decimal" />
      <param name="@IsPermitRefund" dbType="Int32" />
      <param name="@Category1" dbType="Int32" />
      <param name="@Category2" dbType="Int32" />
      <param name="@Category3" dbType="Int32" />
      <!--分页信息参数-->
      <param name="@SortField" dbType="AnsiString" size="50"/>
      <param name="@PageSize" dbType="Int32"/>
      <param name="@PageCurrent" dbType="Int32"/>
      <param name="@TotalCount" dbType="Int32" size="10" direction="Output"/>
    </parameters>
  </dataCommand>
  <dataCommand name="UpdatePermitRefund" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
        UPDATE IPP3.dbo.Product_Ex SET 
              IsPermitRefund=@IsPermitRefund,EditUser=@EditUserSysNo,EditDate=GETDATE() WHERE SysNo=@SysNo
	  ]]>
    </commandText>
    <parameters>
      <param name="@IsPermitRefund" dbType="Int32" />
      <param name="@SysNo" dbType="Int32" />
      <param name="@EditUserSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>


  <dataCommand name="UpdateProductExKeyKeywords" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
        UPDATE IPP3.dbo.Product_Ex 
        SET Keywords=@Keywords
            ,Keywords0=@Keywords0
            ,EditUser=@EditUserSysNo
            ,EditDate=GETDATE() 
        WHERE SysNo=@SysNo AND CompanyCode=@CompanyCode
	  ]]>
    </commandText>
    <parameters>
      <param name="@Keywords" dbType="String" />
      <param name="@Keywords0" dbType="String" />
      <param name="@EditUserSysNo" dbType="Int32" />
      <param name="@SysNo" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetProductBatchManagementInfo" database="IMService" commandType="Text">
    <!--定义SQL语句-->
    <commandText>
      <![CDATA[
SELECT
  batch.SysNo,
	case ex.IsBatch when 'Y' then 1
	else 0 end as IsBatch,
	batch.ProductSysNo,
	batch.CollectType,
  case batch.IsCollectBatchNo when 'Y' then 1
	else 0 end as IsCollectBatchNo,
	batch.MinReceiptDays,
	batch.MaxDeliveryDays,
	batch.GuaranteePeriodYear,
	batch.GuaranteePeriodMonth,
	batch.GuaranteePeriodDay,
	batch.InDate,
	batch.InUser,
	batch.CompanyCode,
	batch.LanguageCode,
	batch.StoreCompanyCode
FROM IPP3.dbo.Product_Ex ex WITH(NOLOCK)
INNER JOIN OverseaContentManagement.dbo.Product_BatchManagementInfo batch WITH(NOLOCK)
ON ex.SysNo = batch.ProductSysNo
WHERE batch.ProductSysNo=@ProductSysNo
	  ]]>
    </commandText>
    <parameters>     
      <param name="@ProductSysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>
  
  <dataCommand name="UpdateProductBatchManagementInfo" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[
BEGIN TRY
	BEGIN TRAN
	UPDATE IPP3.dbo.Product_Ex SET 
		IsBatch=@IsBatch
	WHERE SysNo = @ProductSysNo
  
  IF @IsBatch='Y'
  BEGIN
	  IF EXISTS(
		  SELECT TOP 1 SysNo 
		  FROM OverseaContentManagement.dbo.Product_BatchManagementInfo
		  WHERE ProductSysNo = @ProductSysNo)
	  BEGIN
		  UPDATE OverseaContentManagement.dbo.Product_BatchManagementInfo SET
			  CollectType=@CollectType,
			  IsCollectBatchNo=@IsCollectBatchNo,
			  MinReceiptDays=@MinReceiptDays,
			  MaxDeliveryDays=@MaxDeliveryDays,
			  GuaranteePeriodYear=@GuaranteePeriodYear,
			  GuaranteePeriodMonth=@GuaranteePeriodMonth,
			  GuaranteePeriodDay=@GuaranteePeriodDay,
			  EditDate=GETDATE(),
			  EditUser=@UserAcct
		  WHERE ProductSysNo=@ProductSysNo
	  END
	  ELSE BEGIN
		  INSERT INTO OverseaContentManagement.dbo.Product_BatchManagementInfo
		  (
			  ProductSysNo,
			  CollectType,
			  IsCollectBatchNo,
			  MinReceiptDays,
			  MaxDeliveryDays,
			  GuaranteePeriodYear,
			  GuaranteePeriodMonth,
			  GuaranteePeriodDay,     
			  InDate,
			  InUser,      
			  CompanyCode,
			  LanguageCode,
			  StoreCompanyCode
			  )
		  VALUES(
			  @ProductSysNo,
			  @CollectType,
			  @IsCollectBatchNo,
			  @MinReceiptDays,
			  @MaxDeliveryDays,
			  @GuaranteePeriodYear,
			  @GuaranteePeriodMonth,
			  @GuaranteePeriodDay,      
			  GETDATE(),
			  @UserAcct,
			  '8601',
			  'zh-CN',
			  '8601'
		  )
	  END		
  END
	COMMIT TRAN
END TRY
BEGIN CATCH
    ROLLBACK TRAN
    DECLARE @ErrorMessage NVARCHAR(MAX)
    DECLARE @ErrorSeverity INT
    DECLARE @ErrorState INT
    SELECT
	     @ErrorMessage = ERROR_MESSAGE()
	    ,@ErrorSeverity = ERROR_SEVERITY()
	    ,@ErrorState = ERROR_STATE()
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
END CATCH
	  ]]>
    </commandText>
    <parameters>
      <param name="@IsBatch" dbType="AnsiStringFixedLength" />
      <param name="@ProductSysNo" dbType="Int32" />      
      <param name="@CollectType" dbType="AnsiStringFixedLength" />
      <param name="@IsCollectBatchNo" dbType="AnsiStringFixedLength" />
      <param name="@MinReceiptDays" dbType="Int32" />
      <param name="@MaxDeliveryDays" dbType="Int32" />
      <param name="@GuaranteePeriodYear" dbType="Int32" />
      <param name="@GuaranteePeriodMonth" dbType="Int32" />
      <param name="@GuaranteePeriodDay" dbType="Int32" />     
      <param name="@UserAcct" dbType="String"  property="[UserAcct]"/>     
    </parameters>
  </dataCommand>

  <dataCommand name="InsertProductBatchManagementLog" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[
INSERT INTO [OverseaContentManagement].[dbo].[Product_BatchManagementInfo_log]
           (
           [BatchManagementSysNo]
           ,[Note]
           ,[InDate]
           ,[InUser]
           )
     VALUES
           (
           @BatchManagementSysNo
           ,@Note
           ,GETDATE()
           ,@InUser
           )
      	]]>
    </commandText>
    <parameters>
      <param name="@BatchManagementSysNo" dbType="Int32" />
      <param name="@Note" dbType="String" size="10000" />
      <param name="@InUser" dbType="String" size="50" />
    </parameters>
  </dataCommand>
  
  <dataCommand name="GetProductBatchManagementLogByBatchManagementSysNo" database="IMService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT 
       [SysNo]
      ,[BatchManagementSysNo]
      ,[Note]
      ,[InDate]
      ,[InUser]
  FROM [OverseaContentManagement].[dbo].[Product_BatchManagementInfo_log]
  WHERE [BatchManagementSysNo]=@BatchManagementSysNo 
  ORDER BY InDate DESC
      	]]>
    </commandText>
    <parameters>
      <param name="@BatchManagementSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
</dataOperations>
