<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <dataCommand name="QueryItemAllocatedCardReLatedOrder" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
          @TotalCount=Count(a.OrderCode)
	      FROM 
	      (
		      -- lend
		      (
			      SELECT 
			        '4' AS OrderName, 
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        lendid AS OrderCode,
			        IPP3.dbo.st_lend.sysno AS OrderSysNo,
			        lendqty AS OrderQty,
			        0 AS RelatedSysNo,
              IPP3.dbo.st_lend.CompanyCode
			      FROM IPP3.dbo.st_lend WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
			      ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
			      WHERE (status = 1 OR status = 2)  AND stocksysno = @WarehouseSysNumber AND productsysno = @ItemSysNumber
            AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
			      --status=1 OR status=2 means status=LendStatus.Origin OR LendStatus.Verified
		      )
		      UNION ALL
		      -- transfer
		      (
			      SELECT 
			        '7' AS OrderName,
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        transferid AS OrderCode,
			        st_transfer.sysno AS OrderSysNo,
			        transferqty OrderQty,
			        0 AS RelatedSysNo,
              IPP3.dbo.st_transfer.CompanyCode
			      FROM IPP3.dbo.st_transfer  WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
			      ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
			      WHERE transfertype = 1 AND (status = 1 OR status = 2) AND stocksysno = @WarehouseSysNumber AND productsysno = @ItemSysNumber
            AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
			      --transfertype = 1 means transfertype=TransferItemType.Source;status=1 OR status=2 means status=TransferStatus.Origin OR TransferStatus.Verified
		      )
		      UNION ALL
		      -- shift(正)
		      (
			      SELECT 
			        '14' AS OrderName,
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        shiftid AS OrderCode,
			        IPP3.dbo.st_shift.sysno AS OrderSysNo,
			        shiftqty AS OrderQty,
			        RelatedShiftSysno AS  RelatedSysNo,
              IPP3.dbo.st_shift.CompanyCode
			      FROM IPP3.dbo.st_shift  WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
			      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
			      WHERE (status = 1 OR status = 2) AND  stocksysnoA = @WarehouseSysNumber AND productsysno = @ItemSysNumber AND ShiftType = 0
            AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
			      --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
		      )
		      UNION ALL
		      -- shift(负)
		      (
			      SELECT 
			        '15' AS OrderName,
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        shiftid AS OrderCode,
			        IPP3.dbo.st_shift.sysno AS OrderSysNo,
			        shiftqty*(-1) AS OrderQty,
			        RelatedShiftSysno AS  RelatedSysNo,
              IPP3.dbo.st_shift.CompanyCode
			      FROM IPP3.dbo.st_shift WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
			      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
			      WHERE (status=1 OR status=2) AND  stocksysnoB = @WarehouseSysNumber AND productsysno = @ItemSysNumber AND ShiftType = 1
            AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
			      --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
		      )
		      UNION ALL
		      -- shift(po直接生成)
		      (
			      SELECT 
			        '16' AS OrderName,
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        shiftid AS OrderCode,
			        IPP3.dbo.st_shift.sysno AS OrderSysNo,
			        shiftqty AS OrderQty,
			        RelatedShiftSysno AS  RelatedSysNo,
              IPP3.dbo.st_shift.CompanyCode
			      FROM IPP3.dbo.st_shift WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
			      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
			      WHERE (status = 1 OR status = 2) AND  stocksysnoA = @WarehouseSysNumber AND productsysno = @ItemSysNumber AND ShiftType = 2
            AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
			      --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
		      )
		      UNION ALL
		      -- adjust
		      (
			      SELECT 
			        '10' AS OrderName, 
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        adjustid AS OrderCode,
			        IPP3.dbo.st_adjust.sysno AS OrderSysNo,
			        adjustqty*(-1) AS OrderQty,
			        0 AS RelatedSysNo,
              IPP3.dbo.st_adjust.CompanyCode
			      FROM IPP3.dbo.st_adjust WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
			      ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
			      WHERE (status = 1 OR status = 2) AND stocksysno = @WarehouseSysNumber AND productsysno = @ItemSysNumber
            AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
			      --status=1 OR status=2 means status=AdjustStatus.Origin OR AdjustStatus.Verified
		      )
		    -- UNION ALL
		    --  -- RMA Revert New Product (调新品 已经不占用库存了  改为 OR单 占用库存)
		    -- (
			  --   SELECT 
			  --      '17' AS OrderName,
			  --      revertproductsysno AS ProductSysNo,
			  --      OverseaServiceManagement.dbo.V_SM_RMARevertMaster.createtime AS OrderTime,
			  --      cast(OverseaServiceManagement.dbo.V_SM_RMARegister.sysno AS varchar) AS OrderCode,
			  --      OverseaServiceManagement.dbo.V_SM_RMARegister.sysno AS OrderSysNo,
			  --      1 AS OrderQty ,
			  --      0 AS RelatedSysNo,
        --      OverseaServiceManagement.dbo.V_SM_RMARegister.CompanyCode
			  --    FROM OverseaServiceManagement.dbo.V_SM_RMARegister WITH(NOLOCK)
			  --    LEFT JOIN OverseaServiceManagement.dbo.V_SM_RMARevertTransaction WITH(NOLOCK)
        --    ON OverseaServiceManagement.dbo.V_SM_RMARegister.sysno = OverseaServiceManagement.dbo.V_SM_RMARevertTransaction.registersysno
			  --    LEFT JOIN OverseaServiceManagement.dbo.V_SM_RMARevertMaster WITH(NOLOCK)
        --    ON OverseaServiceManagement.dbo.V_SM_RMARevertTransaction.revertsysno = OverseaServiceManagement.dbo.V_SM_RMARevertMaster.sysno
			  --    WHERE OverseaServiceManagement.dbo.V_SM_RMARegister.newproductstatus <> 0                                          
				--        AND OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (0,2)
				--        AND OverseaServiceManagement.dbo.V_SM_RMARegister.revertproductsysno = @ItemSysNumber
        --        AND OverseaServiceManagement.dbo.V_SM_RMARegister.CompanyCode = @CompanyCode
			  --    --OverseaServiceManagement.dbo.V_SM_RMARegister.newproductstatus <> 0 means newproductstatus<>NewProductStatus.Origin
			  --    --OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (0,2) means OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (RMARevertStatus.WaitingRevert,RMARevertStatus.WaitingAudit)
        --)
		                              
         UNION ALL
         --OPC-RMA单，未进行company限定 
         (
                SELECT 
								'19' as OrderName, 
								b.productsysno as ProductSysNo, 
								a.CreateTime as OrderTime,
								cast (a.SysNo as nvarchar) as OrderCode,
								a.SysNo as OrderSysNo,
								b.ShiftQty as OrderQty,
                0 as RelatedSysNo,
                NULL as CompanyCode
								FROM rma.dbo.RMA_Stock_Shift a (nolock)
								INNER JOIN rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
			    			WHERE (a.Status = 0 OR a.Status = 1)  AND a.shifttype=2 AND a.StockSysNoA = @WarehouseSysNumber AND b.ProductSysNo=@ItemSysNumber	
                --a.Status=0 OR a.Status=1 means Origin OR Verified               
         )                               
         UNION ALL
        --负PO
        (
             SELECT 
				    '20' AS OrderName
				    ,IPP3.dbo.PO_Item.ProductSysNo                              AS ProductSysNo
				    ,IPP3.dbo.PO_Master.CreateTime                              AS OrderTime
				    ,IPP3.dbo.PO_Master.POID                                    AS OrderCode
				    ,IPP3.dbo.PO_Master.SysNo                                   AS OrderSysNo
				    ,(IPP3.dbo.PO_Item.PurchaseQty-IPP3.dbo.PO_Item.Quantity)*(-1)   AS OrderQty 
				    ,0 AS RelatedSysNo
				    ,IPP3.dbo.PO_Item.CompanyCode
				    FROM IPP3.dbo.PO_Master      WITH(NOLOCK)
				    LEFT JOIN IPP3.dbo.PO_Item   WITH(NOLOCK)
				    ON IPP3.dbo.PO_Master.SysNo = IPP3.dbo.PO_Item.POSysNo  
				    WHERE  IPP3.dbo.PO_Master.POType=1  
            AND    IPP3.dbo.PO_Master.StockSysNo = @WarehouseSysNumber
				    AND    IPP3.dbo.PO_Master.Status IN (3,6)
				    AND    IPP3.dbo.PO_Item.ProductSysNo = @ItemSysNumber
				    AND    IPP3.dbo.PO_Item.CompanyCode = @CompanyCode
        )
	    )AS a 
        
        SELECT 
          a.OrderName,
          '' AS OrderNameString,
          a.ProductSysNo,
          a.OrderTime,
          a.OrderCode,
          a.RelatedSysNo,
          a.OrderQty,
          a.OrderSysNo,
          a.CompanyCode
	      FROM 
	      (
          SELECT 
            OrderName,
            ProductSysNo,
            OrderTime,
            OrderCode,
            RelatedSysNo,
            OrderQty,
            OrderSysNo,
            CompanyCode,
            (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
          FROM
          (
		        -- lend
		        (
			        SELECT 
			          '4' AS OrderName, 
			          productsysno AS ProductSysNo, 
			          createtime AS OrderTime,
			          lendid AS OrderCode,
			          IPP3.dbo.st_lend.sysno AS OrderSysNo,
			          lendqty AS OrderQty,
			          0 AS RelatedSysNo,
                IPP3.dbo.st_lend.CompanyCode
		          FROM IPP3.dbo.st_lend WITH(NOLOCK)
		          INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
		          ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
		          WHERE (status = 1 OR status = 2)  AND stocksysno = @WarehouseSysNumber AND productsysno = @ItemSysNumber
              AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
		          --status=1 OR status=2 means status=LendStatus.Origin OR LendStatus.Verified
		        )
		        UNION ALL
		        -- transfer
		        (
			        SELECT 
			          '7' AS OrderName,
			          productsysno AS ProductSysNo, 
			          createtime AS OrderTime,
			          transferid AS OrderCode,
			          IPP3.dbo.st_transfer.sysno AS OrderSysNo,
			          transferqty OrderQty,
			          0 AS RelatedSysNo,
                IPP3.dbo.st_transfer.CompanyCode
		          FROM IPP3.dbo.st_transfer WITH(NOLOCK)
		          INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
		          ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
		          WHERE transfertype = 1 AND (status = 1 OR status = 2) AND stocksysno = @WarehouseSysNumber AND productsysno = @ItemSysNumber
              AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
		          --transfertype = 1 means transfertype=TransferItemType.Source;status=1 OR status=2 means status=TransferStatus.Origin OR TransferStatus.Verified
	          )
	          UNION ALL
	          -- shift(正)
	          (
		          SELECT 
			          '14' AS OrderName,
			          productsysno AS ProductSysNo, 
			          createtime AS OrderTime,
			          shiftid AS OrderCode,
			          IPP3.dbo.st_shift.sysno AS OrderSysNo,
			          shiftqty AS OrderQty,
			          RelatedShiftSysno AS  RelatedSysNo,
                IPP3.dbo.st_shift.CompanyCode
		          FROM IPP3.dbo.st_shift WITH(NOLOCK)
		          INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		          ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
		          WHERE (status = 1 OR status = 2) AND  stocksysnoA = @WarehouseSysNumber AND productsysno = @ItemSysNumber AND ShiftType = 0
              AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
		          --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
	          )
	          UNION ALL
	          -- shift(负)
	          (
		          SELECT 
			          '15' AS OrderName,
			          productsysno AS ProductSysNo, 
			          createtime AS OrderTime,
			          shiftid AS OrderCode,
			          IPP3.dbo.st_shift.sysno AS OrderSysNo,
			          shiftqty*(-1) AS OrderQty,
			          RelatedShiftSysno AS  RelatedSysNo,
                IPP3.dbo.st_shift.CompanyCode
		          FROM IPP3.dbo.st_shift WITH(NOLOCK)
		          INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		          ON IPP3.dbo.st_shift.sysno = dbo.st_shift_item.shiftsysno
		          WHERE (status = 1 OR status = 2) AND  stocksysnoB = @WarehouseSysNumber AND productsysno = @ItemSysNumber AND ShiftType = 1
              AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
		          --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
	          )
	          UNION ALL
	          -- shift(po直接生成)
	          (
		          SELECT 
			          '16' AS OrderName,
			          productsysno AS ProductSysNo, 
			          createtime AS OrderTime,
			          shiftid AS OrderCode,
			          IPP3.dbo.st_shift.sysno AS OrderSysNo,
			          shiftqty AS OrderQty,
			          RelatedShiftSysno AS  RelatedSysNo,
                IPP3.dbo.st_shift.CompanyCode
		          FROM IPP3.dbo.st_shift WITH(NOLOCK)
		          INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		          ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
		          WHERE (status = 1 OR status = 2) AND  stocksysnoA = @WarehouseSysNumber AND productsysno = @ItemSysNumber AND ShiftType = 2
              AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
		          --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
	          )
	          UNION ALL
	          -- adjust
	          (
		          SELECT 
			          '10' AS OrderName, 
			          productsysno AS ProductSysNo, 
			          createtime AS OrderTime,
			          adjustid AS OrderCode,
			          IPP3.dbo.st_adjust.sysno AS OrderSysNo,
			          adjustqty*(-1) AS OrderQty,
			          0 AS RelatedSysNo,
                IPP3.dbo.st_adjust.CompanyCode
		          FROM IPP3.dbo.st_adjust WITH(NOLOCK)
		          INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
		          ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
		          WHERE (status = 1 OR status = 2) AND stocksysno = @WarehouseSysNumber AND productsysno = @ItemSysNumber
              AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
		          --status=1 OR status=2 means status=AdjustStatus.Origin OR AdjustStatus.Verified
	          )
	   --       UNION ALL
	   --       -- RMA Revert New Product (调新品 已经不占用库存了  改为 OR单 占用库存)
	   --       (
		 --         SELECT 
		--	          '17' AS OrderName,
		--	          revertproductsysno AS ProductSysNo,
		--	          OverseaServiceManagement.dbo.V_SM_RMARevertMaster.createtime AS OrderTime,
		--	          cast(OverseaServiceManagement.dbo.V_SM_RMARegister.sysno AS varchar) AS OrderCode,
		--	          OverseaServiceManagement.dbo.V_SM_RMARegister.sysno AS OrderSysNo,
		--	          1 AS OrderQty ,
		--	          0 AS RelatedSysNo,
    --            OverseaServiceManagement.dbo.V_SM_RMARegister.CompanyCode
		--          FROM OverseaServiceManagement.dbo.V_SM_RMARegister WITH(NOLOCK)
		--          LEFT JOIN OverseaServiceManagement.dbo.V_SM_RMARevertTransaction WITH(NOLOCK)
    --          ON OverseaServiceManagement.dbo.V_SM_RMARegister.sysno = OverseaServiceManagement.dbo.V_SM_RMARevertTransaction.registersysno
		--          LEFT JOIN OverseaServiceManagement.dbo.V_SM_RMARevertMaster  WITH(NOLOCK)
    --          ON OverseaServiceManagement.dbo.V_SM_RMARevertTransaction.revertsysno = OverseaServiceManagement.dbo.V_SM_RMARevertMaster.sysno
		--          WHERE OverseaServiceManagement.dbo.V_SM_RMARegister.newproductstatus <> 0                                          
		--	            AND OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (0,2)
		--	            AND OverseaServiceManagement.dbo.V_SM_RMARegister.revertproductsysno = @ItemSysNumber
    --              AND OverseaServiceManagement.dbo.V_SM_RMARegister.CompanyCode = @CompanyCode
	  --          --OverseaServiceManagement.dbo.V_SM_RMARegister.newproductstatus <> 0 means newproductstatus<>NewProductStatus.Origin
		--          --OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (0,2) means OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (RMARevertStatus.WaitingRevert,RMARevertStatus.WaitingAudit)
	  --        )
        UNION ALL
         --OPC-RMA单，未进行company限定 
         (
                SELECT 
								'19' as OrderName, 
								b.productsysno as ProductSysNo, 
								a.CreateTime as OrderTime,
								cast (a.SysNo as nvarchar) as OrderCode,
								a.SysNo as OrderSysNo,
								b.ShiftQty as OrderQty,
                0 as RelatedSysNo,
                NULL as CompanyCode
								FROM rma.dbo.RMA_Stock_Shift a (nolock)
								INNER JOIN rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
			    			WHERE (a.Status = 0 OR a.Status = 1)  AND a.shifttype=2 AND a.StockSysNoA = @WarehouseSysNumber AND b.ProductSysNo=@ItemSysNumber	
                --a.Status=0 OR a.Status=1 means Origin OR Verified               
         )                      
            UNION ALL
            --负PO
            (
                   SELECT 
				          '20' AS OrderName
				          ,IPP3.dbo.PO_Item.ProductSysNo                              AS ProductSysNo
				          ,IPP3.dbo.PO_Master.CreateTime                              AS OrderTime
				          ,IPP3.dbo.PO_Master.POID                                    AS OrderCode
				          ,IPP3.dbo.PO_Master.SysNo                                   AS OrderSysNo
				          ,(IPP3.dbo.PO_Item.PurchaseQty-IPP3.dbo.PO_Item.Quantity)*(-1)   AS OrderQty 
				          ,0 AS RelatedSysNo
				          ,IPP3.dbo.PO_Item.CompanyCode
				          FROM IPP3.dbo.PO_Master      WITH(NOLOCK)
				          LEFT JOIN IPP3.dbo.PO_Item   WITH(NOLOCK)
				          ON IPP3.dbo.PO_Master.SysNo = IPP3.dbo.PO_Item.POSysNo  
				          WHERE  IPP3.dbo.PO_Master.POType=1  
                  AND    IPP3.dbo.PO_Master.StockSysNo = @WarehouseSysNumber
				          AND    IPP3.dbo.PO_Master.Status IN (3,6)
				          AND    IPP3.dbo.PO_Item.ProductSysNo = @ItemSysNumber
				          AND    IPP3.dbo.PO_Item.CompanyCode = @CompanyCode
              )
          )RESULT
	      )AS a 
        WHERE a.RowNumber > @StartNumber
        ORDER BY  #SortColumnName#
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@WarehouseSysNumber"/>
      <param dbType="Int32" name="@ItemSysNumber"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="QueryItemAllocatedCardReLatedOrderWithOutWarehouseNumber" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
     SELECT 
          @TotalCount=Count(a.OrderCode)
	      FROM 
	      (
		      -- lend
		      (
			      SELECT 
			        '4' AS OrderName, 
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        lendid AS OrderCode,
			        IPP3.dbo.st_lend.sysno AS OrderSysNo,
			        lendqty AS OrderQty,
			        0 AS RelatedSysNo,
              IPP3.dbo.st_lend.CompanyCode
			      FROM IPP3.dbo.st_lend WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
			      ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
			      WHERE (status = 1 OR status = 2) AND productsysno = @ItemSysNumber
            AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
			      --status=1 OR status=2 means status=LendStatus.Origin OR LendStatus.Verified
		      )
		      UNION ALL
		      -- transfer
		      (
			      SELECT 
			        '7' AS OrderName,
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        transferid AS OrderCode,
			        IPP3.dbo.st_transfer.sysno AS OrderSysNo,
			        transferqty OrderQty,
			        0 AS RelatedSysNo,
              IPP3.dbo.st_transfer.CompanyCode
			      FROM IPP3.dbo.st_transfer WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
			      ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
			      WHERE transfertype = 1 AND (status = 1 OR status = 2) AND productsysno = @ItemSysNumber
            AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
			      --transfertype = 1 means transfertype=TransferItemType.Source;status=1 OR status=2 means status=TransferStatus.Origin OR TransferStatus.Verified
		      )
		      UNION ALL
		      -- shift(正)
		      (
			      SELECT 
			        '14' AS OrderName,
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        shiftid AS OrderCode,
			        IPP3.dbo.st_shift.sysno AS OrderSysNo,
			        shiftqty AS OrderQty,
			        RelatedShiftSysno AS  RelatedSysNo,
              IPP3.dbo.st_shift.CompanyCode
			      FROM IPP3.dbo.st_shift WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
			      ON IPP3.dbo.st_shift.sysno = dbo.st_shift_item.shiftsysno
			      WHERE (status = 1 OR status = 2) AND productsysno = @ItemSysNumber AND ShiftType = 0
            AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
			      --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
		      )
		      UNION ALL
		      -- shift(负)
		      (
			      SELECT 
			        '15' AS OrderName,
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        shiftid AS OrderCode,
			        IPP3.dbo.st_shift.sysno AS OrderSysNo,
			        shiftqty*(-1) AS OrderQty,
			        RelatedShiftSysno AS  RelatedSysNo,
              IPP3.dbo.st_shift.CompanyCode
			      FROM IPP3.dbo.st_shift WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
			      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
			      WHERE (status = 1 OR status = 2) AND productsysno = @ItemSysNumber AND ShiftType = 1
            AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
			      --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
		      )
		      UNION ALL
		      -- shift(po直接生成)
		      (
			      SELECT 
			        '16' AS OrderName,
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        shiftid AS OrderCode,
			        IPP3.dbo.st_shift.sysno AS OrderSysNo,
			        shiftqty AS OrderQty,
			        RelatedShiftSysno AS  RelatedSysNo,
              IPP3.dbo.st_shift.CompanyCode
			      FROM IPP3.dbo.st_shift WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
			      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
			      WHERE (status = 1 OR status = 2) AND productsysno = @ItemSysNumber AND ShiftType = 2
            AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
			      --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
		      )
		      UNION ALL
		      -- adjust
		      (
			      SELECT 
			        '10' AS OrderName, 
			        productsysno AS ProductSysNo, 
			        createtime AS OrderTime,
			        adjustid AS OrderCode,
			        IPP3.dbo.st_adjust.sysno AS OrderSysNo,
			        adjustqty*(-1) AS OrderQty,
			        0 AS RelatedSysNo,
              IPP3.dbo.st_adjust.CompanyCode
			      FROM IPP3.dbo.st_adjust WITH(NOLOCK)
			      INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
			      ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
			      WHERE (status = 1 OR status = 2) AND productsysno = @ItemSysNumber
            AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
			      --status=1 OR status=2 means status=AdjustStatus.Origin OR AdjustStatus.Verified
		      )
--		      UNION ALL
--		      -- RMA Revert New Product (调新品 已经不占用库存了  改为 OR单 占用库存)
--		      (
--			      SELECT 
--			        '17' AS OrderName,
--			        revertproductsysno AS ProductSysNo,
--			        OverseaServiceManagement.dbo.V_SM_RMARevertMaster.createtime AS OrderTime,
--			        cast(OverseaServiceManagement.dbo.V_SM_RMARegister.sysno AS varchar) AS OrderCode,
--			        OverseaServiceManagement.dbo.V_SM_RMARegister.sysno AS OrderSysNo,
--			        1 AS OrderQty ,
--			        0 AS RelatedSysNo,
--              OverseaServiceManagement.dbo.V_SM_RMARegister.CompanyCode
--			      FROM OverseaServiceManagement.dbo.V_SM_RMARegister WITH(NOLOCK)
--			      LEFT JOIN OverseaServiceManagement.dbo.V_SM_RMARevertTransaction WITH(NOLOCK)
--            ON OverseaServiceManagement.dbo.V_SM_RMARegister.sysno = OverseaServiceManagement.dbo.V_SM_RMARevertTransaction.registersysno
--			      LEFT JOIN OverseaServiceManagement.dbo.V_SM_RMARevertMaster  WITH(NOLOCK)
--           ON OverseaServiceManagement.dbo.V_SM_RMARevertTransaction.revertsysno = OverseaServiceManagement.dbo.V_SM_RMARevertMaster.sysno
--			      WHERE OverseaServiceManagement.dbo.V_SM_RMARegister.newproductstatus <> 0                                          
--				        AND OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (0,2)
--				        AND OverseaServiceManagement.dbo.V_SM_RMARegister.revertproductsysno = @ItemSysNumber
--                AND OverseaServiceManagement.dbo.V_SM_RMARegister.CompanyCode = @CompanyCode
--			      --OverseaServiceManagement.dbo.V_SM_RMARegister.newproductstatus <> 0 means newproductstatus<>NewProductStatus.Origin
--			      --OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (0,2) means OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (RMARevertStatus.WaitingRevert,RMARevertStatus.WaitingAudit)
--		      )          
           UNION ALL
           --OPC-RMA单 ，未进行company限定
           (
                SELECT 
	              '19' as OrderName, 
	              b.productsysno as ProductSysNo, 
	              a.CreateTime as OrderTime,
	              CAST(a.SysNo as nvarchar) as OrderCode,
	              a.SysNo as OrderSysNo,
	              b.ShiftQty as OrderQty,	        
                0 as RelatedSysNo,
                NULL as CompanyCode
	              FROM rma.dbo.RMA_Stock_Shift a (nolock)
	              INNER JOIN rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
	              WHERE (a.Status = 0 OR a.Status = 1) AND a.shifttype=2 AND  b.ProductSysNo=@ItemSysNumber			
                --a.Status=0 OR a.Status=1 means Origin OR Verified     
           )                              
          UNION ALL
          (
           SELECT 
				  '20' AS OrderName
				  ,IPP3.dbo.PO_Item.ProductSysNo                              AS ProductSysNo
				  ,IPP3.dbo.PO_Master.CreateTime                              AS OrderTime
				  ,IPP3.dbo.PO_Master.POID                                    AS OrderCode
				  ,IPP3.dbo.PO_Master.SysNo                                   AS OrderSysNo
				  ,(IPP3.dbo.PO_Item.PurchaseQty-IPP3.dbo.PO_Item.Quantity)*(-1)   AS OrderQty 
				  ,0 AS RelatedSysNo
				  ,IPP3.dbo.PO_Item.CompanyCode
				  FROM IPP3.dbo.PO_Master      WITH(NOLOCK)
				  LEFT JOIN IPP3.dbo.PO_Item   WITH(NOLOCK)
				  ON IPP3.dbo.PO_Master.SysNo = IPP3.dbo.PO_Item.POSysNo  
				  WHERE  IPP3.dbo.PO_Master.POType=1  
				  AND    IPP3.dbo.PO_Master.Status IN (3,6)
				  AND    IPP3.dbo.PO_Item.ProductSysNo = @ItemSysNumber
				  AND    IPP3.dbo.PO_Item.CompanyCode = @CompanyCode
             )
           
	      )AS a 
        
        SELECT
          a.OrderName,
          '' AS OrderNameString,
          a.ProductSysNo,
          a.OrderTime,
          a.OrderCode,
          a.RelatedSysNo,
          a.OrderQty,
          a.OrderSysNo,
          a.CompanyCode
	      FROM 
	      (
          SELECT 
            OrderName,
            ProductSysNo,
            OrderTime,
            OrderCode,
            RelatedSysNo,
            OrderQty,
            OrderSysNo,
            CompanyCode,
            (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
          FROM
          (
              -- lend
              (
	              SELECT 
	                '4' AS OrderName, 
	                productsysno AS ProductSysNo, 
	                createtime AS OrderTime,
	                lendid AS OrderCode,
	                IPP3.dbo.st_lend.sysno AS OrderSysNo,
	                lendqty AS OrderQty,
	                0 AS RelatedSysNo,
                  IPP3.dbo.st_lend.CompanyCode
	              FROM IPP3.dbo.st_lend WITH(NOLOCK)
	              INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
	              ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
	              WHERE (status = 1 OR status = 2) AND productsysno = @ItemSysNumber
                AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
	              --status = 1 OR status = 2 means status=LendStatus.Origin OR LendStatus.Verified
              )
              UNION ALL
              -- transfer
              (
	              SELECT 
	                '7' AS OrderName,
	                productsysno AS ProductSysNo, 
	                createtime AS OrderTime,
	                transferid AS OrderCode,
	                IPP3.dbo.st_transfer.sysno AS OrderSysNo,
	                transferqty OrderQty,
	                0 AS RelatedSysNo,
                  IPP3.dbo.st_transfer.CompanyCode
	              FROM IPP3.dbo.st_transfer WITH(NOLOCK)
	              INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
	              ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
	              WHERE transfertype = 1 AND (status = 1 OR status = 2) AND productsysno = @ItemSysNumber
                AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
	              --transfertype = 1 means transfertype=TransferItemType.Source;status = 1 OR status = 2 means status=TransferStatus.Origin OR TransferStatus.Verified
              )
              UNION ALL
              -- shift(正)
              (
	              SELECT 
	                '14' AS OrderName,
	                productsysno AS ProductSysNo, 
	                createtime AS OrderTime,
	                shiftid AS OrderCode,
	                IPP3.dbo.st_shift.sysno AS OrderSysNo,
	                shiftqty AS OrderQty,
	                RelatedShiftSysno AS  RelatedSysNo,
                  IPP3.dbo.st_shift.CompanyCode
	              FROM IPP3.dbo.st_shift WITH(NOLOCK)
	              INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
	              ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
	              WHERE (status = 1 OR status = 2) AND productsysno = @ItemSysNumber AND ShiftType = 0
                AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
	              --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
              )
              UNION ALL
              -- shift(负)
              (
	              SELECT 
	                '15' AS OrderName,
	                productsysno AS ProductSysNo, 
	                createtime AS OrderTime,
	                shiftid AS OrderCode,
	                IPP3.dbo.st_shift.sysno AS OrderSysNo,
	                shiftqty*(-1) AS OrderQty,
	                RelatedShiftSysno AS  RelatedSysNo,
                  IPP3.dbo.st_shift.CompanyCode
	              FROM IPP3.dbo.st_shift  WITH(NOLOCK)
	              INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
	              ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
	              WHERE (status = 1 OR status = 2) AND productsysno = @ItemSysNumber AND ShiftType = 1
                AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
	              --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
              )
              UNION ALL
              -- shift(po直接生成)
              (
	              SELECT 
	                '16' AS OrderName,
	                productsysno AS ProductSysNo, 
	                createtime AS OrderTime,
	                shiftid AS OrderCode,
	                IPP3.dbo.st_shift.sysno AS OrderSysNo,
	                shiftqty AS OrderQty,
	                RelatedShiftSysno AS  RelatedSysNo,
                  IPP3.dbo.st_shift.CompanyCode
	              FROM IPP3.dbo.st_shift  WITH(NOLOCK)
	              INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
	              ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
	              WHERE (status = 1 OR status = 2) AND productsysno = @ItemSysNumber AND ShiftType = 2
                AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
	              --status=1 OR status=2 means status=ShiftStatus.Origin OR ShiftStatus.Verified
              )
              UNION ALL
              -- adjust
              (
	              SELECT 
	                '10' AS OrderName, 
	                productsysno AS ProductSysNo, 
	                createtime AS OrderTime,
	                adjustid AS OrderCode,
	                IPP3.dbo.st_adjust.sysno AS OrderSysNo,
	                adjustqty*(-1) AS OrderQty,
	                0 AS RelatedSysNo,
                  IPP3.dbo.st_adjust.CompanyCode
	              FROM IPP3.dbo.st_adjust WITH(NOLOCK)
	              INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
	              ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
	              WHERE (status = 1 OR status = 2) AND productsysno = @ItemSysNumber
                AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
	              --status=1 OR status=2 means status=AdjustStatus.Origin OR AdjustStatus.Verified
              )
--              UNION ALL
 --             -- RMA Revert New Product (调新品 已经不占用库存了  改为 OR单 占用库存)
--              (
--	              SELECT 
--	                '17' AS OrderName,
--	                revertproductsysno AS ProductSysNo,
--	                OverseaServiceManagement.dbo.V_SM_RMARevertMaster.createtime AS OrderTime,
--	                cast(OverseaServiceManagement.dbo.V_SM_RMARegister.sysno AS varchar) AS OrderCode,
--	                OverseaServiceManagement.dbo.V_SM_RMARegister.sysno AS OrderSysNo,
--	                1 AS OrderQty ,
	--                0 AS RelatedSysNo,
 --                 OverseaServiceManagement.dbo.V_SM_RMARegister.CompanyCode
	--              FROM OverseaServiceManagement.dbo.V_SM_RMARegister  WITH(NOLOCK)
--	              LEFT JOIN OverseaServiceManagement.dbo.V_SM_RMARevertTransaction  WITH(NOLOCK)
--                ON OverseaServiceManagement.dbo.V_SM_RMARegister.sysno = OverseaServiceManagement.dbo.V_SM_RMARevertTransaction.registersysno
--	              LEFT JOIN OverseaServiceManagement.dbo.V_SM_RMARevertMaster  WITH(NOLOCK)
--                ON OverseaServiceManagement.dbo.V_SM_RMARevertTransaction.revertsysno = OverseaServiceManagement.dbo.V_SM_RMARevertMaster.sysno
--	              WHERE OverseaServiceManagement.dbo.V_SM_RMARegister.newproductstatus <> 0                                          
--		                AND OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (0,2)
--		                AND OverseaServiceManagement.dbo.V_SM_RMARegister.revertproductsysno = @ItemSysNumber
--                    AND OverseaServiceManagement.dbo.V_SM_RMARegister.CompanyCode = @CompanyCode
--	              --OverseaServiceManagement.dbo.V_SM_RMARegister.newproductstatus <> 0 means newproductstatus<>NewProductStatus.Origin
--	              --OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (0,2) means OverseaServiceManagement.dbo.V_SM_RMARegister.revertstatus in (RMARevertStatus.WaitingRevert,RMARevertStatus.WaitingAudit)
--              )
       UNION ALL
       --OPC-RMA单 ，未进行company限定
       (
                SELECT 
	              '19' as OrderName, 
	              b.productsysno as ProductSysNo, 
	              a.CreateTime as OrderTime,
	              CAST(a.SysNo as nvarchar) as OrderCode,
	              a.SysNo as OrderSysNo,
	              b.ShiftQty as OrderQty,
                0 as RelatedSysNo,
                NULL as CompanyCode
	              FROM rma.dbo.RMA_Stock_Shift a (nolock)
	              INNER JOIN rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
	              WHERE  (a.Status = 0 OR a.Status = 1) and a.shifttype=2 AND  b.ProductSysNo=@ItemSysNumber	
                --a.Status=0 OR a.Status=1 means Origin OR Verified     
       )                 
              
			UNION ALL
      --负PO
            (
         SELECT 
				'20' AS OrderName
				,IPP3.dbo.PO_Item.ProductSysNo                              AS ProductSysNo
				,IPP3.dbo.PO_Master.CreateTime                              AS OrderTime
				,IPP3.dbo.PO_Master.POID                                    AS OrderCode
				,IPP3.dbo.PO_Master.SysNo                                   AS OrderSysNo
				,(IPP3.dbo.PO_Item.PurchaseQty-IPP3.dbo.PO_Item.Quantity)*(-1)   AS OrderQty 
				,0 AS RelatedSysNo
				,IPP3.dbo.PO_Item.CompanyCode
				FROM IPP3.dbo.PO_Master      WITH(NOLOCK)
				LEFT JOIN IPP3.dbo.PO_Item   WITH(NOLOCK)
				ON IPP3.dbo.PO_Master.SysNo = IPP3.dbo.PO_Item.POSysNo  
				WHERE  IPP3.dbo.PO_Master.POType=1  
				AND    IPP3.dbo.PO_Master.Status IN (3,6)
				AND    IPP3.dbo.PO_Item.ProductSysNo = @ItemSysNumber
				AND    IPP3.dbo.PO_Item.CompanyCode = @CompanyCode
             )
          )RESULT
	      )AS a 
        WHERE a.RowNumber > @StartNumber
        ORDER BY  #SortColumnName#
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ItemSysNumber"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="QueryItemsCardReLatedOrder" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
          @TotalCount = Count(a.OrderCode)
        FROM 
        (
           --instock '0':PO(Instock) '1':PO-Return(Instock) '2':PO-History-Return(Instock) '3':PO-调价(Instock)
	        (
            select 
									case when potype=0 then '0' when potype=1 then '1' 
                  when potype=2 then '2' 
                  when potype=3 then '3' end as OrderName,
									productsysno as ProductSysNo,  
									intime as OrderTime,
									poid as OrderCode,
									po_master.sysno as OrderSysNo,
									quantity as OrderQty,
									PayStockSysNo StockSysNo,
                  0 as RelatedSysNo,
                  po_master.CompanyCode
									from 
									IPP3.dbo.V_POPayStock po_master with (nolock) 
                  inner join IPP3.dbo.po_item with (nolock)
									on po_master.sysno = IPP3.dbo.po_item.posysno
									where po_master.status in(4,6,7,8) and po_master.VirStockSysNo = @WarehouseSysNo and productsysno=@ItemSysNo 
                  and po_master.CompanyCode = @CompanyCode
	        )
	        UNION ALL
	        -- lend
	        (
		        SELECT 
		          '4' AS OrderName, 
		          productsysno AS ProductSysNo, 
		          outtime AS OrderTime,
		          lendid AS OrderCode,
		          st_lend.sysno AS OrderSysNo,
		          lendqty*(-1) AS OrderQty,
		          stocksysno AS StockSysNo,
              0 AS RelatedSysNo,
              IPP3.dbo.st_lend.CompanyCode
		        FROM IPP3.dbo.st_lend WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
		        ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
		        WHERE status >= 3 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo 
            AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
	        )
	        UNION ALL
	        -- lendReturn
	        (
		        SELECT 
		          '5' AS OrderName, 
		          productsysno AS ProductSysNo, 
		          returntime AS OrderTime,
		          lendid AS OrderCode,
		          st_lend.sysno AS OrderSysNo,
		          returnqty AS OrderQty,
		          stocksysno AS StockSysNo,
              0 AS RelatedSysNo,
              IPP3.dbo.st_lend.CompanyCode
		        FROM IPP3.dbo.st_lend WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_lend_return WITH(NOLOCK)
		        ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_return.lendsysno
		        WHERE status >= 4 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo 
            AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
	        )								
	        UNION ALL
	        -- so
	        (
            select 
						'6' as OrderName,
						productsysno as ProductSysNo,  
						outtime as OrderTime,
						soid as OrderCode,
						so_master.sysno as OrderSysNo,
						quantity*(-1) as OrderQty,
						v_so_item.WarehouseNumber as StockSysNo,
            0 as RelatedSysNo,
            so_master.CompanyCode
						from 
						IPP3.dbo.v_so_master so_master  with(nolock) 
            inner join IPP3.dbo.v_so_item with(nolock) on so_master.sysno = v_so_item.sosysno
            left join OverseaOrderManagement.dbo.V_OM_SO_CheckShipping so_check with(nolock)  on so_master.sysno = so_check.sosysno 
						where status = 4 and  WarehouseNumber = replicate('0',2-datalength(cast(@WarehouseSysNo as varchar(2))))+cast(@WarehouseSysNo as varchar(2))/*stocksysno = @WarehouseSysNo*/ and productsysno=@ItemSysNo and IPP3.dbo.v_so_item.producttype not in (3,4)
            and so_master.CompanyCode = @CompanyCode
            and  ISNULL(so_check.sotype,0)<>10
	        )
	        UNION ALL
	        -- transfer
	        (
		        SELECT 
		          '7' AS OrderName,
		          productsysno AS ProductSysNo, 
		          outtime AS OrderTime,
		          transferid AS OrderCode,
		          IPP3.dbo.st_transfer.sysno AS OrderSysNo,
		          CASE transfertype WHEN 1 THEN transferqty*(-1) ELSE transferqty END AS OrderQty,
		          stocksysno AS StockSysNo,
              0 AS RelatedSysNo,
              IPP3.dbo.st_transfer.CompanyCode
		        FROM IPP3.dbo.st_transfer  WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
		        ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
		        WHERE status = 3 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
            AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
	        )
	        UNION ALL
	        -- 移仓单(移出)
	        (
		        SELECT 
		          '8' AS OrderName,
		          productsysno AS ProductSysNo, 
		          outtime AS OrderTime,
		          shiftid AS OrderCode,
		          IPP3.dbo.st_shift.sysno AS OrderSysNo,
		          CASE shifttype 
                WHEN 1 THEN abs(shiftqty)*(-1) 
                ELSE shiftqty * (-1) END AS OrderQty,
		          CASE shifttype
                WHEN 1 THEN stocksysnoB
                ELSE stocksysnoA END AS StockSysNo,
              RelatedShiftSysno AS  RelatedSysNo,
              IPP3.dbo.st_shift.CompanyCode
		        FROM IPP3.dbo.st_shift WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		        ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
		        WHERE status >= 3 AND  ((shifttype<>1 AND stocksysnoA = @WarehouseSysNo) OR (shifttype=1 AND stocksysnoB = @WarehouseSysNo)) AND productsysno = @ItemSysNo
            AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
	        )
	        UNION ALL
	        -- 移仓单(移入)
	        (
		        SELECT 
		          '9' AS OrderName,
		          productsysno AS ProductSysNo, 
		          intime AS OrderTime,
		          shiftid AS OrderCode,
		          IPP3.dbo.st_shift.sysno AS OrderSysNo,
		          CASE shifttype
                WHEN 1 THEN abs(instockqty)
                ELSE instockqty END AS OrderQty,
		          CASE shifttype
                WHEN 1 THEN stocksysnoA
                ELSE stocksysnob END AS StockSysNo,
		          RelatedShiftSysno AS  RelatedSysNo,
              IPP3.dbo.st_shift.CompanyCode
		        FROM IPP3.dbo.st_shift WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		        ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
		        WHERE status >= 4  AND  ((shifttype<>1 AND stocksysnoB = @WarehouseSysNo) OR (shifttype=1 AND stocksysnoA = @WarehouseSysNo))  AND productsysno = @ItemSysNo
            AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
	        )    
	        UNION ALL
	        -- adjust
	        (
		        SELECT 
		          '10' AS OrderName, 
		          productsysno AS ProductSysNo, 
		          outtime AS OrderTime,
		          adjustid AS OrderCode,
		          st_adjust.sysno AS OrderSysNo,
		          adjustqty AS OrderQty,
		          stocksysno AS StockSysNo,
              0 AS RelatedSysNo,
              IPP3.dbo.st_adjust.CompanyCode
		        FROM IPP3.dbo.st_adjust WITH(NOLOCK)
		        INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
		        ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
		        WHERE status=3 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
            AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
	        )
          UNION ALL
	        -- RMAOut
	        (
            select 
									'11' as OrderName, 
									rrs.revertproductsysno as ProductSysNo, 
									outtime as OrderTime,
									RevertID as OrderCode,
									rr.SysNo as OrderSysNo,
									'-1' as OrderQty,
									rri.StockSysNo,
                  0 as RelatedSysNo,
                  rr.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMARevertMaster rr with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMARevertTransaction rri with (nolock)
									on rr.SysNo = rri.RevertSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rri.RegisterSysNo
									where rr.Status=1 
                  and rrs.NewProductStatus<>0 
                  and  stocksysno = @WarehouseSysNo 
                  and rrs.revertproductsysno=@ItemSysNo 
                  and rr.OutTime<@RevertTime
                  AND rr.CompanyCode = @CompanyCode
	        )
          UNION ALL
	        -- RMAReturn
	        (
            select 
									'12' as OrderName, 
									rrni.Targetproductsysno as ProductSysNo, 
									max(ReturnTime) as OrderTime,
									ReturnID as OrderCode,
									rrn.SysNo as OrderSysNo,
									count(*) as OrderQty,
									rrn.StockSysNo,
                  0 as RelatedSysNo,
                  rrn.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMAReturnMaster rrn with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMAReturnTransaction rrni with (nolock)
									on rrn.SysNo = rrni.ReturnSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rrni.RegisterSysNo
									where rrn.Status=1 and rrni.OriginalWarehouse = @WarehouseSysNo 
                  and rrni.Targetproductsysno=@ItemSysNo	
                  AND rrn.CompanyCode = @CompanyCode
                  group by rrn.SysNo,rrn.ReturnID,rrn.stocksysno,rrni.Targetproductsysno,rrn.CompanyCode
           )
           union all
          --RMA IT/RT单
          (
              select distinct '18' as OrderName, 
              c.targetproductsysno as ProductSysNo, 
              max(a.Intime) as OrderTime,
              cast (a.SysNo as nvarchar) as OrderCode,
              a.SysNo as OrderSysNo,
              sum(c.TargetProductQty) as OrderQty,
              a.StockSysNoA as StockSysNo,
              0 as RelatedSysNo,
              d.CompanyCode
              from rma.dbo.RMA_Stock_Shift a (nolock)
              inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno
              inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
              where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
              and a.StockSysNoB = @WarehouseSysNo and c.targetproductsysno=@ItemSysNo	
              and (d.shippedwarehouse=a.stocksysnoB or (d.shippedwarehouse!=a.stocksysnoB and isnull(d.refundstatus,0)!=2))
              and d.CompanyCode = @CompanyCode
              group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode

              union All
              select distinct 
              '18' as OrderName, 
              c.targetproductsysno as ProductSysNo, 
              max(a.Intime) as OrderTime,
              cast (a.SysNo as nvarchar) as OrderCode,
              a.SysNo as OrderSysNo,
              sum(c.TargetProductQty) as OrderQty,
              a.StockSysNoA as StockSysNo,
              0 as RelatedSysNo,
              d.CompanyCode
              from rma.dbo.RMA_Stock_Shift a (nolock)                                    
              inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno 
              inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
              where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
              and d.shippedwarehouse =@WarehouseSysNo and c.targetproductsysno=@ItemSysNo	
              and d.shippedwarehouse!=a.stocksysnoB and d.refundstatus=2
              and d.CompanyCode = @CompanyCode
              group by a.sysno,a.StockSysNoA,c.targetproductsysno ,d.CompanyCode    
                                              
              )                             
             union all
            --OPC-RMA单，未进行company限定 
            (
                select 
								'19' as OrderName, 
								b.productsysno as ProductSysNo, 
								a.CreateTime as OrderTime,
								cast (a.SysNo as nvarchar) as OrderCode,
								a.SysNo as OrderSysNo,
								(-1)*b.ShiftQty as OrderQty,
								a.StockSysNoA as StockSysNo,
                0 as RelatedSysNo,
                null as CompanyCode
								from rma.dbo.RMA_Stock_Shift a (nolock)
								inner join rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
								where a.Status>=2 and a.shifttype=2 and a.StockSysNoA = @WarehouseSysNo and b.ProductSysNo=@ItemSysNo								
           ) 
           UNION ALL
            ---Balance，未进行company限定
            (    
              SELECT 
                '13' AS OrderName,
                productsysno AS ProductSysNo,
                createtime AS OrderTime,
                '' AS OrderCode,
                '' AS OrderSysNo,
                quantity AS OrderQty,
                stocksysno AS StockSysNo,
	              0 AS RelatedSysNo,
                null as CompanyCode
              FROM IPP3.dbo.st_balance WITH(NOLOCK) 
              WHERE stocksysno=@WarehouseSysNo AND productsysno=@ItemSysNo
            )
            UNION ALL
              --RMA 换发单原产品库存加
             (
                select '21' as OrderName,
                a.SourceProductSysNo as ProductSysNo,
                a.InTime as OrderTime,
                CAST(a.sysno as nvarchar) as OrderCode,
                a.SysNo as OrderSysNo,
                1 as OrderQty,
                e.StockSysNoB as StockSysNo,
                0 as RelatedSysNo,
                null as CompanyCode
                From IPP3.dbo.RMA_Transmit a with (nolock)
                inner join RMA.dbo.RMA_ChangeItem_Detail b with (nolock) on b.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_ChangeItem c with (nolock) on c.Sysno=b.RMAChangeItemSysNo
                inner join RMA.dbo.RMA_Shift_Register d with (nolock) on d.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_Stock_Shift e with (nolock) on e.Sysno=d.RMAShiftSysno
                where a.Status=3 and c.Status=1 and e.Status=4
                and (e.shifttype=0 or e.shifttype=1)
                and e.StockSysNoB=@WarehouseSysNo
                and a.SourceProductSysNo=@ItemSysNo
              )
             UNION ALL
             --RMA换发单转换产品为正常品时库存减
             (
                select '22' as OrderName,
                a.TransmitProductSysNo as ProductSysNo,
                a.InTime as OrderTime,
                CAST(a.sysno as nvarchar) as OrderCode,
                a.SysNo as OrderSysNo,
                -1 as OrderQty,
                e.StockSysNoB as StockSysNo,
                0 as RelatedSysNo,
                null as CompanyCode
                From IPP3.dbo.RMA_Transmit a with (nolock)
                inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                where a.Status=3 and b.TargetProductType=0 and c.Status=1 and e.Status=4 
                and (e.shifttype=0 or e.shifttype=1)
                and e.StockSysNoB=@WarehouseSysNo
                and a.TransmitProductSysNo=@ItemSysNo
              )
              UNION ALL
              --RMA换发单转换产品为二手品时二手品对应的原产品库存减
              (
                select '23' as OrderName,
                g.SysNo as ProductSysNo,
                a.InTime as OrderTime,
                CAST(a.sysno as nvarchar) as OrderCode,
                a.SysNo as OrderSysNo,
                -1 as OrderQty,
                e.StockSysNoB as StockSysNo,
                0 as RelatedSysNo,
                null as CompanyCode
                 From IPP3.dbo.RMA_Transmit a with (nolock)
                inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                inner join OverseaContentManagement.dbo.V_IM_Product f with(nolock) on f.SysNo=a.TransmitProductSysNo
                inner join OverseaContentManagement.dbo.V_IM_Product g with(nolock) on g.ProductID=substring(f.ProductID,1,10)
                where a.Status=3 and b.TargetProductType=1 and c.Status=1 and e.Status=4 
                and (e.shifttype=0 or e.shifttype=1)
                and e.StockSysNoB=@WarehouseSysNo
                and g.SysNo=@ItemSysNo
             )
        )AS a 
       
        SELECT 
          a.OrderName,
          '' AS OrderNameString,
          a.ProductSysNo,
          a.OrderTime,
          a.OrderCode,
          a.OrderSysNo,
          a.OrderQty,
          a.StockSysNo,
          a.RelatedSysNo,
          a.CompanyCode
        FROM 
        (
			    SELECT 
			      OrderName,
			      ProductSysNo,
			      OrderTime,
			      OrderCode,
			      OrderSysNo,
			      OrderQty,
			      StockSysNo,
			      RelatedSysNo,
            CompanyCode,
			      (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
			    FROM
			    (
					    --instock '0':PO(Instock) '1':PO-Return(Instock) '2':PO-History-Return(Instock) '3':PO-调价(Instock)
					    (SELECT 
							( CASE 
								WHEN porcv.purno IS NULL THEN cast(potype as varchar) 
								ELSE cast(potype as varchar) +'_' 
							END) AS OrderName 
						   ,productsysno AS ProductSysNo 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN intime 
								ELSE porcv.ReceivedDate 
							END) AS OrderTime 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN poid 
								ELSE cast(poid as varchar)+'_' +cast(porcv.batchnumber as varchar)
							END) AS OrderCode 
						   ,po_master.sysno AS OrderSysNo 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN quantity 
								ELSE porcv.ReceivedQuantity 
							END) AS OrderQty 
						   ,PayStockSysNo StockSysNo 
						   ,0 AS RelatedSysNo 
						   ,po_master.CompanyCode 
						FROM IPP3.dbo.V_POPayStock po_master WITH (NOLOCK) 
						INNER JOIN IPP3.dbo.po_item WITH (NOLOCK) 
							ON po_master.sysno = po_item.posysno 
						LEFT JOIN Scm.dbo.POReceivedDetail porcv WITH (NOLOCK) 
							ON po_master.sysno=porcv.Purno 
							AND porcv.item=( 
							SELECT 
								productid 
							FROM OverseaContentManagement.dbo.V_CM_ItemBasicInfo WITH(NOLOCK) 
							WHERE 
								sysno=po_item.productsysno 
						 ) 
						 where po_master.status in(4,6,7,8)
						 and po_master.VirStockSysNo = @WarehouseSysNo 
						 and productsysno=@ItemSysNo
						 and po_master.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- lend
					      (
						      SELECT 
						        '4' AS OrderName, 
						        productsysno AS ProductSysNo, 
						        outtime AS OrderTime,
						        lendid AS OrderCode,
						        st_lend.sysno AS OrderSysNo,
						        lendqty*(-1) AS OrderQty,
						        stocksysno AS StockSysNo,
						        0 AS RelatedSysNo,
                    IPP3.dbo.st_lend.CompanyCode
						      FROM IPP3.dbo.st_lend WITH(NOLOCK)
						      INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
						      ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
						      WHERE status >= 3  AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
                  AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- lendReturn
					      (
						      SELECT 
						        '5' AS OrderName, 
						        productsysno AS ProductSysNo, 
						        returntime AS OrderTime,
						        lendid AS OrderCode,
						        st_lend.sysno AS OrderSysNo,
						        returnqty AS OrderQty,
						        stocksysno AS StockSysNo,
						        0 AS RelatedSysNo,
                    IPP3.dbo.st_lend.CompanyCode
						      FROM IPP3.dbo.st_lend  WITH(NOLOCK)
						      INNER JOIN IPP3.dbo.st_lend_return WITH(NOLOCK)
						      ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_return.lendsysno
						      WHERE status >= 4  AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
                  AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
					      )								
					      UNION ALL
					      -- so
					      (
						      select 
						      '6' as OrderName,
						      productsysno as ProductSysNo,  
						      outtime as OrderTime,
						      soid as OrderCode,
						      so_master.sysno as OrderSysNo,
						      quantity*(-1) as OrderQty,
						      v_so_item.WarehouseNumber as StockSysNo,
                  0 as RelatedSysNo,
                  so_master.CompanyCode
						      from 
						      IPP3.dbo.v_so_master so_master  with(nolock) 
                  inner join IPP3.dbo.v_so_item  with(nolock) on so_master.sysno = IPP3.dbo.v_so_item.sosysno
                  left join OverseaOrderManagement.dbo.V_OM_SO_CheckShipping so_check with(nolock)  on so_master.sysno = so_check.sosysno
						      where status = 4 and  WarehouseNumber = replicate('0',2-datalength(cast(@WarehouseSysNo as varchar(2))))+cast(@WarehouseSysNo as varchar(2))/*stocksysno = @WarehouseSysNo*/ and productsysno=@ItemSysNo and IPP3.dbo.v_so_item.producttype not in (3,4)
                  and so_master.CompanyCode = @CompanyCode
                  and  ISNULL(so_check.sotype,0)<>10
					      )
					      UNION ALL
					      -- transfer
					      (
						      SELECT 
						        '7' AS OrderName,
						        productsysno AS ProductSysNo, 
						        outtime AS OrderTime,
						        transferid AS OrderCode,
						        IPP3.dbo.st_transfer.sysno AS OrderSysNo,
						        CASE transfertype WHEN 1 THEN transferqty*(-1) ELSE transferqty END AS OrderQty,
						        stocksysno AS StockSysNo,
						        0 AS RelatedSysNo,
                    IPP3.dbo.st_transfer.CompanyCode
						      FROM IPP3.dbo.st_transfer  WITH(NOLOCK)
						      INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
						      ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
						      WHERE status = 3 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
                  AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- 移仓单(移出)
					      (
						      SELECT 
						        '8' AS OrderName,
						        productsysno AS ProductSysNo, 
						        outtime AS OrderTime,
						        shiftid AS OrderCode,
						        IPP3.dbo.st_shift.sysno AS OrderSysNo,
						        CASE shifttype 
						           WHEN 1 THEN abs(shiftqty)*(-1) 
						           ELSE shiftqty * (-1) END AS OrderQty,
						        CASE shifttype
						           WHEN 1 THEN stocksysnoB
						           ELSE stocksysnoA END AS StockSysNo,
						        RelatedShiftSysno AS  RelatedSysNo,
                    IPP3.dbo.st_shift.CompanyCode
						      FROM IPP3.dbo.st_shift WITH(NOLOCK) 
						      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
						      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
						      WHERE status >= 3 AND  ((shifttype<>1 AND stocksysnoA = @WarehouseSysNo) OR (shifttype=1 AND stocksysnoB = @WarehouseSysNo)) 
							        AND productsysno = @ItemSysNo   
                      AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- 移仓单(移入)
					      (
						      SELECT 
						        '9' AS OrderName,
						        productsysno AS ProductSysNo, 
						        intime AS OrderTime,
						        shiftid AS OrderCode,
						        IPP3.dbo.st_shift.sysno AS OrderSysNo,
						        CASE shifttype
						           WHEN 1 THEN abs(instockqty)
						           ELSE instockqty END AS OrderQty,
						        CASE shifttype
						           WHEN 1 THEN stocksysnoA
						           ELSE stocksysnob END AS StockSysNo,
						        RelatedShiftSysno AS  RelatedSysNo,
                    IPP3.dbo.st_shift.CompanyCode
						      FROM IPP3.dbo.st_shift WITH(NOLOCK)
						      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
						      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
						      WHERE status >= 4  AND  ((shifttype<>1 AND stocksysnoB = @WarehouseSysNo) OR (shifttype=1 AND stocksysnoA = @WarehouseSysNo))  
							        AND productsysno=@ItemSysNo
                      AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
					      )    
					      UNION ALL
					      -- adjust
					      (
						      SELECT 
						        '10' AS OrderName, 
						        productsysno AS ProductSysNo, 
						        outtime AS OrderTime,
						        adjustid AS OrderCode,
						        IPP3.dbo.st_adjust.sysno AS OrderSysNo,
						        adjustqty AS OrderQty,
						        stocksysno AS StockSysNo,
						        0 AS RelatedSysNo,
                    IPP3.dbo.st_adjust.CompanyCode
						      FROM IPP3.dbo.st_adjust  WITH(NOLOCK)
						      INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
						      ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
						      WHERE status = 3 AND stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
                  AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- RMAOut
					      (
                  select 
									'11' as OrderName, 
									rrs.revertproductsysno as ProductSysNo, 
									outtime as OrderTime,
									RevertID as OrderCode,
									rr.SysNo as OrderSysNo,
									'-1' as OrderQty,
									rri.StockSysNo,
                  0 as RelatedSysNo,
                  rr.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMARevertMaster rr with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMARevertTransaction rri with (nolock)
									on rr.SysNo = rri.RevertSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rri.RegisterSysNo
									where 
                  rr.Status=1 
                  and rrs.NewProductStatus<>0 
                  and  stocksysno = @WarehouseSysNo 
                  and rrs.revertproductsysno=@ItemSysNo 
                  and rr.OutTime<@RevertTime
                  AND rr.CompanyCode = @CompanyCode
					      )
					      UNION ALL
					      -- RMAReturn
					      (
                  select 
									'12' as OrderName, 
									rrni.Targetproductsysno as ProductSysNo, 
									max(ReturnTime) as OrderTime,
									ReturnID as OrderCode,
									rrn.SysNo as OrderSysNo,
									count(*) as OrderQty,
									rrn.StockSysNo,
                  0 as RelatedSysNo,
                  rrn.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMAReturnMaster rrn with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMAReturnTransaction rrni with (nolock)
									on rrn.SysNo = rrni.ReturnSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rrni.RegisterSysNo
									where rrn.Status=1 and rrni.OriginalWarehouse = @WarehouseSysNo and rrni.Targetproductsysno=@ItemSysNo	
                  AND rrn.CompanyCode = @CompanyCode
                  group by rrn.SysNo,rrn.ReturnID,rrn.stocksysno,rrni.Targetproductsysno,rrn.CompanyCode
					       )
				         UNION ALL
                 --RMA IT/RT单
                (
                    select distinct '18' as OrderName, 
                    c.targetproductsysno as ProductSysNo, 
                    max(a.Intime) as OrderTime,
                    cast (a.SysNo as nvarchar) as OrderCode,
                    a.SysNo as OrderSysNo,
                    sum(c.TargetProductQty) as OrderQty,
                    a.StockSysNoA as StockSysNo,
                    0 as RelatedSysNo,
                    d.CompanyCode
                    from rma.dbo.RMA_Stock_Shift a (nolock)
                    inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno
                    inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                    where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                    and a.StockSysNoB = @WarehouseSysNo and c.targetproductsysno=@ItemSysNo	
                    and (d.shippedwarehouse=a.stocksysnoB or (d.shippedwarehouse!=a.stocksysnoB and isnull(d.refundstatus,0)!=2))
                    and d.CompanyCode = @CompanyCode
                    group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode

                    union All
                    select distinct 
                    '18' as OrderName, 
                    c.targetproductsysno as ProductSysNo, 
                    max(a.Intime) as OrderTime,
                    cast (a.SysNo as nvarchar) as OrderCode,
                    a.SysNo as OrderSysNo,
                    sum(c.TargetProductQty) as OrderQty,
                    a.StockSysNoA as StockSysNo,
                    0 as RelatedSysNo,
                    d.CompanyCode
                    from rma.dbo.RMA_Stock_Shift a (nolock)                                    
                    inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno 
                    inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                    where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                    and d.shippedwarehouse =@WarehouseSysNo and c.targetproductsysno=@ItemSysNo	
                    and d.shippedwarehouse!=a.stocksysnoB and d.refundstatus=2
                    and d.CompanyCode = @CompanyCode
                    group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode
                                                    
                    )                             
                   union all
                  --OPC-RMA单，未进行company限定 
                  (
                      select 
								      '19' as OrderName, 
								      b.productsysno as ProductSysNo, 
								      a.CreateTime as OrderTime,
								      cast (a.SysNo as nvarchar) as OrderCode,
								      a.SysNo as OrderSysNo,
								      (-1)*b.ShiftQty as OrderQty,
								      a.StockSysNoA as StockSysNo,
                      0 as RelatedSysNo,
                      null as CompanyCode
								      from rma.dbo.RMA_Stock_Shift a (nolock)
								      inner join rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
								      where a.Status>=2 and a.shifttype=2 and a.StockSysNoA = @WarehouseSysNo and b.ProductSysNo=@ItemSysNo								
                 ) 
                 UNION ALL
					      ---Balance，未进行company限定
					      (    
                  SELECT 
						         '13' AS OrderName,
						         productsysno AS ProductSysNo,
						         createtime AS OrderTime,
						         '' AS OrderCode,
						         '' AS OrderSysNo,
						         quantity AS OrderQty,
						         stocksysno AS StockSysNo,
						         0 AS RelatedSysNo,
                     null as CompanyCode
						       FROM IPP3.dbo.st_balance WITH(NOLOCK) 
						       WHERE stocksysno = @WarehouseSysNo AND productsysno = @ItemSysNo
					        )
                  UNION ALL
                  --RMA 换发单原产品库存加
                 (
                    select '21' as OrderName,
                    a.SourceProductSysNo as ProductSysNo,
                    a.InTime as OrderTime,
                    CAST(a.sysno as nvarchar) as OrderCode,
                    a.SysNo as OrderSysNo,
                    1 as OrderQty,
                    e.StockSysNoB as StockSysNo,
                    0 as RelatedSysNo,
                    null as CompanyCode
                    From IPP3.dbo.RMA_Transmit a with (nolock)
                    inner join RMA.dbo.RMA_ChangeItem_Detail b with (nolock) on b.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_ChangeItem c with (nolock) on c.Sysno=b.RMAChangeItemSysNo
                    inner join RMA.dbo.RMA_Shift_Register d with (nolock) on d.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_Stock_Shift e with (nolock) on e.Sysno=d.RMAShiftSysno
                    where a.Status=3 and c.Status=1 and e.Status=4
                    and (e.shifttype=0 or e.shifttype=1)
                    and e.StockSysNoB=@WarehouseSysNo
                    and a.SourceProductSysNo=@ItemSysNo
                  )
                 UNION ALL
                 --RMA换发单转换产品为正常品时库存减
                 (
                    select '22' as OrderName,
                    a.TransmitProductSysNo as ProductSysNo,
                    a.InTime as OrderTime,
                    CAST(a.sysno as nvarchar) as OrderCode,
                    a.SysNo as OrderSysNo,
                    -1 as OrderQty,
                    e.StockSysNoB as StockSysNo,
                    0 as RelatedSysNo,
                    null as CompanyCode
                    From IPP3.dbo.RMA_Transmit a with (nolock)
                    inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                    inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                    where a.Status=3 and b.TargetProductType=0 and c.Status=1 and e.Status=4 
                    and (e.shifttype=0 or e.shifttype=1)
                    and e.StockSysNoB=@WarehouseSysNo
                    and a.TransmitProductSysNo=@ItemSysNo
                  )
                  UNION ALL
                  --RMA换发单转换产品为二手品时二手品对应的原产品库存减
                  (
                    select '23' as OrderName,
                    g.SysNo as ProductSysNo,
                    a.InTime as OrderTime,
                    CAST(a.sysno as nvarchar) as OrderCode,
                    a.SysNo as OrderSysNo,
                    -1 as OrderQty,
                    e.StockSysNoB as StockSysNo,
                    0 as RelatedSysNo,
                    null as CompanyCode
                     From IPP3.dbo.RMA_Transmit a with (nolock)
                    inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                    inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                    inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                    inner join OverseaContentManagement.dbo.V_IM_Product f with(nolock) on f.SysNo=a.TransmitProductSysNo
                    inner join OverseaContentManagement.dbo.V_IM_Product g with(nolock) on g.ProductID=substring(f.ProductID,1,10)
                    where a.Status=3 and b.TargetProductType=1 and c.Status=1 and e.Status=4 
                    and (e.shifttype=0 or e.shifttype=1)
                    and e.StockSysNoB=@WarehouseSysNo
                    and g.SysNo=@ItemSysNo
                 )                                    
				      )RESULT
        )
        AS a 
        WHERE a.RowNumber > @StartNumber
        ORDER BY  #SortColumnName#
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@WarehouseSysNo"/>
      <param dbType="Int32" name="@ItemSysNo"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="QueryItemsCardReLatedOrderWithOutWarehouseNumber" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
            SELECT 
              @TotalCount = Count(a.OrderCode)
            FROM 
            (
	              --instock '0':PO(Instock) '1':PO-Return(Instock) '2':PO-History-Return(Instock) '3':PO-调价(Instock)
                (
	                select 
									case when potype=0 then '0' when potype=1 then '1' 
                  when potype=2 then '2' 
                  when potype=3 then '3' end as OrderName,
									productsysno as ProductSysNo,  
									intime as OrderTime,
									poid as OrderCode,
									po_master.sysno as OrderSysNo,
									quantity as OrderQty,
									PayStockSysNo StockSysNo,
                  0 as RelatedSysNo,
                  po_master.CompanyCode
									from 
									IPP3.dbo.V_POPayStock po_master with (nolock) 
                  inner join IPP3.dbo.po_item with (nolock)
									on po_master.sysno = IPP3.dbo.po_item.posysno
									where po_master.status in(4,6,7,8) and productsysno=@ItemSysNo
                  and po_master.CompanyCode = @CompanyCode
                )
	              UNION ALL
	                -- lend
	                (
	                  SELECT 
	                    '4' AS OrderName, 
	                    productsysno AS ProductSysNo, 
	                    outtime AS OrderTime,
	                    lendid AS OrderCode,
	                    IPP3.dbo.st_lend.sysno AS OrderSysNo,
	                    lendqty*(-1) AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_lend.CompanyCode
                    FROM IPP3.dbo.st_lend  WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
                    ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
                    WHERE status >= 3   AND productsysno = @ItemSysNo
                    AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
	                )
	                UNION ALL
	                -- lendReturn
	                (
	                  SELECT 
	                    '5' AS OrderName, 
	                    productsysno AS ProductSysNo, 
	                    returntime AS OrderTime,
	                    lendid AS OrderCode,
	                    IPP3.dbo.st_lend.sysno AS OrderSysNo,
	                    returnqty AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_lend.CompanyCode
                    FROM IPP3.dbo.st_lend  WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_lend_return WITH(NOLOCK)
                    ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_return.lendsysno
                    WHERE status >= 4 AND productsysno = @ItemSysNo
                    AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
	                )								
	                UNION ALL
	                -- so
	                (
	                  select 
						        '6' as OrderName,
						        productsysno as ProductSysNo,  
						        outtime as OrderTime,
						        soid as OrderCode,
						        so_master.sysno as OrderSysNo,
						        quantity*(-1) as OrderQty,
						        IPP3.dbo.v_so_item.WarehouseNumber as StockSysNo,
                    0 as RelatedSysNo,
                    so_master.CompanyCode
						        from 
						        v_so_master so_master  with(nolock) 
                    inner join IPP3.dbo.v_so_item  with(nolock) on so_master.sysno = IPP3.dbo.v_so_item.sosysno
                    left join OverseaOrderManagement.dbo.V_OM_SO_CheckShipping so_checkShipping with(nolock)  on so_master.sysno = so_checkShipping.sosysno
						        where status = 4 and productsysno=@ItemSysNo and IPP3.dbo.v_so_item.producttype not in (3,4)
                    and so_master.CompanyCode = @CompanyCode
                    and ISNULL(so_checkShipping.sotype,0)<>10
	                )
	                UNION ALL
	                -- transfer
	                (
	                  SELECT 
	                    '7' AS OrderName,
	                    productsysno AS ProductSysNo, 
	                    outtime AS OrderTime,
	                    transferid AS OrderCode,
	                    IPP3.dbo.st_transfer.sysno AS OrderSysNo,
	                    CASE transfertype WHEN 1 THEN transferqty*(-1) ELSE transferqty END AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_transfer.CompanyCode
                    FROM IPP3.dbo.st_transfer  WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
                    ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
                    WHERE status = 3 AND productsysno = @ItemSysNo
                    AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
	                )
	                UNION ALL
	                -- 移仓单(移出)
	                (
	                  SELECT 
	                    '8' AS OrderName,
	                    productsysno AS ProductSysNo, 
	                    outtime AS OrderTime,
	                    shiftid AS OrderCode,
	                    IPP3.dbo.st_shift.sysno AS OrderSysNo,
	                    CASE shifttype 
	                      WHEN 1 THEN abs(shiftqty)*(-1) 
	                      ELSE shiftqty * (-1) END AS OrderQty,
	                    CASE shifttype
	                      WHEN 1 THEN stocksysnoB
	                      ELSE stocksysnoA END AS StockSysNo,
	                    RelatedShiftSysno AS  RelatedSysNo,
                      IPP3.dbo.st_shift.CompanyCode
                    FROM IPP3.dbo.st_shift WITH(NOLOCK) 
                    INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
                    ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
                    WHERE status >= 3  AND productsysno = @ItemSysNo      
                    AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
	                )
	                UNION ALL
	                -- 移仓单(移入)
	                (
	                  SELECT 
	                    '9' AS OrderName,
	                    productsysno AS ProductSysNo, 
	                    intime AS OrderTime,
	                    shiftid AS OrderCode,
	                    IPP3.dbo.st_shift.sysno AS OrderSysNo,
	                    CASE shifttype
	                      WHEN 1 THEN abs(instockqty)
	                      ELSE instockqty END AS OrderQty,
	                    CASE shifttype
	                      WHEN 1 THEN stocksysnoA
	                      ELSE stocksysnob END AS StockSysNo,
	                    RelatedShiftSysno AS  RelatedSysNo,
                      IPP3.dbo.st_shift.CompanyCode
                    FROM IPP3.dbo.st_shift WITH(NOLOCK) 
                    INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
                    ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
                    WHERE status >= 4 AND productsysno=@ItemSysNo
                    AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
                    --status>=4 means status is one of InStock OR PartlyInStock
	                )    
	                UNION ALL
	                -- adjust
	                (
	                  SELECT 
	                    '10' AS OrderName, 
	                    productsysno AS ProductSysNo, 
	                    outtime AS OrderTime,
	                    adjustid AS OrderCode,
	                    IPP3.dbo.st_adjust.sysno AS OrderSysNo,
	                    adjustqty AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_adjust.CompanyCode
                    FROM IPP3.dbo.st_adjust  WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
                    ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
                    WHERE status=3 AND productsysno = @ItemSysNo
                    AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
                    --status=3 means status=AdjustStatus.OutStock
	                )
	                UNION ALL
	                -- RMAOut
	                (
	                 select 
									'11' as OrderName, 
									rrs.revertproductsysno as ProductSysNo, 
									outtime as OrderTime,
									RevertID as OrderCode,
									rr.SysNo as OrderSysNo,
									'-1' as OrderQty,
									rri.StockSysNo,
                  0 as RelatedSysNo,
                  rr.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMARevertMaster rr with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMARevertTransaction rri with (nolock)
									on rr.SysNo = rri.RevertSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rri.RegisterSysNo
									where 
                  rr.Status=1 
                  and rrs.NewProductStatus<>0 
                  and rrs.revertproductsysno=@ItemSysNo 
                  and rr.OutTime<@RevertTime
                  AND rr.CompanyCode = @CompanyCode
	                )
	                UNION ALL
	                -- RMAReturn
	                (
                  
                  select 
									'12' as OrderName, 
									rrni.Targetproductsysno as ProductSysNo, 
									max(ReturnTime) as OrderTime,
									ReturnID as OrderCode,
									rrn.SysNo as OrderSysNo,
									count(*) as OrderQty,
									rrn.StockSysNo,
                  0 as RelatedSysNo,
                  rrn.CompanyCode
									from 
									OverseaServiceManagement.dbo.V_SM_RMAReturnMaster rrn with (nolock) 
                  inner join OverseaServiceManagement.dbo.V_SM_RMAReturnTransaction rrni  with (nolock)
									on rrn.SysNo = rrni.ReturnSysNo
                  inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                  on rrs.SysNo = rrni.RegisterSysNo
									where rrn.Status=1 and rrni.Targetproductsysno=@ItemSysNo	
                  AND rrn.CompanyCode = @CompanyCode
                  group by rrn.SysNo,rrn.ReturnID,rrn.stocksysno,rrni.Targetproductsysno,rrn.CompanyCode		
	                )
	                UNION ALL
                  --RMA IT/RT单
                  (
                      select distinct '18' as OrderName, 
                      c.targetproductsysno as ProductSysNo, 
                      max(a.Intime) as OrderTime,
                      cast (a.SysNo as nvarchar) as OrderCode,
                      a.SysNo as OrderSysNo,
                      sum(c.TargetProductQty) as OrderQty,
                      a.StockSysNoA as StockSysNo,
                      0 as RelatedSysNo,
                      d.CompanyCode
                      from rma.dbo.RMA_Stock_Shift a (nolock)
                      inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno
                      inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                      where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                      and c.targetproductsysno=@ItemSysNo	
                      and (d.shippedwarehouse=a.stocksysnoB or (d.shippedwarehouse!=a.stocksysnoB and isnull(d.refundstatus,0)!=2))
                      and d.CompanyCode = @CompanyCode
                      group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode

                      union All
                      select distinct 
                      '18' as OrderName, 
                      c.targetproductsysno as ProductSysNo, 
                      max(a.Intime) as OrderTime,
                      cast (a.SysNo as nvarchar) as OrderCode,
                      a.SysNo as OrderSysNo,
                      sum(c.TargetProductQty) as OrderQty,
                      a.StockSysNoA as StockSysNo,
                      0 as RelatedSysNo,
                      d.CompanyCode
                      from rma.dbo.RMA_Stock_Shift a (nolock)                                    
                      inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno 
                      inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                      where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                      and c.targetproductsysno=@ItemSysNo	
                      and d.shippedwarehouse!=a.stocksysnoB and d.refundstatus=2
                      and d.CompanyCode = @CompanyCode
                      group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode      
                                                      
                      )                             
                     union all
                    --OPC-RMA单 ，未进行company限定 
                    (
                        select 
								        '19' as OrderName, 
								        b.productsysno as ProductSysNo, 
								        a.CreateTime as OrderTime,
								        cast (a.SysNo as nvarchar) as OrderCode,
								        a.SysNo as OrderSysNo,
								        (-1)*b.ShiftQty as OrderQty,
								        a.StockSysNoA as StockSysNo,
                        0 as RelatedSysNo,
                        null as CompanyCode
								        from rma.dbo.RMA_Stock_Shift a (nolock)
								        inner join rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
								        where a.Status>=2 and a.shifttype=2 and  b.ProductSysNo=@ItemSysNo								
                   ) 
                   UNION ALL
	                ---Balance ，未进行company限定
	                (    
                      SELECT 
	                    '13' AS OrderName,
	                    productsysno AS ProductSysNo,
	                    createtime AS OrderTime,
	                    '' AS OrderCode,
	                    '' AS OrderSysNo,
	                    quantity AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      null as CompanyCode
	                    FROM IPP3.dbo.st_balance WITH(NOLOCK) 
	                    WHERE productsysno = @ItemSysNo
	                )
                   UNION ALL
                    --RMA 换发单原产品库存加
                   (
                      select '21' as OrderName,
                      a.SourceProductSysNo as ProductSysNo,
                      a.InTime as OrderTime,
                      CAST(a.sysno as nvarchar) as OrderCode,
                      a.SysNo as OrderSysNo,
                      1 as OrderQty,
                      e.StockSysNoB as StockSysNo,
                      0 as RelatedSysNo,
                      null as CompanyCode
                      From IPP3.dbo.RMA_Transmit a with (nolock)
                      inner join RMA.dbo.RMA_ChangeItem_Detail b with (nolock) on b.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_ChangeItem c with (nolock) on c.Sysno=b.RMAChangeItemSysNo
                      inner join RMA.dbo.RMA_Shift_Register d with (nolock) on d.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_Stock_Shift e with (nolock) on e.Sysno=d.RMAShiftSysno
                      where a.Status=3 and c.Status=1 and e.Status=4
                      and (e.shifttype=0 or e.shifttype=1)                   
                      and a.SourceProductSysNo=@ItemSysNo
                    )
                   UNION ALL
                   --RMA换发单转换产品为正常品时库存减
                   (
                      select '22' as OrderName,
                      a.TransmitProductSysNo as ProductSysNo,
                      a.InTime as OrderTime,
                      CAST(a.sysno as nvarchar) as OrderCode,
                      a.SysNo as OrderSysNo,
                      -1 as OrderQty,
                      e.StockSysNoB as StockSysNo,
                      0 as RelatedSysNo,
                      null as CompanyCode
                      From IPP3.dbo.RMA_Transmit a with (nolock)
                      inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                      inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                      where a.Status=3 and b.TargetProductType=0 and c.Status=1 and e.Status=4 
                      and (e.shifttype=0 or e.shifttype=1)                  
                      and a.TransmitProductSysNo=@ItemSysNo
                    )
                    UNION ALL
                    --RMA换发单转换产品为二手品时二手品对应的原产品库存减
                    (
                      select '23' as OrderName,
                      g.SysNo as ProductSysNo,
                      a.InTime as OrderTime,
                      CAST(a.sysno as nvarchar) as OrderCode,
                      a.SysNo as OrderSysNo,
                      -1 as OrderQty,
                      e.StockSysNoB as StockSysNo,
                      0 as RelatedSysNo,
                      null as CompanyCode
                       From IPP3.dbo.RMA_Transmit a with (nolock)
                      inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                      inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                      inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                      inner join OverseaContentManagement.dbo.V_IM_Product f with(nolock) on f.SysNo=a.TransmitProductSysNo
                      inner join OverseaContentManagement.dbo.V_IM_Product g with(nolock) on g.ProductID=substring(f.ProductID,1,10)
                      where a.Status=3 and b.TargetProductType=1 and c.Status=1 and e.Status=4 
                      and (e.shifttype=0 or e.shifttype=1)                    
                      and g.SysNo=@ItemSysNo
                   )
              )AS a 

            SELECT 
              a.OrderName,
              '' AS OrderNameString,
              a.ProductSysNo,
              a.OrderTime,
              a.OrderCode,
              a.StockSysNo,
              a.RelatedSysNo,
              a.OrderQty,
              a.OrderSysNo,
              a.CompanyCode
            FROM 
            (
	            SELECT  
                OrderName,
                ProductSysNo,
                OrderTime,
                OrderCode,
                StockSysNo,
                RelatedSysNo,
                OrderQty,
                OrderSysNo,
                CompanyCode,
                (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
	            FROM
	            (
		            --instock '0':PO(Instock) '1':PO-Return(Instock) '2':PO-History-Return(Instock) '3':PO-调价(Instock)
		            (
		              SELECT 
							( CASE 
								WHEN porcv.purno IS NULL THEN cast(potype as varchar) 
								ELSE cast(potype as varchar) +'_' 
							END) AS OrderName 
						   ,productsysno AS ProductSysNo 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN intime 
								ELSE porcv.ReceivedDate 
							END) AS OrderTime 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN poid 
								ELSE cast(poid as varchar)+'_' +cast(porcv.batchnumber as varchar)
							END) AS OrderCode 
						   ,po_master.sysno AS OrderSysNo 
						   ,(CASE 
								WHEN porcv.purno IS NULL THEN quantity 
								ELSE porcv.ReceivedQuantity 
							END) AS OrderQty 
						   ,PayStockSysNo StockSysNo 
						   ,0 AS RelatedSysNo 
						   ,po_master.CompanyCode 
						FROM IPP3.dbo.V_POPayStock po_master WITH (NOLOCK) 
						INNER JOIN IPP3.dbo.po_item WITH (NOLOCK) 
							ON po_master.sysno = IPP3.dbo.po_item.posysno 
						LEFT JOIN Scm.dbo.POReceivedDetail porcv WITH (NOLOCK) 
							ON po_master.sysno=porcv.Purno 
							AND porcv.item=( 
							SELECT 
								productid 
							FROM OverseaContentManagement.dbo.V_CM_ItemBasicInfo WITH(NOLOCK) 
							WHERE 
								sysno=po_item.productsysno 
						 ) 
						 where po_master.status in(4,6,7,8)
						 and productsysno=@ItemSysNo
						 and po_master.CompanyCode = @CompanyCode
                  )
                  UNION ALL
                  -- lend
                  (
		                SELECT 
	                    '4' AS OrderName, 
	                    productsysno AS ProductSysNo, 
	                    outtime AS OrderTime,
	                    lendid AS OrderCode,
	                    IPP3.dbo.st_lend.sysno AS OrderSysNo,
	                    lendqty*(-1) AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_lend.CompanyCode
                    FROM IPP3.dbo.st_lend WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_lend_item WITH(NOLOCK)
                    ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_item.lendsysno
                    WHERE status >= 3   AND productsysno = @ItemSysNo
                    AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
                  )
                  UNION ALL
                  -- lendReturn
                  (
		                SELECT 
	                    '5' AS OrderName, 
	                    productsysno AS ProductSysNo, 
	                    returntime AS OrderTime,
	                    lendid AS OrderCode,
	                    IPP3.dbo.st_lend.sysno AS OrderSysNo,
	                    returnqty AS OrderQty,
	                    stocksysno AS StockSysNo,
	                    0 AS RelatedSysNo,
                      IPP3.dbo.st_lend.CompanyCode
                    FROM IPP3.dbo.st_lend WITH(NOLOCK)
                    INNER JOIN IPP3.dbo.st_lend_return WITH(NOLOCK)
                    ON IPP3.dbo.st_lend.sysno = IPP3.dbo.st_lend_return.lendsysno
                    WHERE status >= 4 AND productsysno=@ItemSysNo
                    AND IPP3.dbo.st_lend.CompanyCode = @CompanyCode
                    )								
                    UNION ALL
                    -- so
                    (
		                  select 
						          '6' as OrderName,
						          productsysno as ProductSysNo,  
						          outtime as OrderTime,
						          soid as OrderCode,
						          so_master.sysno as OrderSysNo,
						          quantity*(-1) as OrderQty,
						          IPP3.dbo.v_so_item.WarehouseNumber as StockSysNo,
                      0 as RelatedSysNo,
                      so_master.CompanyCode
						          from 
						          IPP3.dbo.v_so_master so_master  with(nolock) 
                      inner join IPP3.dbo.v_so_item  with(nolock) on so_master.sysno = IPP3.dbo.v_so_item.sosysno
                      left join OverseaOrderManagement.dbo.V_OM_SO_CheckShipping so_checkShipping with(nolock)  on so_master.sysno = so_checkShipping.sosysno
						          where status = 4 and productsysno=@ItemSysNo and IPP3.dbo.v_so_item.producttype not in (3,4)
                      and so_master.CompanyCode = @CompanyCode
                      and  ISNULL(so_checkShipping.sotype,0)<>10
	                    )
	                    UNION ALL
	                    -- transfer
	                    (
		                    SELECT 
		                      '7' AS OrderName,
		                      productsysno AS ProductSysNo, 
		                      outtime AS OrderTime,
		                      transferid AS OrderCode,
		                      IPP3.dbo.st_transfer.sysno AS OrderSysNo,
		                      CASE transfertype WHEN 1 THEN transferqty*(-1) ELSE transferqty END AS OrderQty,
		                      stocksysno AS StockSysNo,
		                      0 AS RelatedSysNo,
                          IPP3.dbo.st_transfer.CompanyCode
		                    FROM IPP3.dbo.st_transfer WITH(NOLOCK)
		                    INNER JOIN IPP3.dbo.st_transfer_item WITH(NOLOCK)
		                    ON IPP3.dbo.st_transfer.sysno = IPP3.dbo.st_transfer_item.transfersysno
		                    WHERE status = 3 AND productsysno = @ItemSysNo
                        AND IPP3.dbo.st_transfer.CompanyCode = @CompanyCode
		                    )
		                    UNION ALL
		                    -- 移仓单(移出)
		                    (
		                      SELECT 
		                        '8' AS OrderName,
		                        productsysno AS ProductSysNo, 
		                        outtime AS OrderTime,
		                        shiftid AS OrderCode,
		                        IPP3.dbo.st_shift.sysno AS OrderSysNo,
		                        CASE shifttype 
		                          WHEN 1 THEN abs(shiftqty)*(-1) 
		                          ELSE shiftqty * (-1) END AS OrderQty,
		                        CASE shifttype
		                          WHEN 1 THEN stocksysnoB
		                          ELSE stocksysnoA END AS StockSysNo,
		                        RelatedShiftSysno AS  RelatedSysNo,
                            IPP3.dbo.st_shift.CompanyCode
		                      FROM IPP3.dbo.st_shift WITH(NOLOCK) 
		                      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		                      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
		                      WHERE status >= 3  AND productsysno = @ItemSysNo     
                          AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
		                    )
		                    UNION ALL
		                    -- 移仓单(移入)
		                    (
		                      SELECT 
		                        '9' AS OrderName,
		                        productsysno AS ProductSysNo, 
		                        intime AS OrderTime,
		                        shiftid AS OrderCode,
		                        IPP3.dbo.st_shift.sysno AS OrderSysNo,
		                        CASE shifttype
		                          WHEN 1 THEN abs(instockqty)
		                          ELSE instockqty END AS OrderQty,
		                        CASE shifttype
		                          WHEN 1 THEN stocksysnoA
		                          ELSE stocksysnob END AS StockSysNo,
		                        RelatedShiftSysno AS  RelatedSysNo,
                            IPP3.dbo.st_shift.CompanyCode
		                      FROM IPP3.dbo.st_shift WITH(NOLOCK) 
		                      INNER JOIN IPP3.dbo.st_shift_item WITH(NOLOCK)
		                      ON IPP3.dbo.st_shift.sysno = IPP3.dbo.st_shift_item.shiftsysno
		                      WHERE status >= 4 AND productsysno = @ItemSysNo
                          AND IPP3.dbo.st_shift.CompanyCode = @CompanyCode
		                    )    
		                    UNION ALL
		                    -- adjust
		                    (
		                      SELECT 
		                        '10' AS OrderName, 
		                        productsysno AS ProductSysNo, 
		                        outtime AS OrderTime,
		                        adjustid AS OrderCode,
		                        IPP3.dbo.st_adjust.sysno AS OrderSysNo,
		                        adjustqty AS OrderQty,
		                        stocksysno AS StockSysNo,
		                        0 AS RelatedSysNo,
                            IPP3.dbo.st_adjust.CompanyCode
		                      FROM IPP3.dbo.st_adjust  WITH(NOLOCK)
		                      INNER JOIN IPP3.dbo.st_adjust_item WITH(NOLOCK)
		                      ON IPP3.dbo.st_adjust.sysno = IPP3.dbo.st_adjust_item.adjustsysno
		                      WHERE status = 3 AND productsysno = @ItemSysNo
                          AND IPP3.dbo.st_adjust.CompanyCode = @CompanyCode
		                    )
		                    UNION ALL
		                    -- RMAOut
		                    (
                        select 
									        '11' as OrderName, 
									        rrs.revertproductsysno as ProductSysNo, 
									        outtime as OrderTime,
									        RevertID as OrderCode,
									        rr.SysNo as OrderSysNo,
									        '-1' as OrderQty,
									        rri.StockSysNo,
                          0 as RelatedSysNo,
                          rr.CompanyCode
									        from 
									        OverseaServiceManagement.dbo.V_SM_RMARevertMaster rr with (nolock) 
                          inner join OverseaServiceManagement.dbo.V_SM_RMARevertTransaction rri with (nolock)
									        on rr.SysNo = rri.RevertSysNo
                          inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                          on rrs.SysNo = rri.RegisterSysNo
									        where rr.Status=1 
                          and rrs.NewProductStatus<>0 
                          and rrs.revertproductsysno=@ItemSysNo 
                          and rr.OutTime<@RevertTime
                          AND rr.CompanyCode = @CompanyCode
		                    )
		                    UNION ALL
		                    -- RMAReturn
		                    (
                         select 
									        '12' as OrderName, 
									        rrni.Targetproductsysno as ProductSysNo, 
									        max(ReturnTime) as OrderTime,
									        ReturnID as OrderCode,
									        rrn.SysNo as OrderSysNo,
									        count(*) as OrderQty,
									        rrn.StockSysNo,
                          0 as RelatedSysNo,
                          rrn.CompanyCode
									        from 
									        OverseaServiceManagement.dbo.V_SM_RMAReturnMaster rrn with (nolock) 
                          inner join OverseaServiceManagement.dbo.V_SM_RMAReturnTransaction rrni with (nolock)
									        on rrn.SysNo = rrni.ReturnSysNo
                          inner join OverseaServiceManagement.dbo.V_SM_RMARegister rrs with (nolock)
                          on rrs.SysNo = rrni.RegisterSysNo
									        where rrn.Status=1 and rrni.Targetproductsysno=@ItemSysNo	
                          AND rrn.CompanyCode = @CompanyCode
                          group by rrn.SysNo,rrn.ReturnID,rrn.stocksysno,rrni.Targetproductsysno,rrn.CompanyCode				
		                    )
		                    UNION ALL
                        --RMA IT/RT单
                        (
                            select distinct '18' as OrderName, 
                            c.targetproductsysno as ProductSysNo, 
                            max(a.Intime) as OrderTime,
                            cast (a.SysNo as nvarchar) as OrderCode,
                            a.SysNo as OrderSysNo,
                            sum(c.TargetProductQty) as OrderQty,
                            a.StockSysNoA as StockSysNo,
                            0 as RelatedSysNo,
                            d.CompanyCode
                            from rma.dbo.RMA_Stock_Shift a (nolock)
                            inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno
                            inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                            where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                            and c.targetproductsysno=@ItemSysNo	
                            and (d.shippedwarehouse=a.stocksysnoB or (d.shippedwarehouse!=a.stocksysnoB and isnull(d.refundstatus,0)!=2))
                            and d.CompanyCode = @CompanyCode
                            group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode

                            union All
                            select distinct 
                            '18' as OrderName, 
                            c.targetproductsysno as ProductSysNo, 
                            max(a.Intime) as OrderTime,
                            cast (a.SysNo as nvarchar) as OrderCode,
                            a.SysNo as OrderSysNo,
                            sum(c.TargetProductQty) as OrderQty,
                            a.StockSysNoA as StockSysNo,
                            0 as RelatedSysNo,
                            d.CompanyCode
                            from rma.dbo.RMA_Stock_Shift a (nolock)                                    
                            inner join rma.dbo.RMA_Shift_Register c (nolock) on c.rmashiftsysno=a.sysno 
                            inner join OverseaServiceManagement.dbo.V_SM_RMARegister d (nolock) on d.sysno=c.registersysno
                            where a.Status=4 and (a.shifttype=0 or a.shifttype=1) 
                            and c.targetproductsysno=@ItemSysNo	
                            and d.shippedwarehouse!=a.stocksysnoB and d.refundstatus=2
                            and d.CompanyCode = @CompanyCode
                            group by a.sysno,a.StockSysNoA,c.targetproductsysno,d.CompanyCode     
                                                            
                            )                             
                           union all
                          --OPC-RMA单 ，未进行company限定
                          (
                              select 
								              '19' as OrderName, 
								              b.productsysno as ProductSysNo, 
								              a.CreateTime as OrderTime,
								              cast (a.SysNo as nvarchar) as OrderCode,
								              a.SysNo as OrderSysNo,
								              (-1)*b.ShiftQty as OrderQty,
								              a.StockSysNoA as StockSysNo,
                              0 as RelatedSysNo,
                              null as CompanyCode
								              from rma.dbo.RMA_Stock_Shift a (nolock)
								              inner join rma.dbo.RMA_Stock_Shift_Item b (nolock) on b.shiftsysno=a.sysno	
								              where a.Status>=2 and a.shifttype=2 and  b.ProductSysNo=@ItemSysNo								
                         ) 
                         UNION ALL
		                    ---Balance ，未进行company限定
		                    (    
		                      SELECT 
		                        '13' AS OrderName,
		                        productsysno AS ProductSysNo,
		                        createtime AS OrderTime,
		                        '' AS OrderCode,
		                        '' AS OrderSysNo,
		                        quantity AS OrderQty,
		                        stocksysno AS StockSysNo,
		                        0 AS RelatedSysNo,
                            null as CompanyCode
		                      FROM IPP3.dbo.st_balance WITH(NOLOCK) 
		                      WHERE productsysno = @ItemSysNo
		                    )
                        UNION ALL
                        --RMA 换发单原产品库存加
                       (
                          select '21' as OrderName,
                          a.SourceProductSysNo as ProductSysNo,
                          a.InTime as OrderTime,
                          CAST(a.sysno as nvarchar) as OrderCode,
                          a.SysNo as OrderSysNo,
                          1 as OrderQty,
                          e.StockSysNoB as StockSysNo,
                          0 as RelatedSysNo,
                          null as CompanyCode
                          From IPP3.dbo.RMA_Transmit a with (nolock)
                          inner join RMA.dbo.RMA_ChangeItem_Detail b with (nolock) on b.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_ChangeItem c with (nolock) on c.Sysno=b.RMAChangeItemSysNo
                          inner join RMA.dbo.RMA_Shift_Register d with (nolock) on d.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_Stock_Shift e with (nolock) on e.Sysno=d.RMAShiftSysno
                          where a.Status=3 and c.Status=1 and e.Status=4
                          and (e.shifttype=0 or e.shifttype=1)                   
                          and a.SourceProductSysNo=@ItemSysNo
                        )
                       UNION ALL
                       --RMA换发单转换产品为正常品时库存减
                       (
                          select '22' as OrderName,
                          a.TransmitProductSysNo as ProductSysNo,
                          a.InTime as OrderTime,
                          CAST(a.sysno as nvarchar) as OrderCode,
                          a.SysNo as OrderSysNo,
                          -1 as OrderQty,
                          e.StockSysNoB as StockSysNo,
                          0 as RelatedSysNo,
                          null as CompanyCode
                          From IPP3.dbo.RMA_Transmit a with (nolock)
                          inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                          inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                          where a.Status=3 and b.TargetProductType=0 and c.Status=1 and e.Status=4 
                          and (e.shifttype=0 or e.shifttype=1)                  
                          and a.TransmitProductSysNo=@ItemSysNo
                        )
                        UNION ALL
                        --RMA换发单转换产品为二手品时二手品对应的原产品库存减
                        (
                          select '23' as OrderName,
                          g.SysNo as ProductSysNo,
                          a.InTime as OrderTime,
                          CAST(a.sysno as nvarchar) as OrderCode,
                          a.SysNo as OrderSysNo,
                          -1 as OrderQty,
                          e.StockSysNoB as StockSysNo,
                          0 as RelatedSysNo,
                          null as CompanyCode
                           From IPP3.dbo.RMA_Transmit a with (nolock)
                          inner join RMA.dbo.RMA_ChangeItem_Detail b with(nolock) on b.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_ChangeItem c with(nolock) on c.Sysno=b.RMAChangeItemSysNo
                          inner join RMA.dbo.RMA_Shift_Register d with(nolock) on d.RegisterSysNo=a.RegisterSysNo
                          inner join RMA.dbo.RMA_Stock_Shift e with(nolock) on e.Sysno=d.RMAShiftSysno
                          inner join OverseaContentManagement.dbo.V_IM_Product f with(nolock) on f.SysNo=a.TransmitProductSysNo
                          inner join OverseaContentManagement.dbo.V_IM_Product g with(nolock) on g.ProductID=substring(f.ProductID,1,10)
                          where a.Status=3 and b.TargetProductType=1 and c.Status=1 and e.Status=4 
                          and (e.shifttype=0 or e.shifttype=1)                    
                          and g.SysNo=@ItemSysNo
                       )
	                )RESULT
            )AS a 
            WHERE a.RowNumber > @StartNumber
            ORDER BY  #SortColumnName#
      ]]>
    </commandText>
    <parameters>
      <param dbType="Int32" name="@ItemSysNo"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

</dataOperations>