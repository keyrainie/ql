<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <!--Query BEGIN-->
  
  <dataCommand name="Inventory_QueryConvertRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT @TotalCount=COUNT(a.SysNo)
        FROM  IPP3.dbo.St_Transfer a WITH(NOLOCK) 
          INNER JOIN IPP3.dbo.Stock s WITH(NOLOCK)
          ON a.StockSysNo = s.SysNo          
        #StrWhere#
        
          SELECT
            SysNo,
            RequestID,
            Stock_SysNo,
            StockName,
            CreateDate,
            CreateUserName,
            AuditDate,
            AuditUserName,
            OutStockDate,
            OutStockUserName,
            RequestStatus,
            Note,
            CompanyCode,
            LanguageCode
          FROM  
          (  
            SELECT 
              TOP (@EndNumber) 
	            a.SysNo,
	            a.TransferID AS RequestID,
	            a.StockSysNo AS Stock_SysNo,
              s.StockName,
	            a.CreateTime AS CreateDate,
	            cu.DisplayName AS CreateUserName,
	            a.AuditTime AS AuditDate,
	            au.DisplayName AS AuditUserName,
	            a.OutTime AS OutStockDate,
	            ou.DisplayName AS OutStockUserName,
	            a.Status AS RequestStatus,
	            a.Note,
              a.CompanyCode,
              a.LanguageCode,
              (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 

            FROM IPP3.dbo.St_Transfer a WITH(NOLOCK)
              INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo cu WITH(NOLOCK)
                ON a.CreateUserSysNo = cu.UserSysNo
              INNER JOIN IPP3.dbo.Stock s WITH(NOLOCK)
                ON a.StockSysNo = s.SysNo
              LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo au WITH(NOLOCK)
                ON a.AuditUserSysNo = au.UserSysNo
              LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo ou WITH(NOLOCK)
                ON a.OutUserSysNo = ou.UserSysNo
            #StrWhere#
          ) Result 
          WHERE RowNumber > @StartNumber
       ]]>
    </commandText>
  </dataCommand>  
  
  <!--Query End-->
  
  <!--Maintain BEGIN-->
  
  <dataCommand name="Inventory_CreateConvertRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        INSERT INTO [IPP3].[dbo].[St_Transfer]
          (
            [SysNo]
            ,[TransferID]
            ,[StockSysNo]
            ,[CreateTime]
            ,[CreateUserSysNo]
            ,[Status]
            ,[Note]
            ,[CompanyCode]
            ,[ProductLineSysno]
          )
        VALUES
          (
            @RequestSysNo
            ,@RequestID
            ,@StockSysNo
            ,@CreateDate
            ,@CreateUserSysNo
            ,@RequestStatus
            ,@Note
            ,@CompanyCode
            ,@ProductLineSysno
          )
        
        SELECT
              SysNo AS SysNo
              ,TransferID AS RequestID
              ,StockSysNo AS [Stock.SysNo]
              ,CreateTime AS CreateDate
              ,CreateUserSysNo AS [CreateUser.SysNo]
              ,AuditTime AS AuditDate
              ,AuditUserSysNo AS [AuditUser.SysNo]
              ,OutTime AS OutStockDate
              ,OutUserSysNo AS [OutStockUser.SysNo]
              ,Status AS RequestStatus
              ,Note
              ,CompanyCode
              ,ProductLineSysno
        FROM
              [IPP3].[dbo].[St_Transfer] WITH(NOLOCK)
        WHERE
              SysNo=@RequestSysNo
     ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
      <param name="@RequestID" dbType="String" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@CreateDate" dbType="DateTime" />
      <param name="@CreateUserSysNo" dbType="Int32" />
      <param name="@RequestStatus" dbType="Int32" />
      <param name="@Note" dbType="String" />
      <param name="@ProductLineSysno" dbType="String" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateConvertRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE [IPP3].[dbo].[St_Transfer] 
        SET Note = @Note,ProductLineSysno=@ProductLineSysno
        WHERE SysNo = @RequestSysNo   
            
        SELECT SysNo AS SysNo
              ,TransferID AS RequestID
              ,StockSysNo AS [Stock.SysNo]
              ,CreateTime AS CreateDate
              ,CreateUserSysNo AS [CreateUser.SysNo]
              ,AuditTime AS AuditDate
              ,AuditUserSysNo AS [AuditUser.SysNo]
              ,OutTime AS OutStockDate
              ,OutUserSysNo AS [OutStockUser.SysNo]
              ,Status AS RequestStatus
              ,Note
              ,CompanyCode
              ,ProductLineSysno
        FROM [IPP3].[dbo].[St_Transfer] WITH(NOLOCK)
        WHERE SysNo=@RequestSysNo
     ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
      <param name="@Note" dbType="String" />
      <param name="@ProductLineSysno" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateConvertRequestStatus" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE [IPP3].[dbo].[St_Transfer] 
        SET Status = @RequestStatus,
          AuditTime = @AuditDate,
          AuditUserSysNo = @AuditUserSysNo,
          OutTime = @OutStockDate,
          OutUserSysNo = @OutStockUserSysNo
        WHERE SysNo = @RequestSysNo
        
       SELECT
              SysNo AS SysNo
              ,TransferID AS RequestID
              ,StockSysNo AS [Stock.SysNo]
              ,CreateTime AS CreateDate
              ,CreateUserSysNo AS [CreateUser.SysNo]
              ,AuditTime AS AuditDate
              ,AuditUserSysNo AS [AuditUser.SysNo]
              ,OutTime AS OutStockDate
              ,OutUserSysNo AS [OutStockUser.SysNo]
              ,Status AS RequestStatus
              ,Note
              ,CompanyCode
        FROM
              [IPP3].[dbo].[St_Transfer] WITH(NOLOCK)
        WHERE
              SysNo=@RequestSysNo
     ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
      <param name="@RequestStatus" dbType="Int32"/>
      <param name="@AuditDate" dbType="DateTime" />
      <param name="@AuditUserSysNo" dbType="Int32" />
      <param name="@OutStockDate" dbType="DateTime" />
      <param name="@OutStockUserSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
  
  <dataCommand name="Inventory_GetConvertRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
         SELECT 
               st.SysNo AS SysNo 
              ,st.TransferID AS RequestID 
              ,st.StockSysNo AS [Stock.SysNo] 
	            ,sk.StockName  AS [Stock.StockName]
              ,st.CreateTime AS CreateDate 
              ,st.CreateUserSysNo AS [CreateUser.SysNo] 
              ,st.AuditTime AS AuditDate 
              ,st.AuditUserSysNo AS [AuditUser.SysNo] 
              ,st.OutTime AS OutStockDate 
              ,st.OutUserSysNo AS [OutStockUser.SysNo] 
              ,st.Status AS RequestStatus 
              ,st.Note 
              ,st.CompanyCode 
          FROM [IPP3].[dbo].[St_Transfer] st WITH(NOLOCK) 
          INNER JOIN IPP3.dbo.Stock sk WITH(NOLOCK) 
              ON sk.SysNo = st.StockSysNo 
          WHERE 
              st.SysNo=@RequestSysNo
     ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetConvertRequestSequence" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        INSERT INTO IPP3.dbo.St_Transfer_Sequence (CreateTime) Values (getdate())
        
        SELECT SCOPE_IDENTITY() AS SysNo
        ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="Inventory_CreateConvertItem" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        INSERT INTO [IPP3].[dbo].[St_Transfer_Item]
          (
            [TransferSysNo]
            ,[ProductSysNo]
            ,[TransferQty]
            ,[TransferCost]
            ,[UnitCostWithoutTax]
            ,[TransferType]
            ,[CompanyCode]
          )
        VALUES
          (
            @RequestSysNo
            ,@ProductSysNo
            ,@ConvertQuantity
            ,@ConvertUnitCost
            ,@ConvertUnitCostWithoutTax
            ,@ConvertType
            ,'8601'/*[Mark][Alan.X.Luo 硬编码]*/
          )
        
        SELECT
              SysNo
              ,TransferSysNo AS RequestSysNo
              ,ProductSysNo AS [ConvertProduct.SysNo]
              ,TransferQty AS ConvertQuantity
              ,TransferCost AS ConvertUnitCost
              ,UnitCostWithoutTax AS ConvertUnitCostWithoutTax
              ,TransferType AS ConvertType
        FROM
              [IPP3].[dbo].[St_Transfer_Item] WITH(NOLOCK)
        WHERE
              SysNo=SCOPE_IDENTITY()
     ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@ConvertQuantity" dbType="Int32" />
      <param name="@ConvertUnitCost" dbType="Decimal" />
      <param name="@ConvertUnitCostWithoutTax" dbType="Decimal" />
      <param name="@ConvertType" dbType="Int32" />      
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetConvertItemListByRequestSysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[  
          SELECT SysNo
              ,TransferSysNo AS RequestSysNo
              ,ProductSysNo AS [ConvertProduct.SysNo]
              ,TransferQty AS ConvertQuantity
              ,TransferCost AS ConvertUnitCost
              ,UnitCostWithoutTax AS ConvertUnitCostWithoutTax
              ,TransferType AS ConvertType
          FROM  [IPP3].[dbo].[St_Transfer_Item] WITH(NOLOCK)
          WHERE TransferSysNo =@RequestSysNo
       ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
  

  <dataCommand name="Inventory_DeleteConvertItemByRequestSysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        DELETE FROM [IPP3].[dbo].[St_Transfer_Item] 
        WHERE TransferSysNo = @RequestSysNo
     ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>
  
  <!--Maintain END-->

  <!--Batch BEGIN-->
  <dataCommand name="Inventory_UpdateBatchModelListConvertQuantityOfSTB" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
	      DECLARE @Flag INT      
        SELECT  @Flag=COUNT(*) FROM OverseaInventoryManagement.dbo.St_Batch STB  WITH(NOLOCK)
        WHERE   STB.BatchNumber=@BatchNumber AND STB.ProductSysNo=@ProductSysNo AND STB.StockSysNo=@StockSysNo AND STB.Number=@Number;
        IF(@Flag>0)
        BEGIN 
            UPDATE OverseaInventoryManagement.dbo.St_Batch 
            SET   Quantity=@Quantity,EditUser=@InUser,EditDate=getDate() 
            WHERE BatchNumber=@BatchNumber AND ProductSysNo=@ProductSysNo AND StockSysNo=@StockSysNo AND Number=@Number;
            
            DELETE FROM OverseaInventoryManagement.dbo.St_Batch
            WHERE Number=@Number AND Type<>'TR' AND (BatchNumber<>@BatchNumber AND ProductSysNo<>@ProductSysNo);
               
            UPDATE  OverseaInventoryManagement.dbo.Product_Batch_Stock 
            SET AllocatedQty =AllocatedQty+@Quantity,EditUser=@InUser,EditDate=getDate() 
            WHERE BatchNumber=@BatchNumber AND ProductSysNo=@ProductSysNo AND StockSysNo=@StockSysNo;
        END
        ELSE
        BEGIN
	        INSERT INTO OverseaInventoryManagement.dbo.St_Batch
	        (
	           Number
	          ,Type
	          ,BatchNumber
	          ,ProductSysNo
	          ,Quantity
	          ,ReturnQty
	          ,InUser
	          ,InDate
	          ,EditUser
	          ,EditDate
            ,StockSysNo
	        )
	        VALUES
	        (
	         @Number
	        ,'TR'
	        ,@BatchNumber
	        ,@ProductSysNo
	        ,@Quantity
	        ,0
	        ,@InUser
	        ,getDate()
	        ,@InUser
	        ,getDate()
          ,@StockSysNo
	        );
          
          UPDATE  OverseaInventoryManagement.dbo.Product_Batch_Stock 
          SET AllocatedQty =AllocatedQty+@Quantity,EditUser=@InUser,EditDate=getDate() 
          WHERE BatchNumber=@BatchNumber AND ProductSysNo=@ProductSysNo AND StockSysNo=@StockSysNo;
        END
        
        
        INSERT INTO OverseaInventoryManagement.dbo.Product_Batch_Log
	      (
	       Number
	      ,Type
        ,MessageBody	
	      ,Memo
	      ,InUser
	      ,InDate
	      ,EditUser
	      ,EditDate
	      )
	      VALUES
	      (
	        @Number
	      ,'TR'
	      ,Convert(XML,'<BatchNumber>'+@BatchNumber+'</BatchNumber><ProductSysNo>'+Convert(Varchar(50),@ProductSysNo)+'</ProductSysNo><StockSysNo>'+Convert(Varchar(10),@StockSysNo) +'</StockSysNo><Quantity>'+Convert(Varchar(10),@Quantity)+'</Quantity>')	  
	      ,'转换单单创建更新'
	      ,@InUser
	      ,getDate()
	      ,@InUser
	      ,getDate()
	      )                
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@BatchNumber" dbType="AnsiStringFixedLength" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@InUser" dbType="AnsiStringFixedLength" />
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_QuerySourceBatchDetailInfoByDocumentNumber" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[	         	    
        SELECT 
              A.ProductSysNo
            ,p.ProductID
            ,A.BatchNumber
            ,A.LotNo
            ,'DocumentType'          = CASE  WHEN  A.BatchNumber =B.BatchNumber THEN  B.Type          ELSE NULL END 
            ,'Quantity'              = CASE  WHEN  A.BatchNumber =B.BatchNumber THEN  B.Quantity      ELSE 0    END 
            ,'ReturnQty'             = CASE  WHEN  A.BatchNumber =B.BatchNumber THEN  B.ReturnQty     ELSE 0    END 
            ,'OriginalSetQuantity'   = CASE  WHEN  A.BatchNumber =B.BatchNumber THEN  B.Quantity      ELSE 0    END 
            ,C.ActualQty
            ,C.AllocatedQty 
            ,ISNULL(p.IsConsign,0)   AS  IsConsign 
            ,d.MaxDeliveryDays              
            ,C.StockSysNo
	          ,A.Status 
            ,A.InDate                AS InStockDate
	          ,A.MfgDate
	          ,A.ExpDate            
        FROM OverseaInventoryManagement.dbo.Product_Batch  AS A WITH(NOLOCK)
        INNER JOIN  OverseaInventoryManagement.dbo.Product_Batch_Stock C WITH(NOLOCK) 
        ON    A.ProductSysNo=C.ProductSysNo AND A.BatchNumber=C.BatchNumber 
        LEFT JOIN OverseaContentManagement.dbo.V_IM_Product_BatchManagementInfo d WITH(NOLOCK)
        ON    A.ProductSysNo = d.ProductSysNo
        INNER JOIN OverseaContentManagement.dbo.V_IM_Product p  WITH(NOLOCK) 
        ON    A.ProductSysNo = p.SysNo  
        INNER JOIN OverseaContentManagement.dbo.V_IM_Product_Ex PTE  WITH(NOLOCK) 
        ON    PTE.SysNo = p.SysNo AND PTE.IsBatch='Y'
        LEFT JOIN  (
              SELECT        
              STB.Number                AS Number
            ,STB.Type                  AS Type
            ,STB.ProductSysNo          AS ProductSysNo       
            ,STB.BatchNumber
            ,STB.StockSysNo            AS StockSysNo  
            ,STB.Quantity
            ,STB.ReturnQty               
            ,STB.Quantity              AS OriginalSetQuantity
	          ,PBS.ActualQty             AS ActualQty
	          ,PBS.AllocatedQty          AS AllocatedQty 
            FROM  OverseaInventoryManagement.dbo.St_Batch STB WITH(NOLOCK)                        
            INNER JOIN OverseaInventoryManagement.dbo.Product_Batch_Stock PBS WITH(NOLOCK) 
            ON    STB.ProductSysNo=PBS.ProductSysNo AND STB.BatchNumber=PBS.BatchNumber
            WHERE Number=@Number 
        )AS B
        ON  A.ProductSysNo=B.ProductSysNo    AND A.BatchNumber=B.BatchNumber
        WHERE  A.ProductSysNo IN (SELECT DISTINCT(ProductSysNo) FROM OverseaInventoryManagement.dbo.St_Batch STB with(NOLOCK)  WHERE Number=@Number)  
        AND  C.StockSysNo=(SELECT TOP 1 StockSysNo FROM OverseaInventoryManagement.dbo.St_Batch STB with(NOLOCK)  WHERE Number=@Number) 
        AND  ((Quantity<>0 AND (ReturnQty=0 OR ReturnQty IS NULL) ) OR ((ReturnQty=0 OR ReturnQty IS NULL) AND ((Quantity=0 OR Quantity IS NULL)) ))
      ]]>
    </commandText>
    <parameters>
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_QueryTargetBatchDetailInfoByDocumentNumber" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[	         	    
          SELECT 
                 A.ProductSysNo
                ,p.ProductID
                ,A.BatchNumber
                ,A.LotNo
                ,'DocumentType'          = CASE  WHEN  A.BatchNumber =B.BatchNumber THEN  B.Type          ELSE NULL END 
                ,'Quantity'              = CASE  WHEN  A.BatchNumber =B.BatchNumber THEN  B.Quantity      ELSE 0    END 
                ,'ReturnQty'             = CASE  WHEN  A.BatchNumber =B.BatchNumber THEN  B.ReturnQty     ELSE 0    END 
                ,'OriginalSetQuantity'   = CASE  WHEN  A.BatchNumber =B.BatchNumber THEN  B.Quantity      ELSE 0    END 
                ,C.ActualQty
                ,C.AllocatedQty 
                ,ISNULL(p.IsConsign,0)   AS  IsConsign 
                ,d.MaxDeliveryDays              
                ,C.StockSysNo
	              ,A.Status 
                ,A.InDate                AS InStockDate
	              ,A.MfgDate
	              ,A.ExpDate            
          FROM OverseaInventoryManagement.dbo.Product_Batch  AS A WITH(NOLOCK)
          INNER JOIN  OverseaInventoryManagement.dbo.Product_Batch_Stock C WITH(NOLOCK) 
          ON    A.ProductSysNo=C.ProductSysNo AND A.BatchNumber=C.BatchNumber 
          LEFT JOIN OverseaContentManagement.dbo.V_IM_Product_BatchManagementInfo d WITH(NOLOCK)
          ON    A.ProductSysNo = d.ProductSysNo
          INNER JOIN OverseaContentManagement.dbo.V_IM_Product p  WITH(NOLOCK) 
          ON    A.ProductSysNo = p.SysNo  
          INNER JOIN OverseaContentManagement.dbo.V_IM_Product_Ex PTE  WITH(NOLOCK) 
          ON    PTE.SysNo = p.SysNo AND PTE.IsBatch='Y'
          LEFT JOIN  (
                 SELECT        
                 STB.Number                AS Number
                ,STB.Type                  AS Type
                ,STB.ProductSysNo          AS ProductSysNo       
                ,STB.BatchNumber
                ,STB.StockSysNo            AS StockSysNo  
                ,STB.Quantity
                ,STB.ReturnQty               
                ,STB.Quantity              AS OriginalSetQuantity
	              ,PBS.ActualQty             AS ActualQty
	              ,PBS.AllocatedQty          AS AllocatedQty 
                FROM  OverseaInventoryManagement.dbo.St_Batch STB WITH(NOLOCK)                        
                INNER JOIN OverseaInventoryManagement.dbo.Product_Batch_Stock PBS WITH(NOLOCK) 
                ON    STB.ProductSysNo=PBS.ProductSysNo AND STB.BatchNumber=PBS.BatchNumber
                WHERE Number=@Number 
          )AS B
          ON  A.ProductSysNo=B.ProductSysNo    AND A.BatchNumber=B.BatchNumber
          WHERE  A.ProductSysNo IN (SELECT DISTINCT(ProductSysNo) FROM OverseaInventoryManagement.dbo.St_Batch STB with(NOLOCK)  WHERE Number=@Number)
            AND  C.StockSysNo=(SELECT TOP 1 StockSysNo FROM OverseaInventoryManagement.dbo.St_Batch STB with(NOLOCK)  WHERE Number=@Number) 
            AND ((ReturnQty<>0 AND (Quantity=0 OR Quantity IS NULL) ) OR ((ReturnQty=0 OR ReturnQty IS NULL) AND ((Quantity=0 OR Quantity IS NULL)) ))
      ]]>
    </commandText>
    <parameters>
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>  
  <!--Batch END-->
  <dataCommand name="Inventory_GetConvertProductLineInfoByProductSysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
         SELECT ProductLineSysNo FROM 
         OverseaContentManagement.dbo.V_CM_ProductLine_Items WITH (NOLOCK)
         where ProductSysNo=@ProductSysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
</dataOperations>