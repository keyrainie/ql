<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <!--Query BEGIN-->
  
  <dataCommand name="Inventory_QueryExperience" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT @TotalCount=COUNT(a.SysNo)
          FROM IPP3.dbo.St_Lend a WITH(NOLOCK) 
            INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo l WITH(NOLOCK)
              ON a.LendUserSysNo = l.UserSysNo
            INNER JOIN IPP3.dbo.Stock s WITH(NOLOCK)
              ON a.StockSysNo = s.SysNo
          #StrWhere#
  
          SELECT
	          SysNo,
	          RequestID,
            RequestStatus,
	          CompanyCode,	          
	          StockSysNo,
	          StockName,
	          LendUserSysNo,
	          LendUserCode,
	          LendUserName,
	          CreateDate,
	          CreateUserName,
	          CreateUserSysNo,
	          AuditDate,
	          AuditUserName,
	          OutStockDate,            
	          OutStockUserName,	          
	          Note,
	          LendTotalCost,
	          LendTotalAmount
          FROM  
          (  
	          SELECT TOP (@EndNumber)               
		          a.SysNo AS SysNo,
		          a.LendID AS RequestID,
              a.Status AS RequestStatus,
		          a.CompanyCode,		          
		          s.SysNo AS StockSysNo,
		          s.StockName,
		          ul.UserSysNo AS LendUserSysNo,
		          ul.LoginName AS LendUserCode,
		          ul.DisplayName AS LendUserName,
		          a.CreateTime AS CreateDate,
		          uc.DisplayName AS CreateUserName,
		          uc.UserSysNo AS CreateUserSysNo,
		          a.AuditTime AS AuditDate,
		          ua.DisplayName AS AuditUserName,
		          a.OutTime AS OutStockDate,
		          uo.DisplayName AS OutStockUserName,		          
		          SUM(IsNULL(li.LendCostWhenCreate,0)*IsNULL(li.LendQty,0)) AS LendTotalCost,
		          SUM(IsNULL(i.CurrentPrice,0)*IsNULL(li.LendQty,0)) AS LendTotalAmount,
		          a.Note,
		          (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
	 
	          FROM IPP3.dbo.St_Lend a WITH(NOLOCK)
		          LEFT JOIN IPP3.dbo.St_Lend_Item li WITH(NOLOCK)
			          ON a.SysNo = li.LendSysNo
		          LEFT JOIN OverseaContentManagement.dbo.V_CM_ItemPriceInfo i WITH(NOLOCK)
			          ON li.ProductSysNo = i.SysNo
		          INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo ul WITH(NOLOCK)
			          ON a.LendUserSysNo = ul.UserSysNo
		          INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo uc WITH(NOLOCK)
			          ON a.CreateUserSysNo = uc.UserSysNo
		          INNER JOIN IPP3.dbo.Stock s WITH(NOLOCK)
			          ON a.StockSysNo = s.SysNo
		          LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo ua WITH(NOLOCK)
			          ON a.AuditUserSysNo = ua.UserSysNo
		          LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo uo WITH(NOLOCK)
			          ON a.OutUserSysNo = uo.UserSysNo

	          #StrWhere#

	          GROUP BY 
	            a.SysNo,
	            a.LendID,
	            a.CompanyCode,	            
	            s.SysNo,
	            s.StockName,
	            ul.UserSysNo,
	            ul.LoginName,
	            ul.DisplayName,
	            a.CreateTime,
              uc.DisplayName,
	            uc.UserSysNo,
	            a.AuditTime,
	            ua.DisplayName,
	            a.OutTime,
	            uo.DisplayName,
	            a.Status,
	            a.Note
          ) Result 
          WHERE RowNumber > @StartNumber
       ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="Inventory_GetExperienceInfoBySysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[  
				SELECT [SysNo]
              ,[StockSysNo]
              ,[Memo] as Meno
              ,[AllocateType]
              ,[Status]
              ,[InUser]
              ,[InDate]
              ,[EditUser]
              ,[EditDate]
              ,[AuditUser]
              ,[AuditDate]
          FROM [ipp3].[dbo].[St_Allocate]  WITH(NOLOCK)
        WHERE SysNo = @RequestSysNo
       ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetExperienceItemListByRequestSysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[  
         SELECT  a.[SysNo]
            ,[AllocateSysNo]
            ,[ProductSysNo]
            ,[AllocateQty]
            ,a.[CompanyCode]
            ,p.sysno as ProductSysNo
            ,p.productid as ProductID
            ,p.productname as ProductName
        FROM [ipp3].[dbo].[St_AllocateItem] a WITH(NOLOCK)
        inner join ipp3.dbo.product p
        on a.productsysno=p.sysno
          WHERE a.AllocateSysNo = @RequestSysNo
       ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetExperienceItem" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT @TotalCount = COUNT(l.SysNo) 
        FROM IPP3.dbo.St_Lend_Item AS l WITH(NOLOCK) 
        #StrWhere#

        SELECT 
              LendSysNo,
              CompanyCode,
              LanguageCode,
              CurrencySysNo,
              ProductSysNumber,
              ProductCode,
              ProductName,
              ProductManager,
              LendQty,
              ReturnQty,
              ExpectReturnTime,
              LendCost,
              LendUnitCostWithoutTax,
              LendCostWhenCreate,
              TotalLendCost
        FROM
        (
          SELECT TOP (@EndNumber) 
            l.LendSysNo,
            l.CompanyCode,
            l.LanguageCode,
            l.CurrencySysNo,
	          CM.SysNo AS ProductSysNumber,
	          CM.ProductID AS ProductCode,
	          CM.ProductName,
	          AR.DisplayName AS ProductManager,
	          l.LendQty,
	          (
		          SELECT SUM(ReturnQty) FROM IPP3.dbo.St_Lend_Return r WITH(NOLOCK) WHERE r.ProductSysNo = CM.SysNo AND r.LendSysNo = l.LendSysNo
	          ) AS ReturnQty,
	          l.ExpectReturnTime,
	          l.LendCost,
	          l.LendUnitCostWithoutTax,
	          l.LendCostWhenCreate,
	          (l.LendQty*l.LendCostWhenCreate) AS TotalLendCost,
            (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
          FROM 
	          IPP3.dbo.St_Lend_Item AS l WITH(NOLOCK) 
          INNER JOIN 
	          OverseaContentManagement.dbo.V_CM_ItemCommonInfo AS CM WITH(NOLOCK)
          ON
	          l.ProductSysNo = CM.SysNo
          LEFT JOIN
	          OverseaArchitecture.dbo.V_AR_UserInfo AR WITH(NOLOCK)
          ON
	          CM.PMUserSysNo = AR.UserSysNo
          #StrWhere#
        ) Result 
        WHERE RowNumber > @StartNumber
       ]]>
    </commandText>
  </dataCommand>
  
  <dataCommand name="Inventory_QueryExperienceHallInventory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
	        SELECT  @TotalCount = COUNT(0) 
	        FROM  ipp3.dbo.Inventory_Exp  AS Inventory_Exp
	        LEFT JOIN  ipp3.dbo.product AS Product ON Inventory_Exp.ProductSysNo  = Product.SysNo 
	        INNER JOIN IPP3.dbo.Category3 c3 WITH(NOLOCK) ON Product.C3SysNo=c3.SysNo
	        INNER JOIN IPP3.dbo.Category2 c2 WITH(NOLOCK) ON c3.C2SysNo=c2.SysNo
	        INNER JOIN IPP3.dbo.Category1 c1 WITH(NOLOCK) ON c2.C1SysNo=c1.SysNo
            #StrWhere#

            SELECT 
		        ProductID,
		        ProductName ,
		        TotalQty,
		        OutStockQty
            FROM
            (
		        SELECT TOP (@EndNumber) 
			        Product.ProductID,
			        Product.ProductName ,
			        Inventory_Exp.TotalQty,
			        Inventory_Exp.OutStockQty,
			        (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
		        FROM  ipp3.dbo.Inventory_Exp  AS Inventory_Exp
		        LEFT JOIN  ipp3.dbo.product AS Product ON Inventory_Exp.ProductSysNo = Product.SysNo 
		        INNER JOIN IPP3.dbo.Category3 c3 WITH(NOLOCK) ON Product.C3SysNo=c3.SysNo
		        INNER JOIN IPP3.dbo.Category2 c2 WITH(NOLOCK) ON c3.C2SysNo=c2.SysNo
		        INNER JOIN IPP3.dbo.Category1 c1 WITH(NOLOCK) ON c2.C1SysNo=c1.SysNo

                #StrWhere#
            ) RESULT 
            WHERE RowNumber > @StartNumber
       ]]>
    </commandText>
  </dataCommand>
  
    <dataCommand name="QueryExperienceHallAllocateOrder" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
	      SELECT  @TotalCount = COUNT(0) 
          FROM [IPP3].[dbo].[St_Allocate]
          #StrWhere#

          SELECT 
		      [SysNo]
            ,[StockSysNo]
            ,[Memo]
            ,[AllocateType]
            ,[Status]
            ,[InUser]
            ,[InUserName]
            ,[InDate]
            ,[EditUser]
            ,[EditUserName]
            ,[EditDate]
            ,[AuditUser]
            ,[AuditUserName]
            ,[AuditDate]
          FROM
          (
		      SELECT TOP (@EndNumber) 
			        [SysNo]
			        ,[StockSysNo]
			        ,[Memo]
			        ,[AllocateType]
			        ,[Status]
			        ,[InUser]
			        ,ISNULL((SELECT TOP 1 UserName FROM [IPP3].dbo.Sys_User WHERE SysNo= InUser ),'') AS InUserName
			        ,[InDate]
			        ,[EditUser]
			        ,ISNULL((SELECT TOP 1 UserName FROM [IPP3].dbo.Sys_User WHERE SysNo= EditUser ),'') AS EditUserName
			        ,[EditDate]
			        ,[AuditUser]
			        ,ISNULL((SELECT TOP 1 UserName FROM [IPP3].dbo.Sys_User WHERE SysNo= AuditUser ),'') AS AuditUserName
			        ,[AuditDate]
			      ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
		        FROM [IPP3].[dbo].[St_Allocate] AS St_Allocate

              #StrWhere#
          ) RESULT 
          WHERE RowNumber > @StartNumber
       ]]>
    </commandText>
  </dataCommand>
  <!--Query END-->

  <!--Maintain BEGIN-->
  <dataCommand name="Inventory_CreateExperience" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
       INSERT INTO [ipp3].[dbo].[St_Allocate]
           ([StockSysNo]
           ,[Memo]
           ,[AllocateType]
           ,[Status]
           ,[InUser]
           ,[InDate]
           )
       VALUES
           (@StockSysNo
           ,@Memo
           ,@AllocateType
           ,@Status
           ,@InUser
           ,@InDate
           )
           
      SELECT SCOPE_IDENTITY()
     ]]>
    </commandText>
    <parameters>
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@Memo" dbType="String" />
      <param name="@AllocateType" dbType="Int32" />
      <param name="@Status" dbType="Int32"/>
      <param name="@InDate" dbType="DateTime" />
      <param name="@InUser" dbType="Int32" />
    </parameters>
  </dataCommand>
  
  <dataCommand name="Inventory_DeleteExperienceItemByRequestSysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        DELETE FROM [IPP3].[dbo].[St_AllocateItem]
      WHERE  AllocateSysNo=@AllocateSysNo
        ]]>
    </commandText>
    <parameters>
      <param name="@AllocateSysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>
  
  <dataCommand name="Inventory_CreateExperienceItem" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        INSERT INTO [ipp3].[dbo].[St_AllocateItem]
           ([AllocateSysNo]
           ,[ProductSysNo]
           ,[AllocateQty]
           ,[CompanyCode]
           )
     VALUES
           (@AllocateSysNo
           ,@ProductSysNo
           ,@AllocateQty
           ,@CompanyCode
           )
           
       SELECT SCOPE_IDENTITY()
     ]]>
    </commandText>
    <parameters>
      <param name="@AllocateSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@AllocateQty" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateExperience" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE [IPP3].[dbo].[St_Allocate]
         SET [StockSysNo] = @StockSysNo
            ,[Memo] = @Memo
            ,[AllocateType] = @AllocateType
            ,[Status] = @Status
            ,[EditUser]=@EditUser
            ,[EditDate]=GETDATE()
       WHERE   SysNo=@RequestSysNo
     ]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@Memo" dbType="String"/>
      <param name="@AllocateType" dbType="Int32"/>
      <param name="@Status" dbType="Int32"/>
      <param name="@EditUser" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateExperienceStatus" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
           update  [IPP3].[dbo].[St_Allocate]
            set [Status]=@Status,
                 AuditUser=@AuditUser,
                 AuditDate=getdate(),
                 EditUser=@EditUser,
                 EditDate=getdate()
            where sysno=@SysNo
     ]]>
    </commandText>
    <parameters>
      <param name="@Status" dbType="Int32" />
      <param name="@AuditUser" dbType="Int32" />
      <param name="@EditUser" dbType="Int32" />
      <param name="@SysNo" dbType="Int32"/>
    </parameters>
  </dataCommand> 

  <dataCommand name="Inventory_AuditExperienceInOrOut" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
           DECLARE @Type int=0      
           DECLARE @AllocateQty int=0
           DECLARE @IsExist int=0
    
           select @Type=[AllocateType] from [IPP3].[dbo].[St_Allocate]
           where sysno=@SysNo
 
           select @AllocateQty=AllocateQty from [ipp3].[dbo].[St_AllocateItem] 
           where [AllocateSysNo]=@SysNo 
		          and [ProductSysNo]=@ProductSysNo 
		          and CompanyCode=@CompanyCode
 
           select @IsExist=COUNT(*) FROM [ipp3].dbo.Inventory_Exp
           WHERE ProductSysNo=@ProductSysNo and CompanyCode=@CompanyCode
 
           if(@IsExist=0)
	           begin
		          declare @qty int=1
		          if(@Type=1) begin set @qty=-1 end
		          insert into [IPP3].dbo.Inventory_Exp
			          ( ProductSysNo
			           ,OutStockQty
			           ,CompanyCode
			           ,TotalQty
			          )
			          values(
			            @ProductSysNo
			            ,0
			            ,@CompanyCode
			            ,@AllocateQty*@qty
			          )
		          return
	           end
 
           if(@Type=0)
	           begin
		          update [IPP3].dbo.Inventory_Exp
		          set TotalQty=TotalQty+@AllocateQty
		          where ProductSysNo=@ProductSysNo and CompanyCode=@CompanyCode				
	           end
           else 
	           begin
		          update [IPP3].dbo.Inventory_Exp
		          set TotalQty=TotalQty-@AllocateQty
		          where ProductSysNo=@ProductSysNo and CompanyCode=@CompanyCode
	           end
	     
     ]]>
    </commandText>
    <parameters>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@SysNo" dbType="Int32" />  
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_CancelAuditExperienceInOrOut" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
           DECLARE @Type int=0      
           DECLARE @AllocateQty int=0
    
           select @Type=[AllocateType] from [IPP3].[dbo].[St_Allocate]
           where sysno=@SysNo
 
           select @AllocateQty=AllocateQty from [ipp3].[dbo].[St_AllocateItem] 
           where [AllocateSysNo]=@SysNo 
		          and [ProductSysNo]=@ProductSysNo 
		          and CompanyCode=@CompanyCode
 
            if(@Type=0)
	           begin
		          update [IPP3].dbo.Inventory_Exp
		          set TotalQty=TotalQty-@AllocateQty
		          where ProductSysNo=@ProductSysNo and CompanyCode=@CompanyCode				
	           end
           else 
	           begin
		          update [IPP3].dbo.Inventory_Exp
		          set TotalQty=TotalQty+@AllocateQty
		          where ProductSysNo=@ProductSysNo and CompanyCode=@CompanyCode
	           end	     
     ]]>
    </commandText>
    <parameters>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_CheckedStockQty" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT isnull( TotalQty-OutStockQty,0) as Qty
          FROM [IPP3].[dbo].[Inventory_Exp]
          where [ProductSysNo]=@ProductSysNo
           and [CompanyCode]=@CompanyCode
     ]]>
    </commandText>
    <parameters>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <!--Maintain END-->
</dataOperations>