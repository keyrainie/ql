<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <!--商品库存更新相关 开始-->
  <dataCommand name="Inventory_GetProductInventoryInfo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[  
            SELECT  I.[SysNo]
              , I.[StockSysNo]
              , I.[StockSysNo] AS [StockInfo.SysNo]
              ,S.StockName AS [StockInfo.StockName]
              , I.[ProductSysNo]
              , I.[AccountQty]
              , I.[AvailableQty]
              , I.[AllocatedQty]
              , I.[OrderQty]
              , I.[PurchaseQty]
              , I.[ShiftInQty]
              , I.[ShiftOutQty]
              , I.[ConsignQty]
              , I.[VirtualQty]      
              ,ISNULL( I.[ReservedQty], 0) AS [ReservedQty]
              ,ISNULL( I.[InvalidQty], 0) AS [InvalidQty]
              ,ISNULL( I.[ChannelQty], 0) AS [ChannelQty]
            FROM [IPP3].[dbo].[Inventory_Stock] AS I WITH(NOLOCK)
            LEFT JOIN [IPP3].[dbo].[Stock] AS S WITH(NOLOCK)
            ON I.StockSysNo=S.SysNo
            WHERE [ProductSysNo] = @ProductSysNo 
        ]]>
    </commandText>
    <parameters>      
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetProductInventoryInfoByStock" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[  
            SELECT  I.[SysNo]
              , I.[StockSysNo]
              , I.[StockSysNo] AS [StockInfo.SysNo]
              ,S.StockName AS [StockInfo.StockName]
              , I.[ProductSysNo]
              , I.[AccountQty]
              , I.[AvailableQty]
              , I.[AllocatedQty]
              , I.[OrderQty]
              , I.[PurchaseQty]
              , I.[ShiftInQty]
              , I.[ShiftOutQty]
              , I.[ConsignQty]
              , I.[VirtualQty]      
              ,ISNULL( I.[ReservedQty], 0) AS [ReservedQty]
              ,ISNULL( I.[InvalidQty], 0) AS [InvalidQty]
              ,ISNULL( I.[ChannelQty], 0) AS [ChannelQty]
              ,S.MerchantSysNo AS [StockInfo.MerchantSysNo]
              ,S.StockType AS [StockInfo.StockType]
            FROM [IPP3].[dbo].[Inventory_Stock] AS I WITH(NOLOCK)
            LEFT JOIN [IPP3].[dbo].[Stock] AS S WITH(NOLOCK)
            ON I.StockSysNo=S.SysNo
            WHERE [ProductSysNo] = @ProductSysNo 
              AND [StockSysNo] = @StockSysNo 
        ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetProductTotalInventoryInfoByProduct" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[  
            SELECT [SysNo]
              ,[ProductSysNo]
              ,[AccountQty]
              ,[AvailableQty]
              ,[AllocatedQty]
              ,[OrderQty]
              ,[PurchaseQty]
              ,[VirtualQty]
              ,[ConsignQty]
              ,[ShiftQty]
              ,ISNULL([ReservedQty], 0) AS [ReservedQty]
              ,ISNULL([InvalidQty], 0) AS [InvalidQty]
              ,ISNULL([ChannelQty], 0) AS [ChannelQty]
            FROM [IPP3].[dbo].[Inventory] WITH(NOLOCK)
            WHERE [ProductSysNo] = @ProductSysNo
        ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetProductTotalInventoryInfo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[  
            SELECT a.[SysNo]
              ,a.[ProductSysNo]
              ,a.[AccountQty]
              ,a.[AvailableQty]
              ,a.[AllocatedQty]
              ,a.[OrderQty]
              ,a.[PurchaseQty]
              ,a.[VirtualQty]
              ,a.[ConsignQty]
              ,a.[ShiftQty]
              ,ISNULL(a.[ReservedQty], 0) AS [ReservedQty]
              ,ISNULL(a.[InvalidQty], 0) AS [InvalidQty]
              ,ISNULL(a.[ChannelQty], 0) AS [ChannelQty]
            FROM [IPP3].[dbo].[Inventory] a WITH(NOLOCK)
            #StrWhere#
        ]]>
    </commandText>    
  </dataCommand>
  
  
  <dataCommand name="Inventory_InitProductInventoryInfo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[  
            IF NOT EXISTS (
	            SELECT TOP 1 1 FROM IPP3.dbo.Inventory_Stock WITH(NOLOCK)   
                WHERE ProductSysNo = @ProductSysNo AND StockSysNo = @StockSysNo
            )  
            BEGIN  
	            INSERT INTO IPP3.dbo.Inventory_Stock  
	            (  
		            StockSysNo ,ProductSysNo  ,CompanyCode  
		            ,AccountQty ,AvailableQty ,AllocatedQty ,OrderQty ,PurchaseQty
		            ,ConsignQty ,VirtualQty ,ShiftInQty ,ShiftOutQty ,SafeQty  
		            ,Position1 ,Position2  
		            ,DMSValue  ,SaleDays  
	            )   
	            VALUES   
	            (  
		            @StockSysNo  ,@ProductSysNo  ,'8601'/*[Mark][Alan.X.Luo 硬编码]*/
		            ,0 ,0 ,0 ,0 ,0  
		            ,0 ,0 ,0 ,0 ,0  
		            ,'' ,''  
		            ,0.0 ,0.0  
	            )  
            END  
  
            IF NOT EXISTS (
	            SELECT TOP 1 1 FROM IPP3.dbo.Inventory WITH(NOLOCK)
	            WHERE ProductSysNo = @ProductSysNo
            )  
            BEGIN  
	            INSERT INTO IPP3.dbo.Inventory  
	            (  
		              ProductSysNo  ,CompanyCode 
		            ,AccountQty  ,AvailableQty  ,AllocatedQty  ,OrderQty  ,PurchaseQty  
		            ,VirtualQty  ,ConsignQty  ,ShiftQty  
	     
	            )   
	            VALUES   
	            (  
		              @ProductSysNo  ,'8601'  /*[Mark][Alan.X.Luo 硬编码]*/
		            ,0  ,0  ,0  ,0  ,0  
		            ,0  ,0  ,0  
	            )  
            END  
        ]]>
    </commandText>
    <parameters>      
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateProductInventoryByStock" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
            UPDATE [IPP3].[dbo].[Inventory_Stock]
            SET [AccountQty] = @AccountQty
                ,[AvailableQty] = @AvailableQty
                ,[AllocatedQty] =  CASE 
                                      WHEN @AllocatedQty<0 THEN 0 
                                      ELSE @AllocatedQty
                                   END  
                ,[OrderQty] = @OrderQty
                ,[PurchaseQty] = @PurchaseQty
                ,[ShiftInQty] = @ShiftInQty
                ,[ShiftOutQty] = @ShiftOutQty            
                ,[ConsignQty] = @ConsignQty
                ,[VirtualQty] = @VirtualQty
                ,[ReservedQty] = @ReservedQty
                ,[InvalidQty] = @InvalidQty
                ,[ChannelQty] = @ChannelQty
            WHERE ProductSysNo = @ProductSysNo
              AND StockSysNo = @StockSysNo
          ]]>
    </commandText>
    <parameters>
      <param name="@AccountQty" dbType="Int32" />
      <param name="@AvailableQty" dbType="Int32" />
      <param name="@AllocatedQty" dbType="Int32" />
      <param name="@OrderQty" dbType="Int32" />
      <param name="@PurchaseQty" dbType="Int32" />
      <param name="@ShiftInQty" dbType="Int32" />
      <param name="@ShiftOutQty" dbType="Int32" />
      <param name="@ConsignQty" dbType="Int32" />
      <param name="@VirtualQty" dbType="Int32" />
      <param name="@ReservedQty" dbType="Int32" />
      <param name="@InvalidQty" dbType="Int32" />
      <param name="@ChannelQty" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateProductTotalInventory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
            UPDATE [IPP3].[dbo].[Inventory]
            SET[AccountQty] = @AccountQty
                ,[AvailableQty] = @AvailableQty
                ,[AllocatedQty] =  CASE 
                                      WHEN @AllocatedQty<0 THEN 0 
                                      ELSE @AllocatedQty
                                   END  
                ,[OrderQty] = @OrderQty
                ,[PurchaseQty] = @PurchaseQty
                ,[VirtualQty] = @VirtualQty
                ,[ConsignQty] = @ConsignQty
                ,[ShiftQty] = @ShiftQty
                ,[ReservedQty] = @ReservedQty
                ,[InvalidQty] = @InvalidQty
                ,[ChannelQty] = @ChannelQty
            WHERE  [ProductSysNo] = @ProductSysNo
          ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@AccountQty" dbType="Int32" />
      <param name="@AvailableQty" dbType="Int32" />
      <param name="@AllocatedQty" dbType="Int32" />
      <param name="@OrderQty" dbType="Int32" />
      <param name="@PurchaseQty" dbType="Int32" />
      <param name="@ShiftQty" dbType="Int32" />
      <param name="@ConsignQty" dbType="Int32" />
      <param name="@VirtualQty" dbType="Int32" />
      <param name="@ReservedQty" dbType="Int32" />
      <param name="@InvalidQty" dbType="Int32" />
      <param name="@ChannelQty" dbType="Int32" />
    </parameters>
  </dataCommand>
  
  <dataCommand name="Inventory_AdjustProductInventoryByStock" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
            UPDATE [IPP3].[dbo].[Inventory_Stock]
            SET [AccountQty] = [AccountQty] + @AccountQty
                ,[AvailableQty] = [AvailableQty] + @AvailableQty
                ,[AllocatedQty] =  CASE 
                                      WHEN AllocatedQty+@AllocatedQty<0 THEN 0 
                                      ELSE AllocatedQty+@AllocatedQty
                                   END      
                ,[OrderQty] = [OrderQty] + @OrderQty
                ,[PurchaseQty] = [PurchaseQty] + @PurchaseQty
                ,[ShiftInQty] = [ShiftInQty] + @ShiftInQty
                ,[ShiftOutQty] = [ShiftOutQty] + @ShiftOutQty            
                ,[ConsignQty] = [ConsignQty] + @ConsignQty
                ,[VirtualQty] = [VirtualQty] + @VirtualQty
                ,[ReservedQty] = ISNULL([ReservedQty], 0) + @ReservedQty
                ,[InvalidQty] = ISNULL([InvalidQty], 0) + @InvalidQty
                ,[ChannelQty] = ISNULL([ChannelQty], 0) + @ChannelQty
            WHERE ProductSysNo = @ProductSysNo
                AND StockSysNo = @StockSysNo 
          ]]>
    </commandText>
    <parameters>
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@AccountQty" dbType="Int32" />
      <param name="@AvailableQty" dbType="Int32" />
      <param name="@AllocatedQty" dbType="Int32" />
      <param name="@OrderQty" dbType="Int32" />
      <param name="@PurchaseQty" dbType="Int32" />
      <param name="@ShiftInQty" dbType="Int32" />
      <param name="@ShiftOutQty" dbType="Int32" />
      <param name="@ConsignQty" dbType="Int32" />
      <param name="@VirtualQty" dbType="Int32" />
      <param name="@ReservedQty" dbType="Int32" />
      <param name="@InvalidQty" dbType="Int32" />
      <param name="@ChannelQty" dbType="Int32" />      
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_AdjustProductTotalInventory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
          UPDATE [IPP3].[dbo].[Inventory]
          SET [AccountQty] = [AccountQty] + @AccountQty
              ,[AvailableQty] = [AvailableQty] + @AvailableQty              
              ,[AllocatedQty]=   CASE 
                                      WHEN AllocatedQty+@AllocatedQty<0 THEN 0 
                                      ELSE AllocatedQty+@AllocatedQty
                                  END              
              ,[OrderQty] = [OrderQty] + @OrderQty
              ,[PurchaseQty] =  [PurchaseQty] + @PurchaseQty
              ,[VirtualQty] = [VirtualQty] + @VirtualQty
              ,[ConsignQty] = [ConsignQty] + @ConsignQty
              ,[ShiftQty] = [ShiftQty] + @ShiftQty
              ,[ReservedQty] = ISNULL([ReservedQty], 0) + @ReservedQty
              ,[InvalidQty] = ISNULL([InvalidQty], 0) + @InvalidQty
              ,[ChannelQty] = ISNULL([ChannelQty], 0) + @ChannelQty
          WHERE  [ProductSysNo] = @ProductSysNo
          ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@AccountQty" dbType="Int32" />
      <param name="@AvailableQty" dbType="Int32" />
      <param name="@AllocatedQty" dbType="Int32" />
      <param name="@OrderQty" dbType="Int32" />
      <param name="@PurchaseQty" dbType="Int32" />
      <param name="@ShiftQty" dbType="Int32" />
      <param name="@ConsignQty" dbType="Int32" />
      <param name="@VirtualQty" dbType="Int32" />
      <param name="@ReservedQty" dbType="Int32" />
      <param name="@InvalidQty" dbType="Int32" />
      <param name="@ChannelQty" dbType="Int32" />
    </parameters>
  </dataCommand>

  <!--商品库存更新相关 结束-->

  <!--商品销售趋势 开始-->
  <dataCommand name="Inventory_GetProductSalesTrendInfoTotalByProduct" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
            SELECT 
            [ProductSysNo]
            ,SUM([D1]) AS [D1]
            ,SUM([D2]) AS [D2]
            ,SUM([D3]) AS [D3]
            ,SUM([D4]) AS [D4]
            ,SUM([D5]) AS [D5]
            ,SUM([D6]) AS [D6]
            ,SUM([D7]) AS [D7]
            ,SUM([W1]) AS [W1]
            ,SUM([W2]) AS [W2]
            ,SUM([W3]) AS [W3]
            ,SUM([W4]) AS [W4]
            ,SUM([W5]) AS [W5]
            ,SUM([W6]) AS [W6]
            ,SUM([W7]) AS [W7]
            ,SUM([M1]) AS [M1]
            ,SUM([M2]) AS [M2]
            ,SUM([M3]) AS [M3]
            ,SUM([M4]) AS [M4]
            ,SUM([M5]) AS [M5]
            ,SUM([M6]) AS [M6]            
          FROM OverseaContentManagement.dbo.V_IM_Product_SaleTrend WITH(NOLOCK)
          WHERE ProductSysNo=@ProductSysNo	            
          GROUP BY ProductSysNo
        ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetProductSalesTrendInfoByStock" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
            SELECT SysNo
            ,[ProductSysNo]            
            ,[WarehouseNumber] AS [Stock.SysNo]
            ,[d1]
            ,[d2]
            ,[d3]
            ,[d4]
            ,[d5]
            ,[d6]
            ,[d7]
            ,[w1]
            ,[w2]
            ,[w3]
            ,[w4]
            ,[w5]
            ,[w6]
            ,[w7]
            ,[m1]
            ,[m2]
            ,[m3]
            ,[m4]
            ,[m5]
            ,[m6]                   
          FROM OverseaContentManagement.dbo.V_IM_Product_SaleTrend WITH(NOLOCK)
          WHERE ProductSysNo=@ProductSysNo
	            AND WarehouseNumber=@StockSysNo          
        ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_GetProductSalesTrendInfo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
            SELECT SysNo
            ,[ProductSysNo]            
            ,[WarehouseNumber] AS [Stock.SysNo]
            ,[d1]
            ,[d2]
            ,[d3]
            ,[d4]
            ,[d5]
            ,[d6]
            ,[d7]
            ,[w1]
            ,[w2]
            ,[w3]
            ,[w4]
            ,[w5]
            ,[w6]
            ,[w7]
            ,[m1]
            ,[m2]
            ,[m3]
            ,[m4]
            ,[m5]
            ,[m6]                   
          FROM OverseaContentManagement.dbo.V_IM_Product_SaleTrend WITH(NOLOCK)
          WHERE ProductSysNo=@ProductSysNo
        ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>
  
  <!--商品销售趋势 结束-->

  <!--商品批号相关 开始-->
  <dataCommand name="GetBatchDetailsInfoEntityListByNumber" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
         Number
        ,[Type]    
        ,BatchNumber 
        ,ProductSysNo 
        ,StockSysNo
        ,Quantity
        ,ReturnQty 
        FROM OverseaInventoryManagement.dbo.St_Batch WITH(NOLOCK)
        WHERE Number=@Number;
        ]]>
    </commandText>
    <parameters>
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="AdjustBatchNumberInventory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[  
            Execute OverseaInventoryManagement.dbo.UP_ProductBatch_Maintain_V1 @Msg;
     ]]>
    </commandText>
    <parameters>
      <param name="@Msg" dbType="Xml" />
    </parameters>
  </dataCommand>
  <!--商品批号相关 结束-->


  <!--获取商品库龄-->
  <dataCommand name="Inventory_GetInStockDaysByProductSysNo"  database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT ISNULL(MAX(a.InStockDays),0) AS InStockDays
          FROM OverseaInventoryManagement.dbo.BI_Inventory_Actual_Aging a WITH(NOLOCK) 
          INNER JOIN  OverseaContentManagement.dbo.V_IM_Product b WITH(NOLOCK)  ON a.Item_Key = b.ProductID
          WHERE b.SysNo =  @ProductSysNo
		]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
  
  <!--写成本日志-->
  <dataCommand name="Inventory_WriteCostLog"  database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
         INSERT INTO [OverseaInventoryManagement].[dbo].[ProductCostLog]
           ([BillType]
           ,[BillSysNo]
           ,[Message]
           ,[InDate])
         VALUES
               (@BillType
               ,@BillSysNo
               ,@Message
               ,GETDATE())

		]]>
    </commandText>
    <parameters>
      <param name="@BillType" dbType="Int32" />
      <param name="@BillSysNo" dbType="Int32" />
      <param name="@Message" dbType="String" />  
    </parameters>
  </dataCommand>
  <!--获取成本序列-->
  <dataCommand name="Inventory_GetCostListByProductSysNo"  database="NCService" commandType="Text">
    <commandText>
      <![CDATA[     
        SELECT [Sysno]
        ,[ProductSysNo]
        ,[BillType]
        ,[BillSysNo]
        ,[Cost]
        ,[Quantity]
        ,[LeftQuantity]
        ,[LockQuantity]
        ,[WarehouseNumber]
        FROM [OverseaInventoryManagement].[dbo].[ProductCostIn] WITH(NOLOCK)
        where ProductSysNo=@ProductSysNo and LeftQuantity-LockQuantity>0
        order by [Priority],sysno 
		]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />  
    </parameters>
  </dataCommand>
  <dataCommand name="Inventory_GetCostListByProductCost"  database="NCService" commandType="Text">
    <commandText>
      <![CDATA[     
        SELECT [Sysno]
        ,[ProductSysNo]
        ,[BillType]
        ,[BillSysNo]
        ,[Cost]
        ,[Quantity]
        ,[LeftQuantity]
        ,[LockQuantity]
        ,[WarehouseNumber]
        FROM [OverseaInventoryManagement].[dbo].[ProductCostIn] WITH(NOLOCK)
        where ProductSysNo=@ProductSysNo and LeftQuantity-LockQuantity>0 
        and cost=@Cost
        order by [Priority],sysno 
		]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@Cost" dbType="Decimal" />
    </parameters>
  </dataCommand>
  <dataCommand name="Inventory_UpdateProductCost"  database="NCService" commandType="Text">
    <commandText>
      <![CDATA[     
      update [OverseaInventoryManagement].[dbo].[ProductCostIn]
        set LeftQuantity=LeftQuantity-@Quantity,
        --负采购要扣减锁定库存
        LockQuantity=case when @BillType= 40 then LockQuantity-@Quantity else LockQuantity end
        where Sysno=@CostInSysNo 

        INSERT INTO [OverseaInventoryManagement].[dbo].[ProductCostOut]
                   ([ProductSysNo]
                   ,[BillType]
                   ,[BillSysNo]
                   ,[Cost]
                   ,[Quantity]
                   ,[CostInSysNo]
                   ,[OutType]
                   ,[OutTypeRefrenceSysNo]
                   ,[InDate])
             VALUES
                   (@ProductSysNo
                   ,@BillType
                   ,@BillSysNo
                   ,@Cost
                   ,@Quantity
                   ,@CostInSysNo
                   ,0
                   ,0
                   ,GETDATE())

		]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@BillType" dbType="Int32" />
      <param name="@BillSysNo" dbType="Int32" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@Cost" dbType="Decimal" />
      <param name="@CostInSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateProductCostForCostChange"  database="NCService" commandType="Text">
    <commandText>
      <![CDATA[     
        DECLARE @CostInSysNo INT

        SELECT TOP 1 @CostInSysNo = SysNo FROM [OverseaInventoryManagement].[dbo].[ProductCostIn] WITH(NOLOCK)
        WHERE BillType=@BillType AND BillSysNo=@BillSysNo AND ProductSysNo=@ProductSysNo AND Cost = @Cost
		   
        IF @CostInSysNo IS NOT NULL
        BEGIN
            UPDATE TOP(1) [OverseaInventoryManagement].[dbo].[ProductCostIn]
            set LeftQuantity=LeftQuantity-@Quantity
            where Sysno=@CostInSysNo
            
            INSERT INTO [OverseaInventoryManagement].[dbo].[ProductCostOut]
                       ([ProductSysNo]
                       ,[BillType]
                       ,[BillSysNo]
                       ,[Cost]
                       ,[Quantity]
                       ,[CostInSysNo]
                       ,[OutType]
                       ,[OutTypeRefrenceSysNo]
                       ,[InDate])
                 VALUES
                       (@ProductSysNo
                       ,@BillType
                       ,@BillSysNo
                       ,@Cost
                       ,@Quantity
                       ,@CostInSysNo
                       ,0
                       ,0
                       ,GETDATE())
        END
       
		]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@BillType" dbType="Int32" />
      <param name="@BillSysNo" dbType="Int32" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@Cost" dbType="Decimal" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_UpdateCostToBiz" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
         Execute OverseaInventoryManagement.dbo.UP_InventoryUpdateCostToBiz @BillType,@BillSysNo,@ProductSysNo,@UnitCost
      ]]>
    </commandText>
    <parameters>
      <param name="@BillType" dbType="Int32" />
      <param name="@BillSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@UnitCost" dbType="Decimal" />      
    </parameters>
  </dataCommand>
  <dataCommand name="Inventory_LockProductCostInList" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
         update OverseaInventoryManagement.dbo.ProductCostIn
          set LockQuantity=@LockQuantity
          where Sysno=@SysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@LockQuantity" dbType="Int32" />   
    </parameters>
  </dataCommand>
  <dataCommand name="Inventory_GetProductCostIn" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
              select pc.Sysno,pc.LeftQuantity,pc.LockQuantity 
                  from  OverseaInventoryManagement.dbo.ProductCostIn  pc with(nolock)   
                        inner join ipp3.dbo.PO_Item item with(nolock)   
                         on item.ProductSysNo=pc.ProductSysNo 
                  where item.POSysNo=@PoSysNo
                  and item.ProductSysNo=@ProductSysNo 
                  and pc.LeftQuantity>0
                  --and pc.LeftQuantity-pc.LockQuantity>0 
                  and item.OrderPrice=pc.Cost
                  and pc.WarehouseNumber=@WarehouseNumber
              order by pc.Priority,pc.Sysno    
      ]]>
    </commandText>
    <parameters>
      <param name="@PoSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@WarehouseNumber" dbType="Int32" />
    </parameters>
  </dataCommand>
  <dataCommand name="Inventory_GetItemCost" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT TOP 1 Cost FROM OverseaInventoryManagement.dbo.ProductCostIn WITH(NOLOCK)
          WHERE ProductSysNo=@ProductSysNo AND BillType=40
          ORDER BY SysNo DESC
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
  <dataCommand name="Inventory_WriteProductCost" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      IF EXISTS(SELECT TOP 1 1 FROM [OverseaInventoryManagement].[dbo].[ProductCostIn] WITH(NOLOCK)
					WHERE [ProductSysNo]=@ProductSysNo
					AND [BillType]=@BillType
					AND [BillSysNo]=@BillSysNo
					AND [Cost]=@Cost)
		  BEGIN
			  UPDATE TOP(1) [OverseaInventoryManagement].[dbo].[ProductCostIn]
			  SET [Quantity] = [Quantity]+@Quantity
				  ,[LeftQuantity] = [LeftQuantity]+@Quantity
			  WHERE [ProductSysNo]=@ProductSysNo
					  AND [BillType]=@BillType
					  AND [BillSysNo]=@BillSysNo
					  AND [Cost]=@Cost
		  END
		  ELSE 
		  BEGIN
      
        DECLARE @CurrencySysNo INT;
        DECLARE @ExchangeRate DECIMAL(19,6);
        SELECT  @CurrencySysNo=CurrencySysNo,
	              @ExchangeRate=ExchangeRate
        FROM [OverseaInventoryManagement].[dbo].[FN_Inventory_GetCurrencyForCostIn](@BillType,@BillSysNo,@ProductSysNo,@WarehouseNumber)
      
			  INSERT INTO [OverseaInventoryManagement].[dbo].[ProductCostIn]
				 ([ProductSysNo]
				 ,[BillType]
				 ,[BillSysNo]
				 ,[Cost]
				 ,[Quantity]
				 ,[LeftQuantity]
				 ,[LockQuantity]
				 ,[TaxRate]
				 ,[InDate]
         ,CurrencySysNo
         ,ExchangeRate
         ,WarehouseNumber
				 )
			  SELECT TOP(1)
				 @ProductSysNo
				 ,@BillType
				 ,@BillSysNo
				 ,@Cost
				 ,@Quantity
				 ,@Quantity
				 ,0
				 ,ISNULL(PC.TaxRate,0.17) AS TaxRate
				 ,GETDATE()
         ,ISNULL(@CurrencySysNo,1)
         ,ISNULL(@ExchangeRate,1)
         ,@WarehouseNumber
			  FROM IPP3.dbo.Product P WITH(NOLOCK)
			  LEFT JOIN OverseaContentManagement.dbo.ProductCommonInfo_TaxRate PC WITH(NOLOCK)
			  ON P.ProductCommonInfoSysno = PC.ProductCommonInfoSysNo
			  WHERE P.SysNo=@ProductSysNo
		  END
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@BillType" dbType="Int32" />
      <param name="@BillSysNo" dbType="Int32"/>
      <param name="@Cost" dbType="Decimal" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@WarehouseNumber" dbType="Int32" />
    </parameters>
  </dataCommand>
  <dataCommand name="Inventory_UpdateProductCostPriority" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
         update top(1) OverseaInventoryManagement.dbo.ProductCostIn
         set Priority=@Priority,EditUser=@EditUser,EditDate=getdate()
         where Sysno=@SysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@Priority" dbType="Int32" />
      <param name="@EditUser" dbType="Int32" />
    </parameters>
  </dataCommand>
  <dataCommand name="ReturnItemUpdateQuantityOfSTB" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[	            
        UPDATE TOP(1) OverseaInventoryManagement.dbo.St_Batch 
        SET Quantity=Quantity-@ReturnQty,ReturnQty=ReturnQty+@ReturnQty,EditUser=@InUser,EditDate=getDate() 
        WHERE  BatchNumber=@BatchNumber AND ProductSysNo=@ProductSysNo AND StockSysNo=@StockSysNo AND Number=@Number              
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@BatchNumber" dbType="AnsiStringFixedLength" />
      <param name="@Type" dbType="AnsiStringFixedLength" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@ReturnQty" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@InUser" dbType="AnsiStringFixedLength" />
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateQuantityOfSTB" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
	      DECLARE @Flag INT      
        SELECT  @Flag=COUNT(*) FROM OverseaInventoryManagement.dbo.St_Batch STB  WITH(NOLOCK)
        WHERE   STB.BatchNumber=@BatchNumber AND STB.ProductSysNo=@ProductSysNo AND STB.StockSysNo=@StockSysNo AND STB.Number=@Number;
        IF(@Flag>0)
        BEGIN        
           IF(@Quantity<>0)
           BEGIN 
             UPDATE TOP(1) OverseaInventoryManagement.dbo.St_Batch 
             SET   Quantity=@Quantity,EditUser=@InUser,EditDate=getDate() 
             WHERE BatchNumber=@BatchNumber AND ProductSysNo=@ProductSysNo AND StockSysNo=@StockSysNo AND Number=@Number;       
           END 
           ELSE
           BEGIN
             DELETE FROM OverseaInventoryManagement.dbo.St_Batch 
             WHERE BatchNumber=@BatchNumber AND ProductSysNo=@ProductSysNo AND StockSysNo=@StockSysNo AND Number=@Number;     
           END
        END       
        ELSE
        BEGIN
            IF(@Quantity<>0)
            BEGIN          
	            INSERT INTO OverseaInventoryManagement.dbo.St_Batch
	            (
	               Number
	              ,Type
	              ,BatchNumber
	              ,ProductSysNo
	              ,Quantity
	              ,ReturnQty
	              ,InUser
	              ,InDate
	              ,EditUser
	              ,EditDate
                ,StockSysNo
	            )
	            VALUES
	            (
	             @Number
	            ,@Type
	            ,@BatchNumber
	            ,@ProductSysNo
	            ,@Quantity
	            ,0
	            ,@InUser
	            ,getDate()
	            ,@InUser
	            ,getDate()
              ,@StockSysNo
	            );            
            END         
        END                               
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@BatchNumber" dbType="AnsiStringFixedLength" />
      <param name="@Type" dbType="AnsiStringFixedLength" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@ReturnQty" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@InUser" dbType="AnsiStringFixedLength" />
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="TargetUpdateSTBInfo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
	      DECLARE @Flag INT      
        SELECT  @Flag=COUNT(*) FROM OverseaInventoryManagement.dbo.St_Batch STB  WITH(NOLOCK)
        WHERE   STB.BatchNumber=@BatchNumber AND STB.ProductSysNo=@ProductSysNo AND STB.StockSysNo=@StockSysNo AND STB.Number=@Number AND ReturnQty<>0 AND ReturnQty IS NOT NULL;
        IF(@Flag>0)
        BEGIN        
           IF(@Quantity<>0)
           BEGIN 
             UPDATE TOP(1) OverseaInventoryManagement.dbo.St_Batch 
             SET   ReturnQty=@Quantity,EditUser=@InUser,EditDate=getDate() 
             WHERE BatchNumber=@BatchNumber AND ProductSysNo=@ProductSysNo AND StockSysNo=@StockSysNo AND Number=@Number AND ReturnQty<>0 AND ReturnQty IS NOT NULL;       
           END 
           ELSE
           BEGIN
             DELETE FROM OverseaInventoryManagement.dbo.St_Batch 
             WHERE BatchNumber=@BatchNumber AND ProductSysNo=@ProductSysNo AND StockSysNo=@StockSysNo AND Number=@Number AND ReturnQty<>0 AND ReturnQty IS NOT NULL;          
           END
        END       
        ELSE
        BEGIN
            IF(@Quantity<>0)
            BEGIN          
	            INSERT INTO OverseaInventoryManagement.dbo.St_Batch
	            (
	               Number
	              ,Type
	              ,BatchNumber
	              ,ProductSysNo
	              ,Quantity
	              ,ReturnQty
	              ,InUser
	              ,InDate
	              ,EditUser
	              ,EditDate
                ,StockSysNo
	            )
	            VALUES
	            (
	             @Number
	            ,@Type
	            ,@BatchNumber
	            ,@ProductSysNo
	            ,0
	            ,@Quantity
	            ,@InUser
	            ,getDate()
	            ,@InUser
	            ,getDate()
              ,@StockSysNo
	            );            
            END         
        END                               
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@BatchNumber" dbType="AnsiStringFixedLength" />
      <param name="@Type" dbType="AnsiStringFixedLength" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@ReturnQty" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@InUser" dbType="AnsiStringFixedLength" />
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="SourceUpdateSTBInfo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
	      DECLARE @Flag INT      
        SELECT  @Flag=COUNT(*) FROM OverseaInventoryManagement.dbo.St_Batch STB  WITH(NOLOCK)
        WHERE   STB.BatchNumber=@BatchNumber AND STB.ProductSysNo=@ProductSysNo AND STB.StockSysNo=@StockSysNo AND STB.Number=@Number AND ( ReturnQty=0 OR ReturnQty IS NULL);
        IF(@Flag>0)
        BEGIN        
           IF(@Quantity<>0)
           BEGIN 
             UPDATE TOP(1) OverseaInventoryManagement.dbo.St_Batch 
             SET   Quantity=@Quantity,EditUser=@InUser,EditDate=getDate() 
             WHERE BatchNumber=@BatchNumber AND ProductSysNo=@ProductSysNo AND StockSysNo=@StockSysNo AND Number=@Number AND ( ReturnQty=0 OR ReturnQty IS NULL) ;       
           END 
           ELSE
           BEGIN
             DELETE FROM OverseaInventoryManagement.dbo.St_Batch 
             WHERE BatchNumber=@BatchNumber AND ProductSysNo=@ProductSysNo AND StockSysNo=@StockSysNo AND Number=@Number AND ( ReturnQty=0  OR ReturnQty IS NULL);     
           END
        END       
        ELSE
        BEGIN
            IF(@Quantity<>0)
            BEGIN          
	            INSERT INTO OverseaInventoryManagement.dbo.St_Batch
	            (
	               Number
	              ,Type
	              ,BatchNumber
	              ,ProductSysNo
	              ,Quantity
	              ,ReturnQty
	              ,InUser
	              ,InDate
	              ,EditUser
	              ,EditDate
                ,StockSysNo
	            )
	            VALUES
	            (
	             @Number
	            ,@Type
	            ,@BatchNumber
	            ,@ProductSysNo
	            ,@Quantity
	            ,0
	            ,@InUser
	            ,getDate()
	            ,@InUser
	            ,getDate()
              ,@StockSysNo
	            );            
            END         
        END                               
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@BatchNumber" dbType="AnsiStringFixedLength" />
      <param name="@Type" dbType="AnsiStringFixedLength" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@ReturnQty" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@InUser" dbType="AnsiStringFixedLength" />
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>
  
  <dataCommand name="DeleteBatchItemOfSTB" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[	    
            DELETE FROM  OverseaInventoryManagement.dbo.St_Batch 
            WHERE Number=@Number  AND ProductSysNo = @ProductSysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="DeleteAllBatchItem" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[	    
            DELETE FROM  OverseaInventoryManagement.dbo.St_Batch 
            WHERE Number=@Number;
      ]]>
    </commandText>
    <parameters>
      <param name="@Number" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="QueryBatchesByBillSysNoAndProductSysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT
      SB.SysNo
      ,SB.Number
      ,SB.[type]
      ,SB.BatchNumber
      ,SB.ProductSysNo
      ,SB.StockSysNo
      ,SB.Quantity
      ,SB.ReturnQty
      ,PB.MfgDate
      ,PB.ExpDate
      ,PBS.ActualQty
      ,PBS.AllocatedQty
      ,PBS.InDate AS InStockDate
      ,PBM.MaxDeliveryDays
      ,PBM.MinReceiptDays
      FROM OverseaInventoryManagement.dbo.St_Batch AS SB  WITH(NOLOCK)
      INNER JOIN OverseaInventoryManagement.dbo.Product_Batch AS PB WITH(NOLOCK) 
      ON SB.BatchNumber = PB.BatchNumber AND PB.ProductSysNo = @ProductSysNo
      INNER JOIN OverseaInventoryManagement.dbo.Product_Batch_Stock AS PBS WITH(NOLOCK)
      ON PBS.BatchNumber = SB.BatchNumber AND PBS.ProductSysNo = @ProductSysNo
      INNER JOIN OverseaContentManagement.dbo.Product_BatchManagementInfo AS PBM WITH(NOLOCK)
      ON PBM.ProductSysNo=@ProductSysNo
      WHERE SB.[Type]=@Type AND SB.Number=@Number AND SB.ProductSysNo = @ProductSysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@Type" dbType="AnsiStringFixedLength"/>
      <param name="@ProductSysNo" dbType="Int32"/>
      <param name="@Number" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="JobGetProductRingDetails" database="NCService" commandType="Text">
    <commandText>
    <![CDATA[
    SELECT DISTINCT
    p.BrandSysNo
    ,p.C3SysNo
    ,pb.ProductSysNo
    ,p.ProductID
    ,p.ProductName
    ,pb.BatchNumber
    ,pbs.ActualQty
    ,DATEDIFF(DAY,GetDate(),pb.ExpDate) as LeftRingDays
    ,pb.ExpDate
    ,pr.Email
    FROM OverseaInventoryManagement.dbo.Product_Batch (nolock) as pb
    inner join OverseaInventoryManagement.dbo.Product_Batch_Stock (nolock) as pbs
    ON pb.BatchNumber = pbs.BatchNumber and pb.ProductSysNo = pbs.ProductSysNo
    inner join IPP3.dbo.Product (nolock) as p
    ON p.Status = 1 and p.SysNo = pb.ProductSysNo
    inner join OverseaContentManagement.dbo.Product_BatchManagementInfo (nolock) as pbm
    ON pbm.ProductSysNo = p.SysNo
    inner join OverseaInventoryManagement.dbo.Product_Ring (nolock) as pr
    on pr.BrandSysNo = p.BrandSysNo and pr.C3SysNo = p.C3SysNo
    WHERE DATEDIFF(DAY,GetDate(),pb.ExpDate)<pr.RingDay
    AND pbs.ActualQty > 0
    ]]>
    </commandText>
  </dataCommand>
  <dataCommand name="Inventory_GetProductInventroyType" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT top 1 InventoryType from ipp3.dbo.product with(nolock)     
      WHERE SysNo = @ProductSysNo
      ]]>
    </commandText>
    <parameters>     
      <param name="@ProductSysNo" dbType="Int32"/>     
    </parameters>
  </dataCommand>
  <!--获取同仓库成本序列-->
  <dataCommand name="Inventory_GetCostListByProductStock"  database="NCService" commandType="Text">
    <commandText>
      <![CDATA[     
        SELECT [Sysno]
        ,[ProductSysNo]
        ,[BillType]
        ,[BillSysNo]
        ,[Cost]
        ,[Quantity]
        ,[LeftQuantity]
        ,[LockQuantity]
        ,[WarehouseNumber]
        FROM [OverseaInventoryManagement].[dbo].[ProductCostIn] WITH(NOLOCK)
        where ProductSysNo=@ProductSysNo and LeftQuantity-LockQuantity>0 and WarehouseNumber=@WarehouseNumber
        order by [Priority],sysno 
		]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@WarehouseNumber" dbType="Int32" />
    </parameters>
  </dataCommand>

</dataOperations>
