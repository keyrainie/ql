<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">

  <dataCommand name="Inventory_GetLastVerifiedRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT 
    a.SysNo 
   ,a.productsysno 
   ,a.stockSysNo 
   ,a.Status 
   ,a.AuditNote 
   ,e.StockName 
FROM IPP3.dbo.st_virtual_request AS a WITH(NOLOCK) 
LEFT JOIN IPP3.dbo.Stock AS e WITH(NOLOCK) 
    ON e.SysNo = a.StockSysNo 
WHERE 
    a.sysno IN (
        SELECT 
            MAX(SysNo) 
        FROM (
                SELECT 
                    Sysno
                   ,StockSysNo 
                FROM IPP3.dbo.st_virtual_request 
                WHERE 
                    Status=-1 
                    AND ProductSysNo=@ProductSysNo 
                    AND CompanyCode=@CompanyCode
             
             ) AS tempTable 
        GROUP BY tempTable.StockSysNo
     )
	 
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_QueryVirtualRequestMemo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT @TotalCount = COUNT(a.SysNo)     
      FROM IPP3.dbo.St_Virtual AS a WITH(NOLOCK)  
      INNER JOIN OverseaContentManagement.dbo.V_IM_Product AS b WITH(NOLOCK) 
            ON a.ProductSysNo = b.SysNo 
      INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS c WITH(NOLOCK) 
            ON a.CreateUserSysNo = c.UserSysNo 
      #StrWhere#

      SELECT 
	      [SysNo],
	      [ProductSysNo],
	      [VirtualQuantity],
	      [CreateDate],
	      [CreateUserSysNo],
	      [Note],
	      [StockSysNo],
	      [ProductID],
	      [ProductName],
	      [CreateUserName],
        [VirtualType],
        [VirtualTypeString],
        [CompanyCode],
        [LanguageCode]
	    FROM
	    (
		    SELECT TOP (@EndNumber)
			     a.SysNo
          ,a.ProductSysNo
          ,a.VirtualQty AS VirtualQuantity
          ,a.CreateTime AS CreateDate
          ,a.CreateUserSysNo
          ,a.Note
          ,a.StockSysNo
          ,a.VirtualType
          ,'' as [VirtualTypeString]
          ,b.ProductID
          ,b.ProductName
          ,c.DisplayName AS CreateUserName
          ,a.CompanyCode
          ,a.LanguageCode
          ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
        FROM IPP3.dbo.St_Virtual AS a WITH(NOLOCK) 
        INNER JOIN OverseaContentManagement.dbo.V_IM_Product AS b WITH(NOLOCK) 
            ON a.ProductSysNo = b.SysNo 
        INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS c WITH(NOLOCK) 
            ON a.CreateUserSysNo = c.UserSysNo 
		    #StrWhere# 
	    ) AS Result 
      WHERE RowNumber > @StartNumber  AND RowNumber < @EndNumber
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="Inventory_QueryVirtualRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT @TotalCount = COUNT(a.SysNo)     
      FROM IPP3.dbo.St_Virtual_Request AS a WITH(NOLOCK) 
      #StrWhere#

      SELECT 
	      [SysNo],
	      [ProductSysNo],
	      [StockSysNo],
	      [VirtualQty] as VirtualQuantity,
        [TakeEffectVirtualQty] as ActiveVirtualQuantity,
	      [CreateTime] as CreateDate,
	      [CreateUserSysNo],
	      [PMRequestNote] as RequestNote,
	      [AuditNote],
	      [AuditTime] as AuditDate,
	      [AuditUserSysNo],
        [Status] as RequestStatus,
        [VirtualType],
        '' as [VirtualTypeString],
        [StartTime] as StartDate,
        [EndTime] as EndDate, 
        [CreateUserName],
        [AuditUserName],
        [ProductID],
        [ProductName],
        [StockName],
        [CompanyCode],
        [LanguageCode]
	    FROM
	    (
        SELECT TOP (@EndNumber)
            a.SysNo
           ,a.ProductSysNo
           ,a.StockSysNo
           ,a.VirtualQty
           ,a.CreateTime
           ,a.CreateUserSysNo
           ,a.PMRequestNote
           ,a.AuditNote
           ,a.AuditTime
           ,a.AuditUserSysNo
           ,a.Status
           ,a.VirtualType 
           ,a.StartTime
           ,a.EndTime 
           ,'TakeEffectVirtualQty' = CASE
										                       WHEN  ((a.Status=2 or a.Status=4) AND (s.AvailableQty+s.ConsignQty)<0) THEN ABS(s.AvailableQty+s.ConsignQty)
									                         ELSE  0
                                      END 
           ,b.DisplayName AS CreateUserName
           ,c.DisplayName AS AuditUserName
           ,d.ProductID AS ProductID
           ,d.ProductName AS ProductName
           ,e.StockName
           ,a.CompanyCode
           ,a.LanguageCode
           ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
        FROM IPP3.dbo.St_Virtual_Request AS a WITH(NOLOCK) 
        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS b WITH(NOLOCK) 
            ON a.CreateUserSysNo = b.UserSysNo 
        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS c WITH(NOLOCK) 
            ON a.AuditUserSysNo = c.UserSysNo
        LEFT JOIN OverseaContentManagement.dbo.V_IM_Product AS d WITH(NOLOCK) 
            ON d.SysNo = a.ProductSysNo 
        LEFT JOIN IPP3.dbo.Stock AS e WITH(NOLOCK) 
            ON e.SysNo = a.StockSysNo 
        LEFT JOIN  IPP3.dbo.Inventory_Stock s WITH(NOLOCK) 
            ON s.StockSysNo = a.StockSysNo  AND s.ProductSysNo=a.ProductSysNo
		    #StrWhere# 
	    ) AS Result 
      WHERE RowNumber > @StartNumber
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="Inventory_QueryVirtualRequestMemoCreateUserList" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[         
      SELECT DISTINCT 
	        a.CreateUserSysNo AS SysNo
         ,b.DisplayName AS UserDisplayName 
         ,b.LoginName AS UserID         
      FROM IPP3.dbo.St_Virtual AS a WITH(NOLOCK) 
      INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS b WITH(NOLOCK) 
          ON a.CreateUserSysNo = b.UserSysNo 
      WHERE a.CompanyCode=@CompanyCode AND DisplayName='系统同步'
      UNION All
      SELECT SysNo,UserDisplayName,UserID
      FROM (
		      SELECT DISTINCT TOP 1000
			      a.CreateUserSysNo AS SysNo
		        ,b.DisplayName AS UserDisplayName 
		        ,b.LoginName AS UserID         
		      FROM IPP3.dbo.St_Virtual AS a WITH(NOLOCK) 
		      INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS b WITH(NOLOCK) 
		        ON a.CreateUserSysNo = b.UserSysNo 
		      WHERE a.CompanyCode=@CompanyCode AND DisplayName<>'系统同步'
		      ORDER BY b.DisplayName
	      ) a
      ]]>
    </commandText>
    <parameters>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_QueryVirtualRequestCreateUserList" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
    SELECT DISTINCT 
	        a.CreateUserSysNo AS SysNo
         ,b.DisplayName AS UserDisplayName 
         ,b.LoginName AS UserID         
      FROM IPP3.dbo.St_Virtual_Request AS a WITH(NOLOCK) 
      INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS b WITH(NOLOCK) 
          ON a.CreateUserSysNo = b.UserSysNo 
      WHERE a.CompanyCode=@CompanyCode AND DisplayName='系统同步'
    UNION All
    SELECT SysNo,UserDisplayName,UserID
    FROM (
        SELECT DISTINCT TOP 1000
	        a.CreateUserSysNo AS SysNo
	        ,b.DisplayName AS UserDisplayName 
	        ,b.LoginName AS UserID         
        FROM IPP3.dbo.St_Virtual_Request AS a WITH(NOLOCK) 
        INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS b WITH(NOLOCK) 
	        ON a.CreateUserSysNo = b.UserSysNo 
        WHERE a.CompanyCode=@CompanyCode AND DisplayName<>'系统同步'
        ORDER BY b.DisplayName
    ) a
      ]]>
    </commandText>
    <parameters>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_QueryVirtualItems" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT @TotalCount = COUNT(a.SysNo)     
      FROM OverseaContentManagement.dbo.V_CM_ItemCommonInfo AS a WITH(NOLOCK) 
      INNER JOIN IPP3.dbo.Inventory_Stock AS b WITH(NOLOCK)
	      ON b.ProductSysNo=a.SysNo
      INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo AS d WITH(NOLOCK)
	      ON d.Category3Sysno=a.Category3SysNo
      LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList v WITH(NOLOCK) 
        ON a.MerchantSysNo = v.SysNo
      #StrWhere#

      SELECT 
	      [ItemNumber],
        [ItemCode],
        [ItemName],
	      [WarehouseNumber] StockSysNo,
	      [AccountQuantity],
	      [AvailableQuantity],
	      [AllocatedQuantity],
	      [OrderQuantity],
	      [VirtualQuantity],
	      [ConsignQuantity],
	      [OnlineQuantity],
	      [PurchaseQuantity],
        [WarehouseAccountQuantity],
        [WarehouseSafeQuantity],
        [DisplayName] PMName,
        [UnitCost],
        [ItemPoint],
        [Status],
        [Day1SalesCount],
        [Day2SalesCount],
        [Day3SalesCount],
        [Day4SalesCount],
        [Day5SalesCount],
        [Day6SalesCount],
        [Day7SalesCount],
        [Week1SalesCount],
        [Week2SalesCount],
        [Week3SalesCount],
        [Week4SalesCount],
        [Month1SalesCount],
        [Month2SalesCount],
        [Month3SalesCount],
        [CurrentUnitPrice],
        [LastPrice],
        [LastVendor],
        [CompanyCode],
        [LanguageCode],
        [ISSynProduct],
        [VFType],
        [ISLimitTimeAndQtyProduct]
	    FROM
	    (
        SELECT TOP (@EndNumber) 
         a.SysNo AS ItemNumber
        ,a.ProductID AS ItemCode
        ,a.ProductName AS ItemName
        ,b.StockSysNo AS WarehouseNumber
        ,b.AccountQty AS AccountQuantity
        ,b.AvailableQty AS AvailableQuantity
        ,b.AllocatedQty AS AllocatedQuantity
        ,b.OrderQty AS OrderQuantity
        ,b.VirtualQty AS VirtualQuantity
        ,b.ConsignQty AS ConsignQuantity
        ,(b.VirtualQty + b.ConsignQty + b.AvailableQty) AS OnlineQuantity
        ,b.PurchaseQty AS PurchaseQuantity
        ,b.AccountQty AS WarehouseAccountQuantity
        ,b.SafeQty AS WarehouseSafeQuantity
        ,c.DisplayName
        ,h.UnitCost
        ,h.ItemPoint
        ,a.Status
        ,ISNULL(g.d1,0) as Day1SalesCount
        ,ISNULL(g.d2,0) as Day2SalesCount
        ,ISNULL(g.d3,0) as Day3SalesCount
        ,ISNULL(g.d4,0) as Day4SalesCount
        ,ISNULL(g.d5,0) as Day5SalesCount
        ,ISNULL(g.d6,0) as Day6SalesCount
        ,ISNULL(g.d7,0) as Day7SalesCount
        ,ISNULL(g.w1,0) as Week1SalesCount
        ,ISNULL(g.w2,0) as Week2SalesCount
        ,ISNULL(g.w3,0) as Week3SalesCount
        ,ISNULL(g.w4,0) as Week4SalesCount
        ,ISNULL(g.m1,0) as Month1SalesCount
        ,ISNULL(g.m2,0) as Month2SalesCount
        ,ISNULL(g.m3,0) as Month3SalesCount
        ,h.CurrentPrice AS CurrentUnitPrice
        ,f.VendorName AS LastVendor
        ,e.LastPrice AS LastPrice
        ,a.CompanyCode
        ,a.LanguageCode       
        ,ISSynProduct = case when a.vfitem='Y' then 1 else 0 end
        ,p3pM.VFType
        ,ISLimitTimeAndQtyProduct
        ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
        FROM OverseaContentManagement.dbo.V_CM_ItemCommonInfo AS a WITH(NOLOCK)
        INNER JOIN IPP3.dbo.Inventory_Stock AS b WITH(NOLOCK)
	        ON b.ProductSysNo=a.SysNo
        INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo AS d WITH(NOLOCK)
	        ON d.Category3Sysno=a.Category3SysNo
        LEFT JOIN OverseaContentManagement.dbo.V_IM_Product_SaleTrend AS g WITH(NOLOCK)
          ON g.productsysno=a.sysNo AND b.stockSysNo=g.warehousenumber
        LEFT JOIN OverseaContentManagement.dbo.V_CM_ItemPriceInfo AS h WITH(NOLOCK)
          ON h.sysno=a.sysNo
        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS c WITH(NOLOCK)
	        ON c.UserSysNo=a.PMUserSysNo
        LEFT JOIN OverseaContentManagement.dbo.V_CM_Product_LastPOInfo_V1 AS e WITH(NOLOCK)
          ON e.ProductSysNo=b.ProductSysNo
        LEFT JOIN  OverseaPOASNManagement.dbo.V_PM_VendorList AS f WITH(NOLOCK)
          ON e.lastVendorSysNo=f.sysNo
        LEFT JOIN OverseaContentManagement.dbo.V_CM_Product3Party_Mapping  AS p3pM WITH(NOLOCK)
		    ON p3pM.ProductSysno = a.SysNo AND p3pM.PartnerType<>'T' AND p3pM.PartnerType<>'D' AND p3pM.PartnerType<>'M' AND   p3pM.PartnerType IS NOT NULL
        LEFT JOIN  (
                     SELECT DISTINCT(ProductSysno) AS ISLimitTimeAndQtyProduct FROM IPP3.dbo.Sale_CountDown AS sc WITH(NOLOCK)
                     WHERE SC.IsLimitedQty=1  AND SC.[Status]=1
                    ) AS TempSaleCountDown
        ON TempSaleCountDown.ISLimitTimeAndQtyProduct=a.Sysno 
        LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList v WITH(NOLOCK) 
        ON a.MerchantSysNo = v.SysNo
		    #StrWhere# 
	    ) AS Result 
      WHERE RowNumber > @StartNumber
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="Inventory_QueryVirtualItemsWithInventory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT @TotalCount = COUNT(a.SysNo)     
      FROM OverseaContentManagement.dbo.V_CM_ItemCommonInfo AS a WITH(NOLOCK) 
      INNER JOIN IPP3.dbo.Inventory AS b WITH(NOLOCK)
	      ON b.ProductSysNo=a.SysNo
      INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo AS d WITH(NOLOCK)
	      ON d.Category3Sysno=a.Category3SysNo
      LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList v WITH(NOLOCK) 
       ON a.MerchantSysNo = v.SysNo
      #StrWhere#

      SELECT 
	      [ItemNumber],
        [ItemCode],
        [ItemName],
	      [WarehouseNumber] StockSysNo,
	      [AccountQuantity],
	      [AvailableQuantity],
	      [AllocatedQuantity],
	      [OrderQuantity],
	      [VirtualQuantity],
	      [ConsignQuantity],
	      [OnlineQuantity],
	      [PurchaseQuantity],
        [WarehouseAccountQuantity],
        [WarehouseSafeQuantity],
        [DisplayName] PMName,
        [UnitCost],
        [ItemPoint],
        [Status],
        [Day1SalesCount],
        [Day2SalesCount],
        [Day3SalesCount],
        [Day4SalesCount],
        [Day5SalesCount],
        [Day6SalesCount],
        [Day7SalesCount],
        [Week1SalesCount],
        [Week2SalesCount],
        [Week3SalesCount],
        [Week4SalesCount],
        [Month1SalesCount],
        [Month2SalesCount],
        [Month3SalesCount],
        [CurrentUnitPrice],
        [LastPrice],
        [LastVendor],
        [CompanyCode],
        [LanguageCode],
        [ISSynProduct],
        [VFType],
        [ISLimitTimeAndQtyProduct]
	    FROM
	    (
        SELECT TOP (@EndNumber) 
         a.SysNo AS ItemNumber
        ,a.ProductID AS ItemCode
        ,a.ProductName AS ItemName
        ,51 AS WarehouseNumber
        ,b.AccountQty AS AccountQuantity
        ,b.AvailableQty AS AvailableQuantity
        ,b.AllocatedQty AS AllocatedQuantity
        ,b.OrderQty AS OrderQuantity
        ,b.VirtualQty AS VirtualQuantity
        ,b.ConsignQty AS ConsignQuantity
        ,(b.VirtualQty + b.ConsignQty + b.AvailableQty) AS OnlineQuantity
        ,b.PurchaseQty AS PurchaseQuantity
        ,0 AS WarehouseAccountQuantity
        ,0 AS WarehouseSafeQuantity
        ,c.DisplayName
        ,a.UnitCost
        ,a.ItemPoint
        ,a.Status
        ,ISNULL(a.Day1SalesCount,0) as Day1SalesCount
        ,ISNULL(a.Day2SalesCount,0) as Day2SalesCount
        ,ISNULL(a.Day3SalesCount,0) as Day3SalesCount
        ,ISNULL(a.Day4SalesCount,0) as Day4SalesCount
        ,ISNULL(a.Day5SalesCount,0) as Day5SalesCount
        ,ISNULL(a.Day6SalesCount,0) as Day6SalesCount
        ,ISNULL(a.Day7SalesCount,0) as Day7SalesCount
        ,ISNULL(a.Week1SalesCount,0) as Week1SalesCount
        ,ISNULL(a.Week2SalesCount,0) as Week2SalesCount
        ,ISNULL(a.Week3SalesCount,0) as Week3SalesCount
        ,ISNULL(a.Week4SalesCount,0) as Week4SalesCount
        ,ISNULL(a.Month1SalesCount,0) as Month1SalesCount
        ,ISNULL(a.Month2SalesCount,0) as Month2SalesCount
        ,ISNULL(a.Month3SalesCount,0) as Month3SalesCount
        ,a.CurrentPrice AS CurrentUnitPrice
        ,f.VendorName AS LastVendor
        ,e.LastPrice AS LastPrice
        ,a.CompanyCode
        ,a.LanguageCode
        ,ISSynProduct = case when a.vfitem='Y' then 1 else 0 end
        ,p3pM.VFType
        ,ISLimitTimeAndQtyProduct
		    ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
        FROM OverseaContentManagement.dbo.V_CM_ItemCommonInfo AS a WITH(NOLOCK)
        INNER JOIN IPP3.dbo.Inventory AS b WITH(NOLOCK)
	        ON b.ProductSysNo=a.SysNo
        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS c WITH(NOLOCK)
	        ON c.UserSysNo=a.PMUserSysNo
        INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo AS d WITH(NOLOCK)
	        ON d.Category3Sysno=a.Category3SysNo
        LEFT JOIN OverseaContentManagement.dbo.V_CM_Product_LastPOInfo_V1 AS e WITH(NOLOCK)
          ON e.ProductSysNo=b.ProductSysNo
        LEFT JOIN  OverseaPOASNManagement.dbo.V_PM_VendorList AS f WITH(NOLOCK)
          ON e.lastVendorSysNo=f.sysNo
        LEFT JOIN OverseaContentManagement.dbo.V_CM_Product3Party_Mapping  AS p3pM WITH(NOLOCK)
		    ON p3pM.ProductSysno = a.SysNo  AND p3pM.PartnerType<>'T' AND p3pM.PartnerType<>'D' AND p3pM.PartnerType<>'M' AND   p3pM.PartnerType IS NOT NULL
         LEFT JOIN  (
                     SELECT DISTINCT(ProductSysno) AS ISLimitTimeAndQtyProduct FROM IPP3.dbo.Sale_CountDown AS sc WITH(NOLOCK)
                     WHERE SC.IsLimitedQty=1  AND SC.[Status]=1
                    ) AS TempSaleCountDown
        ON TempSaleCountDown.ISLimitTimeAndQtyProduct=a.Sysno 
       LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList v WITH(NOLOCK) 
        ON a.MerchantSysNo = v.SysNo
		    #StrWhere# 
	    ) AS Result 
      WHERE RowNumber > @StartNumber
      ]]>
    </commandText>
  </dataCommand>


  <dataCommand name="Inventory_QueryVirtualInventoryCloseLog" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT @TotalCount = COUNT(SysNo)     
      FROM OverseaInventoryManagement.dbo.VirtualRequest_Action_Log WITH(NOLOCK)
      #StrWhere# 
      
      SELECT 
	        [SysNo]
         ,[VirtualRequestSysNo]
         ,[ActionType]
         ,[VirtualRequestStatus]
         ,[VirtualQtyFrom]
         ,[AdjustVirtualQty]
         ,[VirtualQty]
         ,[Memo]
         ,[InDate]
         ,[InUser]
         ,[EditDate]
         ,[EditUser]
         ,[CompanyCode]
         ,[LanguageCode]
         ,[StoreCompanyCode]
	    FROM
	    (
        SELECT TOP (@EndNumber) 
          SysNo
         ,VirtualRequestSysNo
         ,ActionType
         ,VirtualRequestStatus
         ,VirtualQtyFrom
         ,AdjustVirtualQty
         ,VirtualQty
         ,Memo
         ,InDate
         ,InUser
         ,EditDate
         ,EditUser
         ,CompanyCode
         ,LanguageCode
         ,StoreCompanyCode
		     ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
        FROM OverseaInventoryManagement.dbo.VirtualRequest_Action_Log WITH(NOLOCK)      
		    #StrWhere# 
	    ) AS Result 
      WHERE RowNumber > @StartNumber
      ]]>
    </commandText>
    <parameters>
      <param name="@VirtualRequestSysNo" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>


  <dataCommand name="Inventory_GetTakeEffectVirtualQty" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[      
       SELECT 
           'TakeEffectVirtualQty' = CASE
										                     WHEN  (ST.AvailableQty+ST.ConsignQty)<0 THEN ABS(ST.AvailableQty+ST.ConsignQty)
									                       ELSE  0
                                    END           
        FROM  IPP3.dbo.Inventory_Stock ST WITH(NOLOCK)        
        WHERE ST.ProductSysNo=@ProductSysNo
        AND   ST.StockSysNo  =@StockSysNo
        AND   ST.CompanyCode =@CompanyCode
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@StockSysNo"   dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="Inventory_ExistNeedCloseRequestByStockAndItem" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT   ISNULL(SUM(VirtualQty),0)   AS VirtualQty
      FROM IPP3.dbo.St_Virtual_Request WITH(NOLOCK)
      WHERE 
          StockSysNo=@StockSysNo 
          AND ProductSysNo=@ProductSysNo 
          AND Status IN (1,2,4)
          AND CompanyCode =@CompanyCode
          AND SysNo<>@SysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@SysNo" dbType="Int32"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>


  <dataCommand name="QueryInventoryByStock" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
     IF (EXISTS(SELECT SysNo FROM OverseaContentManagement.dbo.V_CM_ItemBasicInfo WHERE SysNo=@ItemSysNumber  ))
      BEGIN	     
        SELECT 
               Temp.StockName
	            ,Temp.StockSysNo AS StockSysNo
              ,@ItemSysNumber  AS ProductSysNo
	            ,Temp.ProductID
	            ,Temp.ProductName
	            ,ISNULL(Temp.AccountQty,0) as AccountQty
	            ,ISNULL(Temp.AvailableQty,0) as AvailableQty     
	            ,ISNULL(Temp.AllocatedQty,0) as AllocatedQty
	            ,ISNULL(Temp.OrderQty,0) as OrderQty
	            ,ISNULL(Temp.VirtualQty,0) as VirtualQty
	            ,ISNULL(Temp.ConsignQty,0) as ConsignQty
	            ,ISNULL(Temp.PurchaseQty,0) as PurchaseQty
	            ,ISNULL(Temp.ShiftInQty,0) as ShiftInQty
	            ,ISNULL(Temp.ShiftOutQty,0) as ShiftOutQty
	            ,Temp.PositionInWarehouse
              ,Temp.CompanyCode
              ,Temp.LanguageCode
				      ,Temp.ISSynProduct
              ,TempSyn.VFType
              ,TempSyn.LimitVFQty               
              ,TempSyn.InventoryQty
        FROM 
            ( 
                  SELECT 
                   a.StockName             AS StockName
	                ,a.SysNo                 AS StockSysNo
                  ,@ItemSysNumber          AS ItemSysNumber
	                ,d.ProductID             AS ProductID
	                ,d.ProductName           AS ProductName
	                ,d.AccountQty            AS AccountQty
	                ,d.AvailableQty          AS AvailableQty	          
	                ,d.AllocatedQty          AS AllocatedQty
	                ,d.OrderQty              AS OrderQty
	                ,d.VirtualQty            AS VirtualQty
	                ,d.ConsignQty            AS ConsignQty
	                ,d.PurchaseQty           AS PurchaseQty
	                ,d.ShiftInQty            AS ShiftInQty
	                ,d.ShiftOutQty           AS ShiftOutQty
	                ,d.PositionInWarehouse   AS PositionInWarehouse
                  ,d.CompanyCode           AS CompanyCode
                  ,d.LanguageCode          AS  LanguageCode  
                  ,ISSynProduct = Case 
                                         WHEN
											                      (SELECT DISTINCT VCM.VFitem                       
												                     FROM  overseaContentManagement.dbo.V_CM_ItemCommonInfo AS VCM WITH(NOLOCK)
												                     WHERE  VCM.SysNo = @ItemSysNumber
												                    ) ='Y'
								                        THEN  1 
						                            ELSE  0
						                       END                    
                FROM IPP3.dbo.Stock AS a WITH(NOLOCK)
                LEFT JOIN 
                (
                    SELECT 
                        c.sysNo AS ItemSysNumber 
                       ,b.sysNo AS InventorySysNumber 
	                     ,b.StockSysNo
                       ,c.ProductID 
                       ,c.ProductName 
                       ,b.AccountQty 
                       ,b.AvailableQty 
                       ,b.AllocatedQty       
                       ,b.OrderQty 
                       ,b.VirtualQty 
                       ,b.ConsignQty 
                       ,b.PurchaseQty 
                       ,b.ShiftInQty 
                       ,b.ShiftOutQty 
                       ,b.Position1 AS PositionInWarehouse 
                       ,b.CompanyCode
                       ,b.LanguageCode                                    
                    FROM IPP3.dbo.Inventory_Stock AS b WITH(NOLOCK) 
                    INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo AS c WITH(NOLOCK)
                        ON c.SysNo = b.ProductSysNo               
                    WHERE 
                        c.SysNo  = @ItemSysNumber 
                        AND b.CompanyCode = @CompanyCode
                 ) AS d ON  d.StockSysNo = a.SysNo
                 WHERE a.CompanyCode = @CompanyCode
          ) AS Temp
          LEFT JOIN ( 
                      SELECT
                             ppMapping.SysNo                                 --映射表编号
                            ,ppMapping.ProductSysno                         --泰隆优选商品系统编号
                            ,ppMapping.ProductID                            --泰隆优选商品Item# 
                            ,ppMapping.VFType                               --设置规则（种）
                            ,ppMapping.LimitVFQty                           --限制数量或自定义数量
                            ,InventoryQty = CASE WHEN ppSynP.InventoryQty IS NULL THEN 0 ELSE   ppSynP.InventoryQty END                           --对应分仓库存量
                            FROM OverseaContentManagement.dbo.V_CM_Product3Party_Mapping  ppMapping WITH(NOLOCK) 
                            LEFT JOIN OverseaContentManagement.dbo.V_CM_Product3Party_SynProduct  ppSynP    WITH(NOLOCK)
                            ON ppMapping.SysNo = ppSynP.ProductMappingSysno
                            WHERE ppMapping.[Status]='A'  AND ppMapping.PartnerType<>'T' AND ppMapping.PartnerType<>'D' AND ppMapping.PartnerType<>'M' AND   ppMapping.PartnerType IS NOT NULL AND ppMapping.ProductSysno =@ItemSysNumber      
                   ) AS TempSyn
        ON  Temp.ItemSysNumber = TempSyn.ProductSysNo 
      END
      ]]>
    </commandText>
    <parameters>
      <param name="@ItemSysNumber" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetLastVerifiedRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT 
    a.SysNo 
   ,a.ProductSysNo 
   ,a.StockSysNo 
   ,a.Status 
   ,a.AuditNote 
   ,e.StockName 
   ,a.VirtualType
   ,a.CreateTime as CreateDate
   ,'' AS VirtualTypeString 
   ,a.VirtualQty as VirtualQuantity
   ,d.ProductName
FROM IPP3.dbo.st_virtual_request AS a WITH(NOLOCK) 
LEFT JOIN IPP3.dbo.Stock AS e WITH(NOLOCK) 
    ON e.SysNo = a.StockSysNo 
LEFT JOIN OverseaContentManagement.dbo.V_IM_Product AS d WITH(NOLOCK) 
    ON d.SysNo = a.ProductSysNo 
WHERE 
    a.sysno IN (
        SELECT 
            MAX(SysNo) 
        FROM (
                SELECT 
                    Sysno
                   ,StockSysNo 
                FROM IPP3.dbo.st_virtual_request 
                WHERE 
                    Status=-1 
                    AND ProductSysNo=@ProductSysNo 
                    AND CompanyCode=@CompanyCode
             
             ) AS tempTable 
        GROUP BY tempTable.StockSysNo
     )
	 
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="QueryVirtualRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
	      [SysNo],
	      [ProductSysNo],
	      [StockSysNo],
	      [VirtualQty] as VirtualQuantity,
        [TakeEffectVirtualQty],
	      [CreateTime] as [CreateDate],
	      [CreateUserSysNo],
	      [PMRequestNote],
	      [AuditNote],
	      [AuditTime],
	      [AuditUserSysNo],
        [Status] as RequestStatus,
        [VirtualType],
        '' as [VirtualTypeString],
        [StartTime],
        [EndTime], 
        [CreateUserName],
        [AuditUserName],
        [ProductID],
        [ProductName],
        [StockName],
        [CompanyCode],
        [LanguageCode]
	    FROM
	    (
        SELECT  a.SysNo
           ,a.ProductSysNo
           ,a.StockSysNo
           ,a.VirtualQty
           ,a.CreateTime
           ,a.CreateUserSysNo
           ,a.PMRequestNote
           ,a.AuditNote
           ,a.AuditTime
           ,a.AuditUserSysNo
           ,a.Status
           ,a.VirtualType 
           ,a.StartTime
           ,a.EndTime 
           ,'TakeEffectVirtualQty' = CASE
										                       WHEN  ((a.Status=2 or a.Status=4) AND (s.AvailableQty+s.ConsignQty)<0) THEN ABS(s.AvailableQty+s.ConsignQty)
									                         ELSE  0
                                      END 
           ,b.DisplayName AS CreateUserName
           ,c.DisplayName AS AuditUserName
           ,d.ProductID AS ProductID
           ,d.ProductName AS ProductName
           ,e.StockName
           ,a.CompanyCode
           ,a.LanguageCode
        FROM IPP3.dbo.St_Virtual_Request AS a WITH(NOLOCK) 
        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS b WITH(NOLOCK) 
            ON a.CreateUserSysNo = b.UserSysNo 
        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo AS c WITH(NOLOCK) 
            ON a.AuditUserSysNo = c.UserSysNo
        LEFT JOIN OverseaContentManagement.dbo.V_IM_Product AS d WITH(NOLOCK) 
            ON d.SysNo = a.ProductSysNo 
        LEFT JOIN IPP3.dbo.Stock AS e WITH(NOLOCK) 
            ON e.SysNo = a.StockSysNo 
        LEFT JOIN  IPP3.dbo.Inventory_Stock s WITH(NOLOCK) 
            ON s.StockSysNo = a.StockSysNo  AND s.ProductSysNo=a.ProductSysNo
		    #StrWhere# 
	    ) AS Result order by #BY#
      ]]>
    </commandText>
  </dataCommand>

  <!--Maintain BEGIN-->

  <dataCommand name="CreateVirtualInentory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        DECLARE @PreVirtualQty int
        SELECT 
            @PreVirtualQty=VirtualQty 
        FROM [IPP3].[dbo].[Inventory_Stock] WITH(NOLOCK)
        WHERE 
            StockSysNo=@StockSysNo 
            AND ProductSysNo=@ProductSysNo
            AND CompanyCode = @CompanyCode
        
        INSERT INTO [IPP3].[dbo].[St_Virtual]
           ([ProductSysNo]
           ,[VirtualQty]
           ,[CreateTime]
           ,[CreateUserSysNo]
           ,[Note]
           ,[StockSysNo]
           ,[VirtualType]
           ,[CompanyCode])
        VALUES
           (@ProductSysNo
           ,@VirtualQty - ISNULL(@PreVirtualQty,0)
           ,@CreateTime
           ,@CreateUserSysNo
           ,@Note
           ,@StockSysNo
           ,@VirtualType
           ,@CompanyCode)
           
        SELECT SCOPE_IDENTITY() AS sysNumber
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@VirtualQty" dbType="Int32" />
      <param name="@CreateTime" dbType="DateTime" />
      <param name="@CreateUserSysNo" dbType="Int32" />
      <param name="@Note" dbType="String" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@VirtualType" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>

  <dataCommand name="InsertVirtualRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      INSERT INTO IPP3.dbo.St_Virtual_Request 
      (
           ProductSysNo
          ,StockSysNo
          ,VirtualQty
          ,CreateTime
          ,CreateUserSysNo
          ,PMRequestNote
          ,Status
          ,VirtualType
          ,StartTime
          ,EndTime
          ,[CompanyCode]
      ) 
      VALUES 
      (
           @ProductSysNo
          ,@StockSysNo
          ,@VirtualQty
          ,@CreateTime
          ,@CreateUserSysNo
          ,@PMRequestNote
          ,@Status
          ,@VirtualType
          ,@StartTime
          ,@EndTime
          ,@CompanyCode
      )
      SELECT SCOPE_IDENTITY() AS SysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@VirtualQty" dbType="Int32" />
      <param name="@CreateTime" dbType="DateTime" />
      <param name="@CreateUserSysNo" dbType="Int32" />
      <param name="@PMRequestNote" dbType="String" />
      <param name="@Status" dbType="Int32" />
      <param name="@VirtualType" dbType="Int32" />
      <param name="@StartTime" dbType="DateTime" />
      <param name="@EndTime" dbType="DateTime" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>

  <dataCommand name="VerifyVirtualRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE IPP3.dbo.St_Virtual_Request 
      SET Status=@Status
         ,AuditNote=@AuditNote
         ,AuditTime=@AuditTime
         ,AuditUserSysNo=@AuditUserSysNo 
      WHERE 
          SysNo=@SysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@Status" dbType="Int32" />
      <param name="@AuditNote" dbType="String" />
      <param name="@AuditTime" dbType="DateTime" />
      <param name="@AuditUserSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateVirtualStatus" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE IPP3.dbo.St_Virtual_Request 
      SET Status=@Status
      WHERE 
          SysNo=@SysNo AND CompanyCode = @CompanyCode
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@Status" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>

  <dataCommand name="ExistOriginRequestByStockAndItem" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          SysNo 
      FROM IPP3.dbo.St_Virtual_Request WITH(NOLOCK)
      WHERE 
          StockSysNo=@StockSysNo 
          AND ProductSysNo=@ProductSysNo 
          AND Status=@Status
          AND CompanyCode = @CompanyCode
      ]]>
    </commandText>
    <parameters>
      <param name="@Status" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>

  <dataCommand name="ExistNeedCloseRequestByStockAndItem" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          SysNo 
         ,ProductSysNo as [VirtualProduct.SysNo]
         ,StockSysNo as [Stock.SysNo]
         ,VirtualQty as [VirtualQuantity]
         ,CreateTime  as [CreateDate]
         ,CreateUserSysNo  as [CreateUser.SysNo]
         ,PMRequestNote as [RequestNote]
         ,AuditNote
         ,AuditTime as [AuditDate]
         ,AuditUserSysNo as [AuditUser.SysNo]
         ,Status as [RequestStatus]
         ,VirtualType 
         ,CompanyCode
      FROM IPP3.dbo.St_Virtual_Request WITH(NOLOCK)
      WHERE 
          StockSysNo=@StockSysNo 
          AND ProductSysNo=@ProductSysNo 
          AND Status IN (0,1,2,4)
          AND CompanyCode = @CompanyCode
      ]]>
    </commandText>
    <parameters>
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>

  <dataCommand name="CloseRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
          EXECUTE OverseaInventoryManagement.dbo.UP_St_Virtual_Request_Close @StVirtualRequestSysNo,@Status,@IsAdjustVirtualQty,@InUser,@CompanyCode,@StoreCompanyCode,@LanguageCode,@ReturnValue OUTPUT
      ]]>
    </commandText>
    <parameters>
      <param name="@StVirtualRequestSysNo" dbType="Int32" />
      <param name="@Status" dbType="Int32"/>
      <param name="@IsAdjustVirtualQty" dbType="Int32" />
      <param name="@InUser" dbType="AnsiStringFixedLength"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
      <param name="@StoreCompanyCode" dbType="AnsiStringFixedLength"/>
      <param name="@LanguageCode" dbType="AnsiStringFixedLength" />
      <param name="@ReturnValue" dbType="Int32"  direction="Output"/>
    </parameters>
  </dataCommand>

  <dataCommand name="ExistNeedCloseVirtualQuantity" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT   ISNULL(SUM(VirtualQty),0)   AS VirtualQty
      FROM IPP3.dbo.St_Virtual_Request WITH(NOLOCK)
      WHERE 
          StockSysNo=@StockSysNo 
          AND ProductSysNo=@ProductSysNo 
          AND Status IN (1,2,4)
          AND CompanyCode =@CompanyCode
          AND SysNo<>@SysNo
      ]]>
    </commandText>
    <parameters>
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@SysNo" dbType="Int32"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetVirtualRequestBySysNumber" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          SysNo
         ,ProductSysNo as [VirtualProduct.SysNo]
         ,StockSysNo as [Stock.SysNo]
         ,VirtualQty as [VirtualQuantity]
         ,CreateTime  as [CreateDate]
         ,CreateUserSysNo  as [CreateUser.SysNo]
         ,PMRequestNote as [RequestNote]
         ,AuditNote
         ,AuditTime as [AuditDate]
         ,AuditUserSysNo as [AuditUser.SysNo]
         ,Status as [RequestStatus]
         ,VirtualType 
         ,CompanyCode
      FROM IPP3.dbo.St_Virtual_Request WITH(NOLOCK) 
      WHERE 
          SysNo=@SysNo 
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateProductExtension" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE IPP3.dbo.Product_ex 
      SET VirtualType=@VirtualType 
      WHERE 
          SysNo=@ProductSysNo AND CompanyCode = @CompanyCode
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@VirtualType" dbType="Int32" />
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>


  <dataCommand name="CheckVirtualQty" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[

      DECLARE @AvailableQty INT
	    DECLARE @AccountQty	  INT
	    DECLARE @ConsignQty	  INT
	    DECLARE @VirtualQty	  INT
	    DECLARE @ErrorCode	  INT
        SET     @AvailableQty =0
	    SET     @AccountQty	  =0
	    SET     @ConsignQty	  =0
	    SET     @VirtualQty	  =0
	    SET     @ErrorCode	  =-1
	    SELECT TOP 1 
            @AvailableQty=AvailableQty  
            ,@AccountQty=AccountQty  
            ,@ConsignQty=ConsignQty 
            ,@VirtualQty=VirtualQty 
        FROM IPP3.dbo.Inventory_Stock WITH(NOLOCK) 
        WHERE  
            ProductSysNo=@ProductSysNo 
            AND StockSysNo=@WarehouseNumber 
            AND LanguageCode = @LanguageCode 
            AND CompanyCode = @CompanyCode 
            AND StoreCompanyCode = @StoreCompanyCode; 
  
	    IF(@AvailableQty + @ConsignQty  + @Quantity <0)
	    BEGIN 
	    SET @ErrorCode =1;  --RAISERROR(N'审核失败！调整可用库存后不能使可卖数量变为负数，可卖数量=可用库存+虚拟库存+代销库存.', 11, 1); 
	    END   
      IF(@AvailableQty > 0)
      BEGIN
    	    IF(OverseaInventoryManagement.dbo.[FN_Inventory_GetOverflowRateOfMixedItemForInventoryDeduction](@ProductSysNo,0,@Quantity-@VirtualQty,@CompanyCode)=1)
	        BEGIN
	          SET @ErrorCode =2; --RAISERROR(N'审核失败！该类商品中的混合型商品（即有可用库存又有虚拟库存）种类在该类所有商品种类中的比例已经超过限制.', 11, 1); 
	        END
      END
      ELSE
      BEGIN
          IF(OverseaInventoryManagement.dbo.[FN_Inventory_GetOverflowCountOfPureVirtualItemForInventoryDeduction](@ProductSysNo,0,@Quantity-@VirtualQty,@CompanyCode)=1)
	        BEGIN
	          SET @ErrorCode =3; --RAISERROR(N'审核失败！该类商品中的纯虚拟库存商品种类数量已经超过限制.', 11, 1); 
	        END    
      END
  
      SELECT @ErrorCode
      ]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@Quantity" dbType="Int32" />
      <param name="@WarehouseNumber" dbType="Int32" />
      <param name="@LanguageCode" dbType="AnsiStringFixedLength"/>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
      <param name="@StoreCompanyCode" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>

  <!--Maintain END-->
</dataOperations>