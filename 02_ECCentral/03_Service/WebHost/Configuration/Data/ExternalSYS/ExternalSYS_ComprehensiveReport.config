<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <dataCommand name="ExternalSYS_Query_EIMSInvoice" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT @TotalCount = COUNT(1),
             @SumNoReceivedAmount=SUM(isnull(invoiceMaster.InvoiceAmount,0) - isnull(invoiceMaster.ReceivedAmount,0) - isnull(invoiceMaster.CloseAmount,0)) 
            FROM EIMS.dbo.EIMSInvoiceInfo invoiceMaster WITH(NOLOCK)
            INNER JOIN EIMS.dbo.EIMSPlannedInvoice plannedInvoice WITH(NOLOCK)
              ON invoiceMaster.PlannedInvoiceNumber = plannedInvoice.PlannedInvoiceNumber
            INNER JOIN EIMS.dbo.EIMSRuleInfo ruleMaster WITH(NOLOCK)
              ON ruleMaster.RuleNumber = plannedInvoice.RuleNumber
            INNER JOIN EIMS.dbo.EIMSRuleRebateScheme ruleScheme WITH(NOLOCK)
              ON plannedInvoice.RuleNumber = ruleScheme.RuleNumber
            LEFT JOIN IPP3.dbo.Vendor vendor WITH(NOLOCK)
              ON ruleMaster.VendorNumber = vendor.SysNo
            LEFT JOIN (
                SELECT 
                  CAST(SysNo AS VARCHAR(10)) AS SysNo,
                  UserName
                FROM IPP3.dbo.Sys_User WITH(NOLOCK)
            ) AS PM
              ON ruleMaster.PM = PM.SysNo
            LEFT JOIN (
              SELECT 
                eimsUser.UserID,
                eimsUser.EnglishName AS UserName
              FROM EIMS.dbo.EIMSUser eimsUser WITH(NOLOCK)
            ) AS ippUser
              ON invoiceMaster.CreateUser = ippUser.UserID
        #StrWhere#
          
        ;WITH TempTable AS (
             SELECT
                ruleMaster.AssignedCode AS RuleAssignedCode,
                ruleScheme.BeginDate AS RuleBeginDate,
                ruleScheme.EndDate AS RuleEndDate,
                invoiceMaster.AssignedCode AS InvoiceAssignedCode,
                invoiceMaster.InvoiceNumber,
                invoiceMaster.VendorNumber,
                vendor.VendorName AS VendorName,
                PM.UserName AS PMName ,
                invoiceMaster.Undertaker,
                invoiceMaster.InvoiceName,
                invoiceMaster.DueDate,
                invoiceMaster.Description AS InvoiceDescription,
                invoiceMaster.CreateDate,
                invoiceMaster.CreateUser,
                ippUser.UserName AS CreateUserName,
                invoiceMaster.ApproveDate,
                invoiceMaster.CloseDate,
                invoiceMaster.EIMSType,
                invoiceMaster.ReceiveType,
                invoiceMaster.Status,
                1.0 AS SumScaleValue,         
                invoiceMaster.InvoiceAmount,
                invoiceMaster.ReceivedAmount,
                invoiceMaster.CloseAmount,
				        isnull(invoiceMaster.InvoiceAmount,0) - isnull(invoiceMaster.ReceivedAmount,0) - isnull(invoiceMaster.CloseAmount,0)  AS UnReceivedAmount,
                invoiceMaster.AdjustAmount,
                isnull(invoiceMaster.InvoiceAmount,0)-isnull(invoiceMaster.AdjustAmount,0) AS SysAmount,
                invoiceMaster.AdjustReason,
                ROW_NUMBER() OVER(ORDER BY invoiceMaster.InvoiceNumber) AS RowNumber
                
            FROM EIMS.dbo.EIMSInvoiceInfo invoiceMaster WITH(NOLOCK)
            INNER JOIN EIMS.dbo.EIMSPlannedInvoice plannedInvoice WITH(NOLOCK)
              ON invoiceMaster.PlannedInvoiceNumber = plannedInvoice.PlannedInvoiceNumber
            INNER JOIN EIMS.dbo.EIMSRuleInfo ruleMaster WITH(NOLOCK)
              ON ruleMaster.RuleNumber = plannedInvoice.RuleNumber
            INNER JOIN EIMS.dbo.EIMSRuleRebateScheme ruleScheme WITH(NOLOCK)
              ON plannedInvoice.RuleNumber = ruleScheme.RuleNumber
            LEFT JOIN IPP3.dbo.Vendor vendor WITH(NOLOCK)
              ON ruleMaster.VendorNumber = vendor.SysNo
            LEFT JOIN (
                SELECT 
                  CAST(SysNo AS VARCHAR(10)) AS SysNo,
                  UserName
                FROM IPP3.dbo.Sys_User WITH(NOLOCK)
            ) AS PM
              ON ruleMaster.PM = PM.SysNo
            LEFT JOIN (
              SELECT 
                eimsUser.UserID,
                eimsUser.EnglishName AS UserName
              FROM EIMS.dbo.EIMSUser eimsUser WITH(NOLOCK)
            ) AS ippUser
              ON invoiceMaster.CreateUser = ippUser.UserID
          #StrWhere#
        )
        SELECT * FROM TempTable WITH(NOLOCK)
        WHERE RowNumber > @PageIndex * @PageSize 
          AND RowNumber <= ((@PageIndex + 1) * @PageSize)
      ]]>
    </commandText>
  </dataCommand>
  <dataCommand name="ExternalSYS_Query_EIMSInvoiceBYC1Name" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
            SELECT @TotalCount = COUNT(1),
			 @SumNoReceivedAmount=SUM((isnull(invoiceMaster.InvoiceAmount,0) - isnull(invoiceMaster.ReceivedAmount,0) - isnull(invoiceMaster.CloseAmount,0))*SumScaleValue) 
                FROM EIMS.dbo.EIMSInvoiceInfo invoiceMaster WITH(NOLOCK)
               INNER JOIN (
                SELECT A.InvoiceNumber,
                       C.ItemCategory1,
                       --C.ItemCategory2,
                       SUM(C.AssignAmt) AS SumAssignAmt,
                       SUM(C.ScaleValue) AS SumScaleValue
                FROM   EIMS.dbo.EIMSInvoiceInfo A WITH(NOLOCK)
                       LEFT JOIN EIMS.dbo.EIMSInvoiceAppliedItem C WITH(NOLOCK)
                            ON  A.InvoiceNumber = C.InvoiceNumber
                GROUP BY
                       A.InvoiceNumber,
                       C.ItemCategory1
            ) Category
            ON  invoiceMaster.InvoiceNumber = Category.InvoiceNumber
            INNER JOIN EIMS.dbo.EIMSPlannedInvoice plannedInvoice WITH(NOLOCK)
              ON invoiceMaster.PlannedInvoiceNumber = plannedInvoice.PlannedInvoiceNumber
            INNER JOIN EIMS.dbo.EIMSRuleInfo ruleMaster WITH(NOLOCK)
              ON ruleMaster.RuleNumber = plannedInvoice.RuleNumber
            INNER JOIN EIMS.dbo.EIMSRuleRebateScheme ruleScheme WITH(NOLOCK)
              ON plannedInvoice.RuleNumber = ruleScheme.RuleNumber
            LEFT JOIN IPP3.dbo.Vendor vendor WITH(NOLOCK)
              ON ruleMaster.VendorNumber = vendor.SysNo
            LEFT JOIN (
                SELECT 
                  CAST(SysNo AS VARCHAR(10)) AS SysNo,
                  UserName
                FROM IPP3.dbo.Sys_User WITH(NOLOCK)
            ) AS PM
              ON ruleMaster.PM = PM.SysNo
            LEFT JOIN (
              SELECT 
                eimsUser.UserID,
                eimsUser.EnglishName AS UserName
              FROM EIMS.dbo.EIMSUser eimsUser WITH(NOLOCK)
            ) AS ippUser
              ON invoiceMaster.CreateUser = ippUser.UserID
            LEFT JOIN  EIMS.dbo.uv_EIMSCategory1 v_Category1 WITH(NOLOCK)
			  ON Category.ItemCategory1 = v_Category1.SysNo
        #StrWhere#
          
        ;WITH TempTable AS (
             SELECT
                ruleMaster.AssignedCode AS RuleAssignedCode,
                ruleScheme.BeginDate AS RuleBeginDate,
                ruleScheme.EndDate AS RuleEndDate,
                invoiceMaster.AssignedCode AS InvoiceAssignedCode,
                invoiceMaster.InvoiceNumber,
                invoiceMaster.VendorNumber,
                vendor.VendorName AS VendorName,
                PM.UserName AS PMName ,
                invoiceMaster.Undertaker,
                invoiceMaster.InvoiceName,
                invoiceMaster.DueDate,
                invoiceMaster.Description AS InvoiceDescription,
                invoiceMaster.CreateDate,
                invoiceMaster.CreateUser,
                ippUser.UserName AS CreateUserName,
                invoiceMaster.ApproveDate,
                invoiceMaster.CloseDate,
                invoiceMaster.EIMSType,
                invoiceMaster.ReceiveType,
                invoiceMaster.Status,
                Category.SumScaleValue AS SumScaleValue,         
                invoiceMaster.InvoiceAmount,
                invoiceMaster.ReceivedAmount,
                invoiceMaster.CloseAmount,
				        isnull(invoiceMaster.InvoiceAmount,0) - isnull(invoiceMaster.ReceivedAmount,0) - isnull(invoiceMaster.CloseAmount,0)  AS UnReceivedAmount,
                invoiceMaster.AdjustAmount,
                isnull(invoiceMaster.InvoiceAmount,0)-isnull(invoiceMaster.AdjustAmount,0) AS SysAmount,
                invoiceMaster.AdjustReason,
				v_Category1.C1Name,
				Category.SumAssignAmt,
                ROW_NUMBER() OVER(ORDER BY invoiceMaster.InvoiceNumber) AS RowNumber
                
            FROM EIMS.dbo.EIMSInvoiceInfo invoiceMaster WITH(NOLOCK)
               INNER JOIN (
                SELECT A.InvoiceNumber,
                       C.ItemCategory1,
                       --C.ItemCategory2,
                       SUM(C.AssignAmt) AS SumAssignAmt,
                       SUM(C.ScaleValue) AS SumScaleValue
                FROM   EIMS.dbo.EIMSInvoiceInfo A WITH(NOLOCK)
                       LEFT JOIN EIMS.dbo.EIMSInvoiceAppliedItem C WITH(NOLOCK)
                            ON  A.InvoiceNumber = C.InvoiceNumber
                GROUP BY
                       A.InvoiceNumber,
                       C.ItemCategory1
            ) Category
            ON  invoiceMaster.InvoiceNumber = Category.InvoiceNumber
            INNER JOIN EIMS.dbo.EIMSPlannedInvoice plannedInvoice WITH(NOLOCK)
              ON invoiceMaster.PlannedInvoiceNumber = plannedInvoice.PlannedInvoiceNumber
            INNER JOIN EIMS.dbo.EIMSRuleInfo ruleMaster WITH(NOLOCK)
              ON ruleMaster.RuleNumber = plannedInvoice.RuleNumber
            INNER JOIN EIMS.dbo.EIMSRuleRebateScheme ruleScheme WITH(NOLOCK)
              ON plannedInvoice.RuleNumber = ruleScheme.RuleNumber
            LEFT JOIN IPP3.dbo.Vendor vendor WITH(NOLOCK)
              ON ruleMaster.VendorNumber = vendor.SysNo
            LEFT JOIN (
                SELECT 
                  CAST(SysNo AS VARCHAR(10)) AS SysNo,
                  UserName
                FROM IPP3.dbo.Sys_User WITH(NOLOCK)
            ) AS PM
              ON ruleMaster.PM = PM.SysNo
            LEFT JOIN (
              SELECT 
                eimsUser.UserID,
                eimsUser.EnglishName AS UserName
              FROM EIMS.dbo.EIMSUser eimsUser WITH(NOLOCK)
            ) AS ippUser
              ON invoiceMaster.CreateUser = ippUser.UserID
            LEFT JOIN  EIMS.dbo.uv_EIMSCategory1 v_Category1 WITH(NOLOCK)
			  ON Category.ItemCategory1 = v_Category1.SysNo
          #StrWhere#
        )
        SELECT * FROM TempTable WITH(NOLOCK)
        WHERE RowNumber > @PageIndex * @PageSize 
          AND RowNumber <= ((@PageIndex + 1) * @PageSize)
                ]]>
    </commandText>
  </dataCommand>
  <dataCommand name="ExternalSYS_Query_UnbilledRuleList" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[      
     IF OBJECT_ID(N'tempdb..#tempTab') IS NOT NULL DROP TABLE #tempTab

    SELECT ruleMaster.RuleNumber
	       ,ruleMaster.AssignedCode AS RuleAssignedCode
	       ,ruleMaster.VendorNumber
	       ,vendor.VendorName
	       ,ruleMaster.EIMSType
	       ,ruleMaster.PM
	       ,pm.UserName AS PMName
         ,ruleScheme.BeginDate AS RuleBegingDate
	       ,ruleScheme.EndDate AS RuleEndDate
		     ,ISNULL(ruleMaster.SettleType,'M') as SettleType
		     ,ISNULL(ruleMaster.BillingCycle,'101') as BillingCycle
		     ,ISNULL(ruleMaster.SettleWeeklyDay,0) as SettleWeeklyDay
		     ,ISNULL(ruleMaster.SettleMonthlyDay,1) as SettleMonthlyDay
	       ,MAX(plannedInvoice.Enddate) AS PlannedInvoiceEndDate
	       ,MAX(invoiceScheme.EndDate) AS MaxInvoiceEndDate
	       ,COUNT(invoiceMaster.InvoiceNumber) AS FormalInvoiceNum
	       ,PendingInvoiceNum = (
	       		SELECT COUNT(*) FROM EIMS.dbo.EIMSInvoiceInfoPending pendingInvoice WITH(NOLOCK)
	       		LEFT JOIN EIMS.dbo.EIMSRequest R WITH(NOLOCK)
	       		ON R.RequestNumber=pendingInvoice.RequestNumber
	       		LEFT JOIN EIMS.dbo.EIMSPlannedInvoice plannedInvoice WITH(NOLOCK)
			    ON  pendingInvoice.PlannedInvoiceNumber = plannedInvoice.PlannedInvoiceNumber
	       			WHERE plannedInvoice.RuleNumber = ruleMaster.RuleNumber  
	       			AND (ISNULL(R.Status,'') <>'V' AND pendingInvoice.AssignedCode IS NULL)
	       			
	       	)
	       ,ROW_NUMBER() OVER(ORDER BY ruleMaster.RuleNumber) AS RowNumber
    INTO #tempTab
    FROM   EIMS.dbo.EIMSRuleInfo ruleMaster WITH(NOLOCK)
	       INNER JOIN EIMS.dbo.EIMSRuleRebateScheme ruleScheme WITH(NOLOCK)
			    ON  ruleMaster.RuleNumber = ruleScheme.RuleNumber AND ruleMaster.[Status]='O'
	       INNER JOIN IPP3.dbo.Vendor vendor WITH(NOLOCK)
			    ON  ruleMaster.VendorNumber = vendor.SysNo
	       LEFT JOIN (
				    SELECT CAST(SysNo AS VARCHAR(10)) AS SysNo,
					       UserName
				    FROM   IPP3.dbo.Sys_User WITH(NOLOCK)
			    ) AS PM
			    ON  ruleMaster.PM = PM.SysNo
	       LEFT JOIN EIMS.dbo.EIMSPlannedInvoice plannedInvoice WITH(NOLOCK)
			    ON  ruleMaster.RuleNumber = plannedInvoice.RuleNumber
	       LEFT JOIN EIMS.dbo.EIMSInvoiceInfo invoiceMaster WITH(NOLOCK)
			    ON  invoiceMaster.PlannedInvoiceNumber = plannedInvoice.PlannedInvoiceNumber
	       LEFT JOIN Eims.dbo.EIMSInvoiceRebateScheme invoiceScheme WITH(NOLOCK)
			    ON  invoiceScheme.InvoiceNumber = invoiceMaster.InvoiceNumber
    #StrWhere#
    GROUP BY
	       ruleMaster.RuleNumber,
	       ruleMaster.AssignedCode,
	       ruleMaster.VendorNumber,
	       vendor.VendorName,
	       ruleMaster.EIMSType,
	       ruleMaster.PM,
	       pm.UserName,
         ruleScheme.BeginDate,
	       ruleScheme.EndDate,
	       ruleMaster.SettleType,
		   ruleMaster.BillingCycle,
		   ruleMaster.SettleWeeklyDay,
		   ruleMaster.SettleMonthlyDay	
          
    SELECT @TotalCount = COUNT(1)
    FROM   #tempTab WITH(NOLOCK)
            
    SELECT *
    FROM   #tempTab WITH(NOLOCK)
    WHERE  RowNumber > @PageIndex * @PageSize
           AND RowNumber <= ((@PageIndex + 1) * @PageSize)
    ORDER BY FormalInvoiceNum DESC,RuleEndDate ASC
           
    DROP TABLE #tempTab 
      ]]>
    </commandText>
  </dataCommand>
  <dataCommand name="ExternalSYS_Query_Comprehensive" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      	SELECT
		    @TotalCount = COUNT(1)
        FROM(
          	SELECT 
          		RuleNumber,
          		BeginBalance = (
          			SELECT BeginBalance FROM
          			(
          				SELECT ROW_NUMBER() OVER(PARTITION BY RuleNumber ORDER BY AccruePeriod) AS RN,
          				BeginBalance,RuleNumber
          			FROM EIMS.dbo.EIMSAccruedByRule inside WITH(NOLOCK)  #StrWhereInner
          			)a WHERE RN = 1 AND a.RuleNumber = outter.RuleNumber
          		 ),   
          		 EndBalance = (
          			SELECT EndBalance FROM
          			(
          				SELECT ROW_NUMBER() OVER(PARTITION BY RuleNumber ORDER BY AccruePeriod DESC) AS RN,
          				EndBalance,RuleNumber
          			FROM EIMS.dbo.EIMSAccruedByRule inside WITH(NOLOCK)  #StrWhereInner
          			)b WHERE RN = 1 AND b.RuleNumber = outter.RuleNumber
          		 )
          	FROM EIMS.dbo.EIMSAccruedByRule outter WITH(NOLOCK)
          	#StrWhereInner
          	GROUP BY  RuleNumber
          )accrued
        INNER JOIN EIMS.dbo.EIMSRuleInfo ruleInfo WITH(NOLOCK) 
        ON accrued.RuleNumber = ruleinfo.RuleNumber 
        INNER JOIN EIMS.dbo.EIMSPlannedInvoice plannedInvoice WITH(NOLOCK)
        ON ruleInfo.RuleNumber = plannedInvoice.RuleNumber
        INNER JOIN EIMS.dbo.EIMSInvoiceInfo invoiceInfo WITH(NOLOCK)
        ON plannedInvoice.PlannedInvoiceNumber = invoiceInfo.PlannedInvoiceNumber
        INNER JOIN EIMS.dbo.EIMSRuleRebateScheme ruleRebate WITH(NOLOCK)
        ON plannedInvoice.RuleNumber = ruleRebate.RuleNumber
        INNER JOIN EIMS.dbo.uv_EIMSVendor vendor WITH(NOLOCK)
        ON invoiceInfo.VendorNumber= vendor.Sysno
        INNER JOIN EIMS.dbo.uv_EIMSPM EIMSPM
        ON EIMSPM.SysNo = invoiceInfo.PM
        #StrWhere#
        
        SELECT
            VendorNumber,			
            VendorName,			
            EIMSType,			
            ApproveDate,
            CreateDate,		
            RuleNumber,
            RuleAssignedCode,
            InvoiceAssignedCode,
            Description,
            RebateBaseType,
            RuleBeginDate,			
            RuleEndDate,			
            InvoiceDate,			
            IPPNumber,			
            InvoiceAmount,	
            InvoiceAmountTax,
            InvoiceAmountAccrued,
            ReceivedAmount,			
            UnpaidAmt,			
            RuleStatus,			
            InvoiceStatus,
            CloseDate,			
            CloseAmount,
            BeginBalance,
            BeginBalanceTax,
            BeginBalanceAccrued,
            EndBalance,
            EndBalanceTax,
            EndBalanceAccrued,
            PMName
       FROM (
          SELECT TOP (@EndNumber) 			
            invoiceInfo.VendorNumber,			
            vendor.VendorName,			
            invoiceInfo.EIMSType,		
            ruleInfo.RuleNumber,
            ruleInfo.ApproveDate,
            ruleInfo.CreateDate,		
            ruleInfo.AssignedCode AS RuleAssignedCode,
            ruleInfo.Description,
            ruleRebate.BeginDate AS RuleBeginDate,			
            ruleRebate.EndDate AS RuleEndDate,	
            ruleRebate.RebateBaseType,
            EIMSPM.UserName AS PMName,
            invoiceInfo.AssignedCode AS InvoiceAssignedCode,
            invoiceInfo.InvoiceDate,			
            invoiceInfo.InvoiceNumber AS IPPNumber,			
            invoiceInfo.InvoiceAmount,		
            invoiceInfo.InvoiceAmount - ROUND(invoiceInfo.InvoiceAmount/1.17,2) AS InvoiceAmountTax,		
            ROUND(invoiceInfo.InvoiceAmount/1.17,2) AS InvoiceAmountAccrued,
            invoiceInfo.ReceivedAmount,			
            (invoiceInfo.InvoiceAmount - invoiceInfo.ReceivedAmount) as UnpaidAmt,			
            ruleInfo.Status AS RuleStatus,			
            invoiceInfo.Status AS InvoiceStatus,			
            invoiceInfo.CloseDate,			
            invoiceInfo.CloseAmount,
            accrued.BeginBalance,
            accrued.BeginBalance - ROUND(accrued.BeginBalance/1.17,2) AS BeginBalanceTax, 
            ROUND(accrued.BeginBalance/1.17,2) AS BeginBalanceAccrued,
            accrued.EndBalance,
            accrued.EndBalance - ROUND(accrued.EndBalance/1.17,2)  AS EndBalanceTax, 
            ROUND(accrued.EndBalance/1.17,2)  AS EndBalanceAccrued,
            (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
            FROM(
          	SELECT 
          		RuleNumber,
          		BeginBalance = (
          			SELECT BeginBalance FROM
          			(
          				SELECT ROW_NUMBER() OVER(PARTITION BY RuleNumber ORDER BY AccruePeriod) AS RN,
          				BeginBalance,RuleNumber
          			FROM EIMS.dbo.EIMSAccruedByRule inside WITH(NOLOCK) #StrWhereInner
          			)a WHERE RN = 1 AND a.RuleNumber = outter.RuleNumber
          		 ),   
          		 EndBalance = (
          			SELECT EndBalance FROM
          			(
          				SELECT ROW_NUMBER() OVER(PARTITION BY RuleNumber ORDER BY AccruePeriod DESC) AS RN,
          				EndBalance,RuleNumber
          			FROM EIMS.dbo.EIMSAccruedByRule inside WITH(NOLOCK) #StrWhereInner
          			)b WHERE RN = 1 AND b.RuleNumber = outter.RuleNumber
          		 )
          	FROM EIMS.dbo.EIMSAccruedByRule outter WITH(NOLOCK)
            #StrWhereInner
          	GROUP BY  RuleNumber
          )accrued
          INNER JOIN EIMS.dbo.EIMSRuleInfo ruleInfo WITH(NOLOCK) 
          ON accrued.RuleNumber = ruleinfo.RuleNumber
          INNER JOIN EIMS.dbo.EIMSPlannedInvoice plannedInvoice WITH(NOLOCK)
          ON ruleInfo.RuleNumber = plannedInvoice.RuleNumber
          INNER JOIN EIMS.dbo.EIMSInvoiceInfo invoiceInfo WITH(NOLOCK)
          ON plannedInvoice.PlannedInvoiceNumber = invoiceInfo.PlannedInvoiceNumber
          INNER JOIN EIMS.dbo.EIMSRuleRebateScheme ruleRebate WITH(NOLOCK)
          ON plannedInvoice.RuleNumber = ruleRebate.RuleNumber
          INNER JOIN EIMS.dbo.uv_EIMSVendor vendor WITH(NOLOCK)
          ON invoiceInfo.VendorNumber= vendor.Sysno
          INNER JOIN EIMS.dbo.uv_EIMSPM EIMSPM
          ON EIMSPM.SysNo = invoiceInfo.PM
          #StrWhere#
        )Result
        WHERE RowNumber > @StartNumber 
      ]]>
    </commandText>
  </dataCommand>
</dataOperations>
