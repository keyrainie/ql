<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <dataCommand name="ExternalSYS_Query_ReportByItem" database="EIMSCN" commandType="Text">
    <commandText>
      <![CDATA[
                IF OBJECT_ID(N'tempdb..#tempTab') IS NOT NULL DROP TABLE #tempTab
                IF OBJECT_ID(N'tempdb..#resultTab') IS NOT NULL DROP TABLE #resultTab
                IF OBJECT_ID(N'tempdb.dbo.#sumTab', N'U') IS NOT NULL DROP TABLE #sumTab
                IF OBJECT_ID(N'tempdb..#AccroTab') IS NOT NULL DROP TABLE #AccroTab
                IF OBJECT_ID(N'tempdb..#totalTab') IS NOT NULL DROP TABLE #totalTab

                SELECT 
                    invoice.VendorNumber AS VendorNumber
                    ,vendor.VendorName AS VendorName
                    ,invoice.InvoiceNumber
                    ,CASE 
                        WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 1 AND 30 THEN 1
                        WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 31 AND 60 THEN 2
                        WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 61 AND 90 THEN 3
                        WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 91 AND 120 THEN 4
                        WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 121 AND 150 THEN 5
                        WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 151 AND 180 THEN 6
                        WHEN DateDiff(day,invoice.InvoiceDate,GetDate())>180 THEN 7
                        ELSE 8
                     END AS OverInvoicePeriod
                    ,SUM(item.AssignAmt) AS OpenTotal
			              ,invoice.ReceivedAmount*SUM(item.AssignAmt)/invoice.InvoiceAmount AS ReceivedAmount
                    ,(invoice.InvoiceAmount - invoice.ReceivedAmount)*SUM(item.AssignAmt)/invoice.InvoiceAmount AS NoReceiveAmount
                INTO #tempTab
		            FROM EIMS.dbo.EIMSInvoiceAppliedItem item WITH(NOLOCK)
		            INNER JOIN EIMS.dbo.EIMSInvoiceInfo invoice WITH(NOLOCK)
		            ON item.InvoiceNumber = invoice.InvoiceNumber
		            INNER JOIN Ipp3.dbo.Vendor vendor  WITH(NOLOCK)
                    ON vendor.SysNo = invoice.VendorNumber
		            INNER JOIN EIMS.dbo.EIMSPlannedInvoice plannedinvoice WITH(NOLOCK)
		            ON plannedinvoice.PlannedInvoiceNumber = invoice.PlannedInvoiceNumber
		            INNER JOIN EIMS.dbo.EIMSRuleInfo ruleinfo WITH(NOLOCK)
		            ON ruleinfo.RuleNumber = plannedinvoice.RuleNumber
                #WhereStr1#
                GROUP BY invoice.VendorNumber
                        ,vendor.VendorName
                        ,invoice.InvoiceNumber
                        ,invoice.InvoiceDate
				        ,invoice.InvoiceAmount
				        ,invoice.ReceivedAmount
		            ORDER BY invoice.VendorNumber,invoice.InvoiceNumber
        		
                SELECT 
                    VendorNumber
                    ,VendorName
                    ,SUM(OpenTotal) AS SumOpenTotal
                    ,SUM(ReceivedAmount) AS SumReceived
                    ,SUM(NoReceiveAmount) AS SumNoReceived
                    ,SUM(NoReceiveAmount) AS PeriodNoReceived
                    ,OverInvoicePeriod
                INTO #resultTab
                FROM #tempTab WITH(NOLOCK)
                GROUP BY VendorNumber,VendorName,OverInvoicePeriod
        		
                SELECT 
                    VendorNumber
                    ,VendorName
                    ,SUM(SumOpenTotal) AS SumOpenTotal
                    ,Sum(SumReceived) AS SumReceived
                    ,SUM(SumNoReceived) AS SumNoReceived
                    ,SUM(ISNULL([1],0)) AS DueIn30
                    ,SUM(ISNULL([2],0)) AS DueBetween31And60
                    ,SUM(ISNULL([3],0)) AS DueBetween61And90
                    ,SUM(ISNULL([4],0)) AS DueBetween91And120
                    ,SUM(ISNULL([5],0)) AS DueBetween121And150
                    ,SUM(ISNULL([6],0)) AS DueBetween151And180
                    ,SUM(ISNULL([7],0)) AS DueOver180
                INTO #sumTab
                FROM #resultTab WITH(NOLOCK)
                Pivot (SUM(PeriodNoReceived) FOR OverInvoicePeriod in ([1],[2],[3],[4],[5],[6],[7])) as PVT
                GROUP BY VendorNumber,VendorName
                ORDER BY VendorNumber
                    
                SELECT 
                    item.VendorNumber
                    ,SUM(item.TotalAccruedAmount) AS  SumAccruedTotal
                INTO #AccroTab
                FROM EIMS.dbo.EIMSAccruedByItem item WITH(NOLOCK)
			            INNER JOIN EIMS.dbo.EIMSPlannedInvoice plannedInvoice
				            ON plannedInvoice.RuleNumber = item.RuleNumber
			            INNER JOIN EIMS.dbo.EIMSInvoiceInfo invoice
				            ON invoice.PlannedInvoiceNumber = plannedInvoice.PlannedInvoiceNumber
			            INNER JOIN EIMS.dbo.EIMSRuleInfo ruleinfo
				            ON ruleinfo.RuleNumber = item.RuleNumber
                #WhereStr2#
                GROUP BY item.VendorNumber
                    
                SELECT 
                    a.VendorNumber,
                    a.VendorName,
                    b.SumAccruedTotal,
                    (b.SumAccruedTotal-a.SumOpenTotal) AS SumUnbilled ,
                    a.SumOpenTotal,
                    a.SumNoReceived,
                    a.DueIn30,
                    a.DueBetween31And60,
                    a.DueBetween61And90,
                    a.DueBetween91And120,
                    a.DueBetween121And150,
                    a.DueBetween151And180,
                    a.DueOver180,
		                (ROW_NUMBER() OVER(ORDER BY a.VendorNumber)) AS RowNumber
		            INTO #totalTab
			            FROM #sumTab a
			            INNER JOIN #AccroTab b
			            ON a.VendorNumber = b.VendorNumber
            
                SELECT @TotalCount = COUNT(1) FROM #totalTab WITH(NOLOCK)
                
                SELECT TOP (@PageSize)
                    VendorNumber,
                    VendorName,
                    SumAccruedTotal,
                    SumUnbilled,
                    SumOpenTotal,
                    SumNoReceived,
                    DueIn30,
                    DueBetween31And60,
                    DueBetween61And90,
                    DueBetween91And120,
                    DueBetween121And150,
                    DueBetween151And180,
                    DueOver180
                FROM #totalTab WITH(NOLOCK)
                WHERE RowNumber > @PageIndex * @PageSize
                 
                DROP TABLE #tempTab
                DROP TABLE #resultTab 
                DROP TABLE #sumTab 
                DROP TABLE #AccroTab 
                DROP TABLE #totalTab 
        ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="ExternalSYS_Query_InvoiceDetailByVendor" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        IF OBJECT_ID(N'tempdb..#tempTab') IS NOT NULL DROP TABLE #tempTab
        IF OBJECT_ID(N'tempdb..#resultTab') IS NOT NULL DROP TABLE #resultTab

        SELECT 
            invoice.VendorNumber AS VendorNumber
            ,vendor.VendorName AS VendorName
            ,invoice.AssignedCode
            ,invoice.InvoiceNumber
            ,RTRIM(rt.Description) AS ReceiveType
            ,RTRIM(s.Description) AS InvoiceStatus
            ,invoice.InvoiceDate
            ,invoice.PM AS PMSysNo
            ,EIMSPM.UserName AS PMName
            ,DateDiff(day,invoice.DueDate,GetDate()) AS OverDueDays
            ,SUM(item.AssignAmt) AS OpenTotal
            ,invoice.InvoiceAmount
            ,(ROW_NUMBER() OVER(ORDER BY invoice.VendorNumber,invoice.InvoiceNumber)) AS RowNumber
            ,CASE 
                WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 1 AND 30 THEN 1
                WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 31 AND 60 THEN 2
                WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 61 AND 90 THEN 3
                WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 91 AND 120 THEN 4
                WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 121 AND 150 THEN 5
                WHEN DateDiff(day,invoice.InvoiceDate,GetDate()) BETWEEN 151 AND 180 THEN 6
                WHEN DateDiff(day,invoice.InvoiceDate,GetDate())>180 THEN 7
                ELSE 8
              END AS OverInvoicePeriod
            ,invoice.ReceivedAmount*SUM(item.AssignAmt)/invoice.InvoiceAmount AS ReceivedAmount
            ,(invoice.InvoiceAmount - invoice.ReceivedAmount)*SUM(item.AssignAmt)/invoice.InvoiceAmount AS NoReceiveAmount
        INTO #tempTab
		    FROM EIMS.dbo.EIMSInvoiceAppliedItem item WITH(NOLOCK)
		    INNER JOIN EIMS.dbo.EIMSInvoiceInfo invoice WITH(NOLOCK)
		    ON item.InvoiceNumber = invoice.InvoiceNumber
		    INNER JOIN Ipp3.dbo.Vendor vendor  WITH(NOLOCK)
            ON vendor.SysNo = invoice.VendorNumber
		    INNER JOIN EIMS.dbo.EIMSPlannedInvoice plannedinvoice WITH(NOLOCK)
		    ON plannedinvoice.PlannedInvoiceNumber = invoice.PlannedInvoiceNumber
		    INNER JOIN EIMS.dbo.EIMSRuleInfo ruleinfo WITH(NOLOCK)
		    ON ruleinfo.RuleNumber = plannedinvoice.RuleNumber
        INNER JOIN EIMS.dbo.EIMSReceiveType rt WITH(NOLOCK) 
        ON rt.Code = invoice.ReceiveType 
        INNER JOIN EIMS.dbo.EIMSInvoiceStatus s WITH(NOLOCK) 
        ON s.Code=invoice.Status 
        INNER JOIN EIMS.dbo.uv_EIMSPM EIMSPM WITH(NOLOCK)
        ON EIMSPM.SysNo = invoice.PM
        #StrWhere#
        GROUP BY invoice.VendorNumber
                ,vendor.VendorName
                ,invoice.InvoiceNumber
				        ,invoice.InvoiceAmount
				        ,invoice.ReceivedAmount
                ,invoice.AssignedCode
                ,rt.Description
                ,s.Description
                ,invoice.InvoiceDate
                ,invoice.DueDate 
                ,invoice.PM
                ,EIMSPM.UserName 
        
        SELECT 
			    VendorNumber
			    ,VendorName
			    ,AssignedCode
			    ,InvoiceNumber
			    ,InvoiceAmount
			    ,SUM(OpenTotal) AS OpenTotal
			    ,SUM(OpenTotal*ReceivedAmount/InvoiceAmount) AS Received
			    ,SUM(OpenTotal*(1-ReceivedAmount/InvoiceAmount)) AS NoReceived
			    ,ReceiveType
			    ,InvoiceStatus
			    ,InvoiceDate
			    ,OverDueDays
			    ,PMSysNo
			    ,PMName
          ,(ROW_NUMBER() OVER(ORDER BY VendorNumber,InvoiceNumber)) AS RowNumber
		    INTO #resultTab
		    FROM #tempTab WITH(NOLOCK)
		    GROUP BY
			    VendorNumber
			    ,VendorName
			    ,AssignedCode
			    ,InvoiceNumber
			    ,InvoiceAmount
			    ,ReceiveType
			    ,InvoiceStatus
			    ,InvoiceDate
			    ,OverDueDays
			    ,PMSysNo
			    ,PMName
		    ORDER BY #SortColumnName#

        SELECT @TotalCount = COUNT(1) FROM #resultTab WITH(NOLOCK)

        SELECT TOP (@PageSize)
	        VendorNumber
	        ,AssignedCode
	        ,InvoiceNumber
	        ,OpenTotal
	        ,Received
	        ,NoReceived
	        ,ReceiveType
	        ,InvoiceStatus
	        ,InvoiceDate
	        ,OverDueDays
	        ,PMSysNo
	        ,PMName
        FROM #resultTab WITH(NOLOCK)
        WHERE RowNumber > @PageIndex * @PageSize
         
        DROP TABLE #tempTab 
        DROP TABLE #resultTab 
        ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="ExternalSYS_Query_ReceiveByYear" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
                  IF OBJECT_ID(N'tempdb..#acctemp') IS NOT NULL DROP TABLE #acctemp
                  IF OBJECT_ID(N'tempdb..#resulttemp') IS NOT NULL DROP TABLE #resulttemp
                  SELECT 
	                  accbyrule.VendorNumber AS VendorNumber,
	                  vendor.VendorName AS VendorName,
	                  accbyrule.EIMSType,
	                  accbyrule.AccruePeriod AS AccruePeriod,
                    substring(accbyrule.AccruePeriod,0,5) AS AccrueYear,
                    substring(accbyrule.AccruePeriod,5,7) AS AccrueMonth,
	                  SUM(accbyrule.ReceivedAmount) AS ReceivedAmountByPeriod
                  INTO #acctemp
                  FROM EIMS.dbo.EIMSAccruedByRule accbyrule WITH(NOLOCK)
                  Left JOIN Ipp3.dbo.Vendor vendor WITH(NOLOCK)
                  ON accbyrule.VendorNumber = vendor.SysNo
                  #StrWhere# 
                  GROUP BY accbyrule.VendorNumber
		                  ,vendor.VendorName
		                  ,accbyrule.EIMSType
		                  ,accbyrule.AccruePeriod 

                  SELECT 
                      VendorNumber,
                      VendorName,
                      SUM(ISNULL([01],0))+ SUM(ISNULL([02],0))+ SUM(ISNULL([03],0))+ SUM(ISNULL([04],0)) 
                          +SUM(ISNULL([05],0))+ SUM(ISNULL([06],0))+ SUM(ISNULL([07],0))+ SUM(ISNULL([08],0)) 
                          +SUM(ISNULL([09],0))+ SUM(ISNULL([10],0))+ SUM(ISNULL([11],0))+ SUM(ISNULL([12],0)) AS TotalReceiveAmount,
                      SUM(ISNULL([01],0)) AS RAJanuary,
                      SUM(ISNULL([02],0)) AS RAFebruary,
                      SUM(ISNULL([03],0)) AS RAMarch,
                      SUM(ISNULL([04],0)) AS RAApril,
                      SUM(ISNULL([05],0)) AS RAMay,
                      SUM(ISNULL([06],0)) AS RAJune,
                      SUM(ISNULL([07],0)) AS RAJuly,
                      SUM(ISNULL([08],0)) AS RAAugust,
                      SUM(ISNULL([09],0)) AS RASeptember,
                      SUM(ISNULL([10],0)) AS RAOctober,
                      SUM(ISNULL([11],0)) AS RANovember,
                      SUM(ISNULL([12],0)) AS RADecember,
                      (ROW_NUMBER() OVER(ORDER BY VendorNumber)) AS RowNumber
                  INTO  #resulttemp
                  FROM  #acctemp WITH(NOLOCK)
                  Pivot (SUM(ReceivedAmountByPeriod) FOR AccrueMonth in ([01],[02],[03],[04],[05],[06],[07],[08],[09],[10],[11],[12])) as PVT
                  GROUP BY VendorNumber,VendorName
                  
                  DROP TABLE #acctemp 
  				
      	          SELECT @TotalCount = COUNT(1) FROM #resulttemp WITH(NOLOCK)
                  
                  SELECT TOP (@PageSize)
                      VendorNumber,
                      VendorName,
                      TotalReceiveAmount,
                      RAJanuary,
                      RAFebruary,
                      RAMarch,
                      RAApril,
                      RAMay,
                      RAJune,
                      RAJuly,
                      RAAugust,
                      RASeptember,
                      RAOctober,
                      RANovember,
                      RADecember
                  FROM #resulttemp WITH(NOLOCK)
                  WHERE RowNumber > @PageIndex * @PageSize
                   
                  DROP TABLE #resulttemp 
                ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="ExternalSYS_Query_SumReceiveByYear" database="NCServie" commandType="Text">
    <commandText>
      <![CDATA[
                  IF OBJECT_ID(N'tempdb..#sumtemp') IS NOT NULL DROP TABLE #sumtemp
                  SELECT 
	                  accbyrule.AccruePeriod AS AccruePeriod,
                    substring(accbyrule.AccruePeriod,0,5) AS AccrueYear,
                    substring(accbyrule.AccruePeriod,5,7) AS AccrueMonth,
	                  SUM(accbyrule.ReceivedAmount) AS ReceivedAmountByPeriod
                  INTO #sumtemp
                  FROM EIMS.dbo.EIMSAccruedByRule accbyrule WITH(NOLOCK)
                  Left JOIN Ipp3.dbo.Vendor vendor WITH(NOLOCK)
                  ON accbyrule.VendorNumber = vendor.SysNo
                  #StrWhere# 
                  GROUP BY 
		                  accbyrule.AccruePeriod
                      
                  SELECT 
                      SUM(ISNULL([01],0))+ SUM(ISNULL([02],0))+ SUM(ISNULL([03],0))+ SUM(ISNULL([04],0)) 
                          +SUM(ISNULL([05],0))+ SUM(ISNULL([06],0))+ SUM(ISNULL([07],0))+ SUM(ISNULL([08],0)) 
                          +SUM(ISNULL([09],0))+ SUM(ISNULL([10],0))+ SUM(ISNULL([11],0))+ SUM(ISNULL([12],0)) AS SumTotalReceiveAmount,
                      SUM(ISNULL([01],0)) AS SumRAJanuary,
                      SUM(ISNULL([02],0)) AS SumRAFebruary,
                      SUM(ISNULL([03],0)) AS SumRAMarch,
                      SUM(ISNULL([04],0)) AS SumRAApril,
                      SUM(ISNULL([05],0)) AS SumRAMay,
                      SUM(ISNULL([06],0)) AS SumRAJune,
                      SUM(ISNULL([07],0)) AS SumRAJuly,
                      SUM(ISNULL([08],0)) AS SumRAAugust,
                      SUM(ISNULL([09],0)) AS SumRASeptember,
                      SUM(ISNULL([10],0)) AS SumRAOctober,
                      SUM(ISNULL([11],0)) AS SumRANovember,
                      SUM(ISNULL([12],0)) AS SumRADecember
                  FROM  #sumtemp WITH(NOLOCK)
                  Pivot (SUM(ReceivedAmountByPeriod) FOR AccrueMonth in ([01],[02],[03],[04],[05],[06],[07],[08],[09],[10],[11],[12])) as PVT      
                   
                  DROP TABLE #sumtemp 
                ]]>
    </commandText>
  </dataCommand>
  
  <dataCommand name="ExternalSYS_Query_ReceiveByVendor" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
                  IF OBJECT_ID(N'tempdb..#resulttemp') IS NOT NULL DROP TABLE #resulttemp
                  
                  SELECT
					          invoice.VendorNumber
					          ,vendor.VendorName
	                  ,invoice.InvoiceDate
	                  ,invoice.AssignedCode AS InvoiceAssignedCode
	                  ,invoice.InvoiceNumber
	                  ,invoice.InvoiceAmount-invoice.ReceivedAmount AS NoReceivedAmount
	                  ,invoice.DueDate
	                  ,datediff(DAY,invoice.DueDate,GETDATE()) AS OverDueDays
	                  ,invoice.EIMSType 
	                  ,ruleinfo.AssignedCode AS RuleAssignedCode
	                  ,ruleinfo.Description AS RebateDescription
	                  ,invoiceRebate.BeginDate
	                  ,invoiceRebate.EndDate
	                  ,PM.UserName AS PMName
                    ,(ROW_NUMBER() OVER(ORDER BY invoice.InvoiceNumber)) AS RowNumber
                    INTO #resulttemp
	                  FROM EIMS.dbo.EIMSInvoiceInfo invoice WITH(nolock) 
	                  LEFT JOIN EIMS.dbo.EIMSPlannedInvoice planned
	                  ON invoice.PlannedInvoiceNumber = planned.PlannedInvoiceNumber
	                  LEFT JOIN EIMS.dbo.EIMSRuleInfo ruleinfo WITH(NOLOCK)
	                  ON planned.RuleNumber = ruleinfo.RuleNumber
					          LEFT JOIN Ipp3.dbo.Vendor vendor  WITH(NOLOCK)
					          ON vendor.SysNo = invoice.VendorNumber
	                  LEFT JOIN 
	                  (
	                      SELECT CAST(SysNo AS VARCHAR(10)) AS SysNo,UserName
	                      FROM  IPP3.dbo.Sys_User WITH(NOLOCK)
	                  ) AS PM
	                  ON  ruleinfo.PM = PM.SysNo
	                  LEFT JOIN EIMS.dbo.EIMSInvoiceRebateScheme invoiceRebate WITH(NOLOCK)
	                  ON invoiceRebate.InvoiceNumber = invoice.InvoiceNumber
                    #StrWhere#
                   
                  SELECT @TotalCount = COUNT(1) FROM #resulttemp WITH(NOLOCK)
                  
                  SELECT @SumNoReceivedAmount = ISNULL(SUM(NoReceivedAmount),0.0) FROM #resulttemp WITH(NOLOCK)
          					
				          SELECT @SumOverDueAmount = ISNULL(SUM(NoReceivedAmount),0.0) FROM #resulttemp WITH(NOLOCK) WHERE OverDueDays>0
                  
                  SELECT TOP (@PageSize)
                      VendorNumber
                      ,VendorName
	                    ,InvoiceDate
	                    ,InvoiceAssignedCode
	                    ,InvoiceNumber
	                    ,NoReceivedAmount
	                    ,DueDate
	                    ,OverDueDays
	                    ,EIMSType 
	                    ,RuleAssignedCode
	                    ,RebateDescription
	                    ,BeginDate
	                    ,EndDate
	                    ,PMName
                  FROM #resulttemp WITH(NOLOCK)
                  WHERE RowNumber > @PageIndex * @PageSize
                   
                  DROP TABLE #resulttemp 
                    
                ]]>
    </commandText>
  </dataCommand>
</dataOperations>