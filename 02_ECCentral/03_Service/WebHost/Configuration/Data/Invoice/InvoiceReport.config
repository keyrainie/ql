<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">

  <dataCommand name="QueryInvoiceDetailReport4SO" database="SAPService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT @TotalCount = COUNT(1)
from( select distinct a.OrderID,
				a.OrderType,
				a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,
				c.ReceiveAddress AS Address,
				c.ReceiveContact AS ShippingContactWith,
				d.TrackingNumber,
				c.ReceiveCellPhone,
				e.Memo AS CompanyAddress,
				(SELECT COUNT(1) FROM IPP3.dbo.V_SO_Master WITH(NOLOCK) WHERE sysno = a.OrderID) AS HaveSoInfo,
				0 AS IsRO_Balance,
				(SELECT TOP 1 OrgRefundSysNo FROM OverseaServiceManagement.dbo.V_SM_ROBalance WITH(NOLOCK) WHERE NewOrderSysNo=a.OrderID) AS RefundBalance
from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
				  left join AccountingDB..Invoice_TrackingNumber d WITH(NOLOCK) on d.orderid=a.orderid and d.orderType=a.orderType
				  left join OverseaOrderManagement.dbo.V_OM_SO_Master c WITH(NOLOCK) on c.SysNo=a.orderid
				  LEFT JOIN OverseaOrderManagement.dbo.V_SO_ValueAdded_Invoice e WITH(NOLOCK) ON e.SOSysNo = a.orderid
      where a.OrderType = 'SO' ) A #StrWhere#

   SELECT
     OrderID
    ,OrderType
    ,CustomerName
    ,TaxNumber
    ,Contact
    ,Account
    ,Notes
    ,InvoiceType
    ,OutTime
    ,WarehouseNumber
    ,InvoiceID
    ,InvoiceNumber
    ,InvoiceDate
    ,ComputerNo
    ,[Address]
    ,ShippingContactWith
    ,TrackingNumber
    ,ReceiveCellPhone
    ,CompanyAddress
    ,HaveSoInfo
    ,IsRO_Balance
    ,RefundBalance
    ,RowNumber
 from (
   select TOP (@EndNumber)
    OrderID
    ,OrderType
    ,CustomerName
    ,TaxNumber
    ,Contact
    ,Account
    ,Notes
    ,InvoiceType
    ,OutTime
    ,WarehouseNumber
    ,InvoiceID
    ,InvoiceNumber
    ,InvoiceDate
    ,ComputerNo
    ,[Address]
    ,ShippingContactWith
    ,TrackingNumber
    ,ReceiveCellPhone
    ,CompanyAddress
    ,HaveSoInfo
    ,IsRO_Balance
    ,RefundBalance
    ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
  from (
			select distinct
				a.OrderID,
				a.OrderType,
				a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,
				c.ReceiveAddress AS Address,
				c.ReceiveContact AS ShippingContactWith,
				d.TrackingNumber,
				c.ReceiveCellPhone,
				e.Memo AS CompanyAddress,
				(SELECT COUNT(1) FROM IPP3.dbo.V_SO_Master WITH(NOLOCK) WHERE sysno = a.OrderID) AS HaveSoInfo,
				0 AS IsRO_Balance,
				(SELECT TOP 1 OrgRefundSysNo FROM OverseaServiceManagement.dbo.V_SM_ROBalance WITH(NOLOCK) WHERE NewOrderSysNo=a.OrderID) AS RefundBalance
				  from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
				  left join AccountingDB..Invoice_TrackingNumber d WITH(NOLOCK) on d.orderid=a.orderid and d.orderType=a.orderType
				  left join OverseaOrderManagement.dbo.V_OM_SO_Master c WITH(NOLOCK) on c.SysNo=a.orderid
				  LEFT JOIN OverseaOrderManagement.dbo.V_SO_ValueAdded_Invoice e WITH(NOLOCK) ON e.SOSysNo = a.orderid
       where a.OrderType = 'SO'
        ) A #StrWhere# ) result
    WHERE RowNumber > @StartNumber
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="QueryInvoiceDetailReport4RO" database="SAPService" commandType="Text">
    <commandText>
      <![CDATA[
 SELECT @TotalCount = COUNT(1)
 from (select distinct
				a.OrderID,
				a.OrderType
				,a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,
				c.ReceiveAddress AS Address,
				c.ReceiveContact AS ShippingContactWith,
				d.TrackingNumber,
				c.ReceiveCellPhone,
				e.Memo AS CompanyAddress,
				0 AS HaveSoInfo,
				(SELECT COUNT(1) FROM OverseaServiceManagement.dbo.V_SM_RMARefundMaster WITH(NOLOCK) WHERE sysno=a.orderid) AS IsRO_Balance,
				(SELECT TOP 1 OrgRefundSysNo FROM OverseaServiceManagement.dbo.V_SM_ROBalance WITH(NOLOCK) WHERE NewOrderSysNo=a.OrderID) AS RefundBalance
from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
				  left join AccountingDB..Invoice_TrackingNumber d WITH(NOLOCK) on d.orderid=a.orderid and d.orderType=a.orderType
				  left join OverseaOrderManagement.dbo.V_OM_SO_Master c WITH(NOLOCK) on c.SysNo=a.RelatedOrderid
				  LEFT JOIN OverseaOrderManagement.dbo.V_SO_ValueAdded_Invoice e WITH(NOLOCK) ON e.SOSysNo = a.orderid
      where a.OrderType = 'RO' ) A #StrWhere#

  SELECT
     OrderID
    ,OrderType
    ,CustomerName
    ,TaxNumber
    ,Contact
    ,Account
    ,Notes
    ,InvoiceType
    ,OutTime
    ,WarehouseNumber
    ,InvoiceID
    ,InvoiceNumber
    ,InvoiceDate
    ,ComputerNo
    ,[Address]
    ,ShippingContactWith
    ,TrackingNumber
    ,ReceiveCellPhone
    ,CompanyAddress
    ,HaveSoInfo
    ,IsRO_Balance
    ,RefundBalance
     ,RowNumber
   from (
select  TOP (@EndNumber)
    OrderID
    ,OrderType
    ,CustomerName
    ,TaxNumber
    ,Contact
    ,Account
    ,Notes
    ,InvoiceType
    ,OutTime
    ,WarehouseNumber
    ,InvoiceID
    ,InvoiceNumber
    ,InvoiceDate
    ,ComputerNo
    ,[Address]
    ,ShippingContactWith
    ,TrackingNumber
    ,ReceiveCellPhone
    ,CompanyAddress
    ,HaveSoInfo
    ,IsRO_Balance
    ,RefundBalance
    ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
  from (
 select distinct
				a.OrderID,
				a.OrderType
				,a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,
				c.ReceiveAddress AS Address,
				c.ReceiveContact AS ShippingContactWith,
				d.TrackingNumber,
				c.ReceiveCellPhone,
				e.Memo AS CompanyAddress,
				0 AS HaveSoInfo,
				(SELECT COUNT(1) FROM OverseaServiceManagement.dbo.V_SM_RMARefundMaster WITH(NOLOCK) WHERE sysno=a.orderid) AS IsRO_Balance,
				(SELECT TOP 1 OrgRefundSysNo FROM OverseaServiceManagement.dbo.V_SM_ROBalance WITH(NOLOCK) WHERE NewOrderSysNo=a.OrderID) AS RefundBalance

				  from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
				  left join AccountingDB..Invoice_TrackingNumber d WITH(NOLOCK) on d.orderid=a.orderid and d.orderType=a.orderType
				  left join OverseaOrderManagement.dbo.V_OM_SO_Master c WITH(NOLOCK) on c.SysNo=a.RelatedOrderid
				  LEFT JOIN OverseaOrderManagement.dbo.V_SO_ValueAdded_Invoice e WITH(NOLOCK) ON e.SOSysNo = a.orderid
        where a.OrderType = 'RO'
		) A #StrWhere# )result
   WHERE RowNumber > @StartNumber
			]]>
    </commandText>
  </dataCommand>

  <dataCommand name="QueryInvoiceDetailReport4Shift" database="SAPService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT @TotalCount = COUNT(1)
from
(select distinct
				a.OrderID,
				a.OrderType,
				a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,'' as Address,'' as ShippingContactWith,'' as TrackingNumber,'' as receivecellphone,
				'' AS CompanyAddress,
				0 AS HaveSoInfo,
				0 AS IsRO_Balance,
				0 AS RefundBalance
from AccountingDB..Invoice_detail a WITH(NOLOCK)
left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
  where a.OrderType = 'SHIFT' ) A #StrWhere#

  SELECT 
     OrderID
    ,OrderType
    ,CustomerName
    ,TaxNumber
    ,Contact
    ,Account
    ,Notes
    ,InvoiceType
    ,OutTime
    ,WarehouseNumber
    ,InvoiceID
    ,InvoiceNumber
    ,InvoiceDate
    ,ComputerNo
    ,[Address]
    ,ShippingContactWith
    ,TrackingNumber
    ,ReceiveCellPhone
    ,CompanyAddress
    ,HaveSoInfo
    ,IsRO_Balance
    ,RefundBalance
    ,RowNumber
   from (
select TOP (@EndNumber) 
    OrderID
    ,OrderType
    ,CustomerName
    ,TaxNumber
    ,Contact
    ,Account
    ,Notes
    ,InvoiceType
    ,OutTime
    ,WarehouseNumber
    ,InvoiceID
    ,InvoiceNumber
    ,InvoiceDate
    ,ComputerNo
    ,[Address]
    ,ShippingContactWith
    ,TrackingNumber
    ,ReceiveCellPhone
    ,CompanyAddress
    ,HaveSoInfo
    ,IsRO_Balance
    ,RefundBalance
    ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
  from (
select distinct
				a.OrderID,
				a.OrderType,
				a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,'' as Address,'' as ShippingContactWith,'' as TrackingNumber,'' as receivecellphone,
				'' AS CompanyAddress,
				0 AS HaveSoInfo,
				0 AS IsRO_Balance,
				0 AS RefundBalance
				  from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
        where a.OrderType = 'SHIFT') A  #StrWhere# ) result
where RowNumber > @StartNumber
			]]>
    </commandText>
  </dataCommand>

  <dataCommand name="QueryInvoiceDetailReport4All" database="SAPService" commandType="Text">
    <commandText>
      <![CDATA[
select @TotalCount = COUNT(1)
from (select distinct
				a.OrderID,
				a.OrderType,
				a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,
				c.ReceiveAddress AS Address,
				c.ReceiveContact AS ShippingContactWith,
				d.TrackingNumber,
				c.ReceiveCellPhone,
				e.Memo AS CompanyAddress,
				(SELECT COUNT(1) FROM IPP3.dbo.V_SO_Master WITH(NOLOCK) WHERE sysno = a.OrderID) AS HaveSoInfo,
				0 AS IsRO_Balance,
				(SELECT TOP 1 OrgRefundSysNo FROM OverseaServiceManagement.dbo.V_SM_ROBalance WITH(NOLOCK) WHERE NewOrderSysNo=a.OrderID) AS RefundBalance

				  from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
				  left join AccountingDB..Invoice_TrackingNumber d WITH(NOLOCK) on d.orderid=a.orderid and d.orderType=a.orderType
				  left join OverseaOrderManagement.dbo.V_OM_SO_Master c WITH(NOLOCK) on c.SysNo=a.orderid
				  LEFT JOIN OverseaOrderManagement.dbo.V_SO_ValueAdded_Invoice e WITH(NOLOCK) ON e.SOSysNo = a.orderid
				 where a.OrderType = 'SO'

UNION ALL
	select distinct
				a.OrderID,
				a.OrderType
				,a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,
				c.ReceiveAddress AS Address,
				c.ReceiveContact AS ShippingContactWith,
				d.TrackingNumber,
				c.ReceiveCellPhone,
				e.Memo AS CompanyAddress,
				0 AS HaveSoInfo,
				(SELECT COUNT(1) FROM OverseaServiceManagement.dbo.V_SM_RMARefundMaster WITH(NOLOCK) WHERE sysno=a.orderid) AS IsRO_Balance,
				(SELECT TOP 1 OrgRefundSysNo FROM OverseaServiceManagement.dbo.V_SM_ROBalance WITH(NOLOCK) WHERE NewOrderSysNo=a.OrderID) AS RefundBalance

				  from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
				  left join AccountingDB..Invoice_TrackingNumber d WITH(NOLOCK) on d.orderid=a.orderid and d.orderType=a.orderType
				  left join OverseaOrderManagement.dbo.V_OM_SO_Master c WITH(NOLOCK) on c.SysNo=a.RelatedOrderid
				  LEFT JOIN OverseaOrderManagement.dbo.V_SO_ValueAdded_Invoice e WITH(NOLOCK) ON e.SOSysNo = a.orderid
				  where a.OrderType ='RO'

UNION ALL
	select distinct
				a.OrderID,
				a.OrderType,
				a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,'' as Address,'' as ShippingContactWith,'' as TrackingNumber,'' as receivecellphone,
				'' AS CompanyAddress,
				0 AS HaveSoInfo,
				0 AS IsRO_Balance,
				0 AS RefundBalance
				  from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
				 where a.OrderType = 'SHIFT') A  #StrWhere#

SELECT 
     OrderID
    ,OrderType
    ,CustomerName
    ,TaxNumber
    ,Contact
    ,Account
    ,Notes
    ,InvoiceType
    ,OutTime
    ,WarehouseNumber
    ,InvoiceID
    ,InvoiceNumber
    ,InvoiceDate
    ,ComputerNo
    ,[Address]
    ,ShippingContactWith
    ,TrackingNumber
    ,ReceiveCellPhone
    ,CompanyAddress
    ,HaveSoInfo
    ,IsRO_Balance
    ,RefundBalance
    ,RowNumber
 from
(
select TOP (@EndNumber)
OrderID
,OrderType
,CustomerName
,TaxNumber
,Contact
,Account
,Notes
,InvoiceType
,OutTime
,WarehouseNumber
,InvoiceID
,InvoiceNumber
,InvoiceDate
,ComputerNo
,[Address]
,ShippingContactWith
,TrackingNumber
,ReceiveCellPhone
,CompanyAddress
,HaveSoInfo
,IsRO_Balance
,RefundBalance
,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
from
(
select distinct
				a.OrderID,
				a.OrderType,
				a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,
				c.ReceiveAddress AS Address,
				c.ReceiveContact AS ShippingContactWith,
				d.TrackingNumber,
				c.ReceiveCellPhone,
				e.Memo AS CompanyAddress,
				(SELECT COUNT(1) FROM IPP3.dbo.V_SO_Master WITH(NOLOCK) WHERE sysno = a.OrderID) AS HaveSoInfo,
				0 AS IsRO_Balance,
				(SELECT TOP 1 OrgRefundSysNo FROM OverseaServiceManagement.dbo.V_SM_ROBalance WITH(NOLOCK) WHERE NewOrderSysNo=a.OrderID) AS RefundBalance

				  from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
				  left join AccountingDB..Invoice_TrackingNumber d WITH(NOLOCK) on d.orderid=a.orderid and d.orderType=a.orderType
				  left join OverseaOrderManagement.dbo.V_OM_SO_Master c WITH(NOLOCK) on c.SysNo=a.orderid
				  LEFT JOIN OverseaOrderManagement.dbo.V_SO_ValueAdded_Invoice e WITH(NOLOCK) ON e.SOSysNo = a.orderid
				 where a.OrderType = 'SO'

UNION ALL
	select distinct
				a.OrderID,
				a.OrderType
				,a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,
				c.ReceiveAddress AS Address,
				c.ReceiveContact AS ShippingContactWith,
				d.TrackingNumber,
				c.ReceiveCellPhone,
				e.Memo AS CompanyAddress,
				0 AS HaveSoInfo,
				(SELECT COUNT(1) FROM OverseaServiceManagement.dbo.V_SM_RMARefundMaster WITH(NOLOCK) WHERE sysno=a.orderid) AS IsRO_Balance,
				(SELECT TOP 1 OrgRefundSysNo FROM OverseaServiceManagement.dbo.V_SM_ROBalance WITH(NOLOCK) WHERE NewOrderSysNo=a.OrderID) AS RefundBalance

				  from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
				  left join AccountingDB..Invoice_TrackingNumber d WITH(NOLOCK) on d.orderid=a.orderid and d.orderType=a.orderType
				  left join OverseaOrderManagement.dbo.V_OM_SO_Master c WITH(NOLOCK) on c.SysNo=a.RelatedOrderid
				  LEFT JOIN OverseaOrderManagement.dbo.V_SO_ValueAdded_Invoice e WITH(NOLOCK) ON e.SOSysNo = a.orderid
				  where a.OrderType ='RO'

UNION ALL
	select distinct
				a.OrderID,
				a.OrderType,
				a.CustomerName,
				a.TaxNumber,
				a.Contact,
				a.Account,
				a.Notes,
				a.InvoiceType,
				a.OutTime,
				a.WarehouseNumber,
				b.InvoiceID,
				b.InvoiceNumber,
				b.InvoiceDate,
				b.ComputerNo,'' as Address,'' as ShippingContactWith,'' as TrackingNumber,'' as receivecellphone,
				'' AS CompanyAddress,
				0 AS HaveSoInfo,
				0 AS IsRO_Balance,
				0 AS RefundBalance
				  from AccountingDB..Invoice_detail a WITH(NOLOCK)
				  left join AccountingDB..Invoice_Result b WITH(NOLOCK) on b.orderid=a.orderid and b.ordertype=a.ordertype
				 where a.OrderType = 'SHIFT'
) A  #StrWhere#) result
where RowNumber > @StartNumber
			]]>
    </commandText>
  </dataCommand>

  <dataCommand name="InsertTrackingNumber" database="SAPService" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @SysNo INT
IF NOT EXISTS(SELECT TOP 1 1 FROM AccountingDB..Invoice_TrackingNumber WITH(NOLOCK)
	  WHERE OrderID=@OrderID AND OrderType=@OrderType AND InvoiceNumber=@InvoiceNumber)

BEGIN
			INSERT INTO [AccountingDB].[dbo].[Invoice_TrackingNumber]
				   ([OrderID]
				   ,[OrderType]
				   ,[InvoiceNumber]
				   ,[TrackingNumber]
				   ,[InDate])
			 VALUES
				   (@OrderID
				   ,@OrderType
				   ,@InvoiceNumber
				   ,@TrackingNumber
				   ,GETDATE())
End

SELECT @SysNo=SCOPE_IDENTITY()
SELECT CASE WHEN @SysNo is null THEN 0 else @SysNo END
			]]>
    </commandText>
    <parameters>
      <param name="@OrderID" dbType="String"/>
      <param name="@OrderType" dbType="String"/>
      <param name="@InvoiceNumber" dbType="String"/>
      <param name="@TrackingNumber" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="QueryGiftInvoiceDetailReport" database="SAPService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT @TotalCount = COUNT(1)
FROM OverseaOrderManagement.dbo.V_OM_SO_Master a WITH(NOLOCK)
			INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_CheckShipping scs WITH(NOLOCK)
				ON a.SysNo=scs.SOSysNo AND scs.SOType=4
			INNER JOIN OverseaCustomerManagement.dbo.V_CUM_CustomerBaseInfo ct WITH(NOLOCK)
				ON ct.SysNo = a.CustomerSysNo
			INNER JOIN OverseaControlPanel.dbo.V_CP_PayType pt WITH(NOLOCK)
				ON a.PayTypeSysNo=pt.sysno
			LEFT JOIN OverseaInvoiceReceiptManagement.dbo.Invoice_Master sl WITH(NOLOCK)
				ON a.SysNo=sl.SONumber AND sl.WarehouseNumber=51
			LEFT JOIN AccountingDB.dbo.Invoice_TrackingNumber d WITH(NOLOCK)
				ON d.orderid=CAST(a.SysNo AS NVARCHAR(20)) AND d.orderType='SO'
			LEFT JOIN OverseaOrderManagement.dbo.V_SO_ValueAdded_Invoice e WITH(NOLOCK)
				ON e.SOSysNo = a.SysNo
       #StrWhere#

SELECT TOP (@EndNumber)
	    OrderID
      ,OrderType
      ,CustomerName
      ,TaxNumber
      ,Contact
      ,Notes
      ,InvoiceType
      ,OutTime
      ,WarehouseNumber
      ,InvoiceNumber
      ,InvoiceCreateTime
      ,[Address]
      ,ShippingContactWith
      ,TrackingNumber
      ,PayTypeName
      ,ReceiveCellPhone
      ,CompanyAddress
FROM (
SELECT a.SOID AS OrderID,
					'SO' OrderType,
					ct.CustomerName,
					'' as TaxNumber,
					ISNULL(a.ReceiveAddress,'')+'('+ISNULL(a.ReceivePhone,'')+')'  AS Contact,
					a.Note AS Notes,
					2 as InvoiceType,
					a.OutTime,
					51 AS WarehouseNumber,
					sl.InvoiceNo as InvoiceNumber,
					sl.InvoiceCreateDate AS InvoiceCreateTime,
					a.ReceiveAddress AS Address,
					a.ReceiveContact AS ShippingContactWith,
					d.TrackingNumber,
					pt.PayTypeName,
					a.ReceiveCellPhone,
					e.CompanyAddress AS CompanyAddress,
					(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
			FROM OverseaOrderManagement.dbo.V_OM_SO_Master a WITH(NOLOCK)
			INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_CheckShipping scs WITH(NOLOCK)
				ON a.SysNo=scs.SOSysNo AND scs.SOType=4
			INNER JOIN OverseaCustomerManagement.dbo.V_CUM_CustomerBaseInfo ct WITH(NOLOCK)
				ON ct.SysNo = a.CustomerSysNo
			INNER JOIN OverseaControlPanel.dbo.V_CP_PayType pt WITH(NOLOCK)
				ON a.PayTypeSysNo=pt.sysno
			LEFT JOIN OverseaInvoiceReceiptManagement.dbo.Invoice_Master sl WITH(NOLOCK)
				ON a.SysNo=sl.SONumber AND sl.WarehouseNumber=51
			LEFT JOIN AccountingDB.dbo.Invoice_TrackingNumber d WITH(NOLOCK)
				ON d.orderid=CAST(a.SysNo AS NVARCHAR(20)) AND d.orderType='SO'
			LEFT JOIN OverseaOrderManagement.dbo.V_SO_ValueAdded_Invoice e WITH(NOLOCK)
				ON e.SOSysNo = a.SysNo
     #StrWhere# ) result
  where RowNumber > @StartNumber
			]]>
    </commandText>
  </dataCommand>

  <dataCommand name="GetInvoicePrintAll" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
		  SELECT @TotalCount=count(1)
				FROM OverseaOrderManagement.dbo.V_OM_SO_Master SO WITH(NOLOCK)
				INNER JOIN 	OverseaOrderManagement.dbo.V_OM_Sub_SO_Master SB  WITH(NOLOCK)
					ON SB.SOSysNo = SO.SysNo
				INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_CheckShipping SCS WITH(NOLOCK)
					ON SCS.SOSysNo = SO.SysNo
				INNER JOIN  OverseaInventoryManagement.dbo.V_INM_Stock st WITH(NOLOCK)
					ON sb.WareHouseNumber = cast(st.SysNo AS CHAR(2))
				#StrWhere#

				SELECT
          SOID,
					SOStatus,
					InvoiceType,
					CreateTime,
					AuditTime,
					OutTime,
					SOTotalAmt,
					SOAmt,
					OtherAmt,
					WareHouseNumber,
					WareHouseName,
					BussinessMode,
          InvoiceAmt
        FROM
				(SELECT TOP (@EndNumber)
					  so.SOID,
						so.Status AS SOStatus,
						so.IsVAT AS InvoiceType,
						so.OrderDate AS CreateTime,
						so.AuditTime,
						so.OutTime,
						SB.SOTotalAmt,
						SB.SOAmt,
						SB.ShippingCharge + SB.PayPrice + SB.PremiumAmt AS OtherAmt,
						SB.WareHouseNumber,
						CASE
							WHEN (st.SysNo=51 OR st.SysNo=59) then '上海仓'
							ELSE st.StockName
						END AS WareHouseName,
						CASE
							WHEN scs.StockType=@NEG AND scs.ShippingType=@NEG AND scs.InvoiceType=@NEG THEN 1
							WHEN scs.StockType=@MET AND scs.ShippingType=@NEG AND scs.InvoiceType=@NEG THEN 2
							WHEN scs.StockType=@MET AND scs.ShippingType=@MET AND scs.InvoiceType=@NEG THEN 3
							WHEN scs.StockType=@NEG AND scs.ShippingType=@NEG AND scs.InvoiceType=@MET THEN 4
							WHEN scs.StockType=@MET AND scs.ShippingType=@NEG AND scs.InvoiceType=@MET THEN 5
							WHEN scs.StockType=@MET AND scs.ShippingType=@MET AND scs.InvoiceType=@MET THEN 6
						  ELSE
							  -1
						END AS BussinessMode,
            sb.InvoiceAmt
					   ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
				FROM OverseaOrderManagement.dbo.V_OM_SO_Master SO WITH(NOLOCK)
				INNER JOIN 	OverseaOrderManagement.dbo.V_OM_Sub_SO_Master SB  WITH(NOLOCK)
					ON SB.SOSysNo = SO.SysNo
				INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_CheckShipping SCS WITH(NOLOCK)
					ON SCS.SOSysNo = SO.SysNo
				INNER JOIN  OverseaInventoryManagement.dbo.V_INM_Stock st WITH(NOLOCK)
					ON sb.WareHouseNumber = cast(st.SysNo AS CHAR(2))
				#StrWhere#) result
				WHERE RowNumber>@StartNumber
			]]>
    </commandText>
  </dataCommand>
  
  <!--发票打印相关-->
  <dataCommand name="InvoiceReport.GetSOInvoiceMaster" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
     		SELECT  sb.SOSysNo,
				  cast(sb.WareHouseNumber AS int) AS StockSysNo,
				  sb.InvoiceAmt,
				  sb.SOTotalAmt,																								
				  sb.SOAmt,
				  so.PrepayAmt,
				  sb.CashPay,		
				  sb.PremiumAmt,																													
				  sb.ShippingCharge,												
				  sb.PayPrice,												
				  sb.Discount,				
				  sb.GiftCardPay,				
				  sb.Promotion,					  		  				  	
				  sb.PointPay,	
				  (SELECT SUM(soitem.Point*soitem.Quantity) FROM OverseaOrderManagement.dbo.V_OM_SO_Item soitem WITH(NOLOCK)
					LEFT JOIN OverseaOrderManagement.dbo.V_OM_Sub_SO_Item subsoitem WITH(NOLOCK)
					ON soitem.SOSysNo = subsoitem.SOSysNo
					AND soitem.ProductSysNo = subsoitem.ProductSysNo
					AND soitem.Price = subsoitem.Price
					AND soitem.ProductType = soitem.ProductType
					AND ISNULL(soitem.MasterProductSysNo,'') = ISNULL(soitem.MasterProductSysNo,'')
					WHERE subsoitem.MasterSysNo = sb.SysNo) AS PointAmt,		  						  
				  so.PromotionCodeSysNo,
				  isnull(pm.PromotionName,'') AS PromotionCodeName,
				  so.ShipTypeSysNo,
				  so.PayTypeSysNo,
				  scs.SpecialSOType,
				  cast(isnull(so.IsUseChequesPay,0) as bit) AS IsUseChequesPay,					
				  cast(isnull(scs.IsRequireShipInvoice,0) AS bit) AS IsRequireShipInvoice,
				  cast(isnull(scs.IsCombine,0)AS bit) AS IsCombine,
				  cast(isnull(scs.IsExtendWarrantyOrder,0) AS bit) AS IsExtendWarrantyOrder,
				  cast(isnull(scs.IsMultiInvoice,0) AS bit) IsMultiInvoice,
          cast(isnull(pay.IsPayWhenRecv,0)AS bit) isPayWhenRecv,
				  scs.MerchantSysNo,
				  scs.StockType,
				  scs.ShippingType,
				  scs.InvoiceType,          
				  CASE 
					  WHEN scs.StockType=@NEG AND scs.ShippingType=@NEG AND scs.InvoiceType=@NEG THEN 1
					  WHEN scs.StockType=@MET AND scs.ShippingType=@NEG AND scs.InvoiceType=@NEG THEN 2
					  WHEN scs.StockType=@MET AND scs.ShippingType=@MET AND scs.InvoiceType=@NEG THEN 3
					  WHEN scs.StockType=@NEG AND scs.ShippingType=@NEG AND scs.InvoiceType=@MET THEN 4
					  WHEN scs.StockType=@MET AND scs.ShippingType=@NEG AND scs.InvoiceType=@MET THEN 5
					  WHEN scs.StockType=@MET AND scs.ShippingType=@MET AND scs.InvoiceType=@MET THEN 6
					ELSE 
						-1
				  END AS BussinessMode
				FROM OverseaOrderManagement.dbo.V_OM_Sub_SO_Master SB  WITH(NOLOCK) 
				INNER JOIN 	OverseaOrderManagement.dbo.V_OM_SO_Master SO WITH(NOLOCK)
					ON SB.SOSysNo = SO.SysNo
				INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_CheckShipping SCS WITH(NOLOCK) 
					ON SCS.SOSysNo = SB.SOSysNo 				
				INNER JOIN OverseaControlPanel.dbo.V_CP_PayType pay WITH(NOLOCK) 
						ON so.PayTypeSysNo = pay.SysNo
				LEFT JOIN ipp3.dbo.Promotion_Code pc WITH(NOLOCK) 
						ON so.PromotionCodeSysNo = pc.SysNo
				LEFT JOIN ipp3.dbo.Promotion_Master pm WITH(NOLOCK) 
						ON pc.PromotionSysNo = pm.SysNo	 
				WHERE SB.SOSysNo=@SOSysNo AND sb.WareHouseNumber=@StockSysNo	
			]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32"/>
      <param name="@StockSysNo" dbType="Int32"/>
      <param name="@NEG" dbType="AnsiStringFixedLength"/>
      <param name="@MET" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>

  <dataCommand name="InvoiceReport.GetInvoicePrintHead" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
				SELECT           
					M.ReceiveName,
					M.ReceiveContact,
					ISNULL(A.DistrictName,'') + ' ' + ISNULL(M.ReceiveAddress,'') AS ReceiveAddress,
					ISNULL(M.ReceivePhone,'') + ' ' + ISNULL(M.ReceiveCellPhone,'') AS ReceivePhone,
					M.CustomerSysNo,
					M.InvoiceNote,
					P.PayTypeName,
					0 AS TotalWeight,
					SM.InvoiceAmt,
					S.ShipTypeName,
					0 AS SumExtendPrice,
          SM.SOSysNo
				FROM 
					OverseaOrderManagement.dbo.V_OM_Sub_SO_Master SM WITH(NOLOCK)
				INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_Master M WITH(NOLOCK)
					ON M.SysNo=SM.SOSysNo AND SM.WareHouseNumber=@StockSysNo
				INNER JOIN OverseaControlPanel.dbo.V_CP_PayType P WITH(NOLOCK)
					ON P.SysNo=M.PayTypeSysNo
				INNER JOIN OverseaControlPanel.dbo.V_CP_ShipType S WITH(NOLOCK)
					ON S.SysNo = M.ShipTypeSysNo
				LEFT JOIN OverseaControlPanel.dbo.V_CP_Area A WITH(NOLOCK)
					ON A.SysNo = M.ReceiveAreaSysNo
				WHERE SM.SOSysNo=@SOSysNo AND SM.WareHouseNumber=@StockSysNo
			]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32"/>
      <param name="@StockSysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="InvoiceReport.GetSOInvoiceProductItem" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
			SELECT	   
	         B.ProductID AS ItemNumber,
	         B.BriefName AS [Description],
	         I.OriginalPrice AS UnitPrice,
	         I.Quantity,	   
	         ISNULL(I.OriginalPrice,0)*ISNULL(I.Quantity,0) AS SumExtendPrice,   
	         OI.Warranty AS RepairWarrantyDays,	   
	         CASE WHEN B.ProductType = 1 THEN 1 ELSE 0 END as ProductType,
	         cast(0 as bit) As IsExtendWarrantyItem,
	         B.SysNo As ProductSysNo,
	         '' As MasterProductSysNo 					   
      FROM 
	      OverseaOrderManagement.dbo.V_OM_Sub_SO_Item I WITH(NOLOCK)
      INNER JOIN  OverseaOrderManagement.dbo.V_OM_SO_Item OI WITH(NOLOCK)
	      ON	OI.SOSysNo = I.SOSysNo AND OI.ProductSysNo = I.ProductSysNo 
      INNER JOIN  OverseaContentManagement.dbo.V_CM_ItemBasicInfo B WITH(NOLOCK)
	      ON 	B.SysNo = I.ProductSysNo
      WHERE I.SOSysNo = @SOSysNo AND OI.WarehouseNumber = @StockSysNo
			]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32"/>
      <param name="@StockSysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="InvoiceReport.GetSOExtendWarrantyItem" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        Select    
	        'YB-' + cast(SE.ProductSysNo AS nvarchar(10)) +'-'+ cast(se.MasterProductSysNo AS nvarchar(10)) AS ItemNumber,			   			   
	        se.BriefName AS [Description],
	        se.Price AS UnitPrice,
	        se.Quantity,
	        isnull(se.Price,0)*isnull(se.Quantity,0) AS SumExtendPrice,
	        '' AS RepairWarrantyDays,	 
	        0 AS ProductType,
	        cast(1 as bit) AS IsExtendWarrantyItem,
	        se.ProductSysNo,
	        se.MasterProductSysNo      
      From 
	      OverseaOrderManagement.dbo.V_SO_ExtendWarrantyItem SE WITH(NOLOCK)
      INNER JOIN  OverseaOrderManagement.dbo.V_OM_Sub_SO_Item  SI WITH(nolock)
	      On SI.ProductSysNo = SE.MasterProductSysNo AND SE.SOSysNo = SI.SOSysNo
      INNER JOIN  OverseaOrderManagement.dbo.V_OM_SO_Item OI WITH(NOLOCK)
	      ON	OI.SOSysNo = SI.SOSysNo AND OI.ProductSysNo = SI.ProductSysNo       
      Where SE.SOSysNo = @SOSysNo AND OI.WarehouseNumber = @StockSysNo And SE.Status = 0
			]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32"/>
      <param name="@StockSysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="InvoiceReport.GetInvoiceSub" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[			
        SELECT  S.InvoiceSeq,
          S.ProductSysNo,
          P.ProductID,
          S.MasterProductSysNo,
          S.SplitQty,          
          CAST(IsNULL(S.IsExtendWarrantyItem,0) AS BIT) AS IsExtendWarrantyItem
        FROM IPP3.dbo.SubInvoice S WITH(NOLOCK)
        INNER JOIN OverseaContentManagement.dbo.V_IM_Product P WITH(NOLOCK) 
	        ON P.SysNo=S.ProductSysNo 
        WHERE S.SOSysNo=@SOSysNo  AND S.WarehouseNo=@StockSysNo And S.IsExtendWarrantyItem<>1
        UNION ALL
        SELECT  
          S.InvoiceSeq,
          S.ProductSysNo,
          'YB-'+cast(S.ProductSysNo As nvarchar(10))+'-'+cast(S.MasterProductSysNo As nvarchar(10)) As ProductID,
          S.MasterProductSysNo,
          S.SplitQty,          
          CAST(IsNULL(S.IsExtendWarrantyItem,0) AS BIT) AS IsExtendWarrantyItem
        FROM IPP3.dbo.SubInvoice S WITH(NOLOCK)
        INNER JOIN OverseaOrderManagement.dbo.V_SO_ExtendWarrantyItem EI WITH(NOLOCK)
	        On EI.ProductSysNo=S.ProductSysNo And EI.MasterProductSysNo=S.MasterProductSysNo
		        And EI.SOSysNO=S.SOSysNo
        WHERE S.SOSysNo=@SOSysNo  AND S.WarehouseNo=@StockSysNo And S.IsExtendWarrantyItem=1 And EI.Status=0 
  			]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32"/>
      <param name="@StockSysNo" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <dataCommand name="InvoiceReport.GetSysConfiguration" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
				SELECT [value] 
        FROM ipp3.dbo.Sys_Configuration sc
        WHERE [KEY]=@key
			]]>
    </commandText>
    <parameters>
      <param name="@key" dbType="String"/>
    </parameters>
  </dataCommand>

  <dataCommand name="InvoiceReport.GetSelfPrintInvoiceList" database="SAPService" commandType="Text">
    <commandText>
      <![CDATA[
				  SELECT @TotalCount=count(1)
				FROM    IPP3.dbo.SO_Master sm WITH(NOLOCK)
                INNER JOIN OverseaOrderManagement.dbo.Sub_SO_Master subso WITH(NOLOCK) ON subso.SOSysNo=sm.SysNo 
                LEFT JOIN InvoiceManagement.dbo.InvoiceMaster im WITH(NOLOCK) ON sm.SysNo = im.SOSysNo AND im.InvoiceType <> 'V' 
				#StrWhere#

				SELECT 
				  OrderID ,
				  OutTime ,
				  InvoiceType,
				  InvoiceNumber ,
				  InvoiceCode ,
				  InvoiceDate ,
				  CASE WHEN InvoiceAmount IS NOT NULL THEN Convert(decimal(18,2),InvoiceAmount) END AS InvoiceAmount,
				  InvoiceStatus,
				  IsNegativeInvoice,
				  IsRePrint
        FROM 
				(SELECT TOP (@EndNumber)
					sm.SysNo AS OrderID ,
					sm.OutTime AS OutTime ,
					CASE WHEN sm.IsVAT = 0 THEN '普票'
					END AS InvoiceType,
					im.InvoiceNumber AS InvoiceNumber ,
					im.InvoiceCode AS InvoiceCode ,
					im.PrintDate AS InvoiceDate ,
					im.Amount AS InvoiceAmount,
					CASE WHEN im.InvoiceType='O' THEN '正常发票'
					 WHEN im.InvoiceType='N' THEN '红冲发票'          
					 END AS InvoiceStatus,
				    CASE WHEN im.IsNegativeInvoice='Y' THEN '是'
				     WHEN im.IsNegativeInvoice='N' THEN '否' 
				     END AS IsNegativeInvoice,
				      CASE WHEN im.IsRePrint='Y' THEN '是'
				     WHEN im.IsRePrint='N' THEN '否' 
				     END AS IsRePrint
					   ,(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber
				FROM    IPP3.dbo.SO_Master sm WITH(NOLOCK)
                INNER JOIN OverseaOrderManagement.dbo.Sub_SO_Master subso WITH(NOLOCK) ON subso.SOSysNo=sm.SysNo 
                LEFT JOIN InvoiceManagement.dbo.InvoiceMaster im WITH(NOLOCK) ON sm.SysNo = im.SOSysNo AND im.InvoiceType <> 'V' 
				#StrWhere#) result
				WHERE RowNumber>@StartNumber
      
			]]>
    </commandText>
  </dataCommand>
  
  <dataCommand name="InvoiceReport.GetSelfPrintStocks" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[				 
        SELECT top 1 Value
        FROM    IPP3.dbo.Sys_Configuration WITH ( NOLOCK )
        WHERE   [Key] = 'InvoiceSelfPrintStocks'
			]]>
    </commandText>
  </dataCommand>

  <dataCommand name="InvoiceReport.GetSelfPrintStocksName" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[				 
        SELECT  s.SysNo as Code ,s.StockName as Name
        FROM    IPP3.dbo.Stock s WITH ( NOLOCK )
        #StrWhere#
			]]>
    </commandText>
  </dataCommand>

  <dataCommand name="FinancialReport.IncomeCostReportQuery" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[				 
SELECT @TotalCount = COUNT(1) FROM (
	SELECT SOSysNo
	FROM [ReportDB].[dbo].[Fin_Report_ProductSales] WITH(NOLOCK) #StrWhere# GROUP BY SOSysNo, OrderDate,VendorSysNo ) T
	  

IF OBJECT_ID('tempdb.dbo.#TEMP') IS NOT NULL
	DROP TABLE dbo.#TEMP

CREATE TABLE #TEMP (
	SysNo int IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	SOSysNo int,
	OrderDate datetime,
  OutTime datetime,
  CustomerName nvarchar(50),
	ChannelID char(50),
	PayTypeSysNo int,
	PayTypeName nvarchar(50),
	ShippingAmount decimal(19, 6), -- 运费
	ProductPriceAmount decimal(19, 6), --商品结算金额
	PromotionDiscountAmount decimal(19, 6), --优惠券
	PointPayAmount decimal(19, 6), --积分支付
	TariffAmount decimal(19, 6), -- 关税
	DiscountAmount decimal(19, 6), -- 折扣合计
	PayAmount decimal(19, 6), --合计结算金额
	ShippingGrossMargin decimal(19, 6),-- 运费毛利
	ProductCostAmount decimal(19, 6), --商品合计成本
	ProductIncome decimal(19, 6), --商品营业收入
	ProductGrossMargin decimal(19, 6), --商品毛利
	SOIncome decimal(19, 6), --合计营业收入
	SOGrossMargin decimal(19, 6), --订单毛利
	SOStatus int,
	RowNumber int,
	PRIMARY KEY (SysNo)
) 	

;WITH T AS (
  SELECT SOSysNo, ROW_NUMBER() OVER(ORDER BY OrderDate DESC, SOSysNo DESC) AS RowNumber
  FROM ReportDB.dbo.Fin_Report_ProductSales WITH(NOLOCK)
  #StrWhere#
  GROUP BY SOSysNo, OrderDate,VendorSysNo
)

INSERT #TEMP (
	[SOSysNo],
	[RowNumber]
)
SELECT 
	SOSysNo,
	RowNumber	
FROM T 
ORDER BY RowNumber


DECLARE @rowcount INT	
DECLARE @currentRow INT
SELECT @rowcount = 0, @currentRow = 1

SELECT @rowcount = COUNT(1) FROM #TEMP WITH(NOLOCK)


WHILE @currentRow <= @rowcount
BEGIN
	DECLARE 
		@SOSysNo int,
		@OrderDate datetime,
    @OutTime datetime,
    @CustomerName nvarchar(50),
		@ChannelID char(50),
		@PayTypeSysNo int,
		@PayTypeName nvarchar(50),
		@ShippingAmount decimal(19, 6), -- 运费
		@ProductPriceAmount decimal(19, 6), --商品结算金额
		@PromotionDiscountAmount decimal(19, 6), --优惠券
		@PointPayAmount decimal(19, 6), --积分支付
		@TariffAmount decimal(19, 6), -- 关税
		@DiscountAmount decimal(19, 6), -- 折扣合计
		@PayAmount decimal(19, 6), --合计结算金额
		@ShippingGrossMargin decimal(19, 6),-- 运费毛利
		@ProductCostAmount decimal(19, 6), --商品合计成本
		@ProductIncome decimal(19, 6), --商品营业收入
		@ProductGrossMargin decimal(19, 6), --商品毛利
		@SOIncome decimal(19, 6), --合计营业收入
		@SOGrossMargin decimal(19, 6), --订单毛利		
		@SOStatus int

	SELECT TOP 1 @SOSysNo = SOSysNo FROM #TEMP WITH(NOLOCK) WHERE SysNo = @currentRow
	
	SELECT TOP 1 @ProductCostAmount = SUM(ISNULL(ProductAvgCost,0) * ISNULL(POExchangeRate, 1) * ISNULL(ProductQuantity,0))
	FROM ReportDB.dbo.Fin_Report_ProductSales WITH(NOLOCK) 
	WHERE SOSysNo = @SOSysNo
	
	SELECT TOP 1
		@OrderDate					= rpt.OrderDate,
		@ChannelID					= rpt.ChannelID,
		@PayTypeSysNo				= rpt.PayTypeSysNo,
		@PayTypeName				= pay.PayTypeName,
    @OutTime            = so.OutTime,
    @CustomerName       = customer.CustomerName,
		@ShippingAmount				= rpt.SOShippingAmount, -- 运费
		@ProductPriceAmount			= rpt.SOPriceAmount, --商品结算金额
		@PromotionDiscountAmount	= rpt.SOPromotionDiscountAmount, --优惠券
		@PointPayAmount				= rpt.SOPointPayAmount, --积分支付
		@TariffAmount				= rpt.SOTariffAmount, -- 关税
		@DiscountAmount				= rpt.SODiscountAmount, -- 折扣合计
		@PayAmount					= rpt.SOBalancePayAmount, --合计结算金额
		@ShippingGrossMargin		= rpt.SOShippingAmount - rpt.SOShippingCostAmount,-- 运费毛利
		@ProductIncome				= rpt.SOPriceAmount  + rpt.SOPromotionDiscountAmount + rpt.SODiscountAmount + rpt.SOPointPayAmount, --商品营业收入
		@ProductGrossMargin			= rpt.SOPriceAmount  + rpt.SOPromotionDiscountAmount + rpt.SODiscountAmount + rpt.SOPointPayAmount - @ProductCostAmount, --商品毛利
		@SOIncome					= rpt.SOBalancePayAmount - rpt.SOTariffAmount, --合计营业收入
		@SOGrossMargin				= rpt.SOBalancePayAmount - rpt.SOTariffAmount - @ProductCostAmount - ISNULL(rpt.SOShippingCostAmount, rpt.SOShippingAmount), --订单毛利
		@SOStatus					= rpt.SOStatus
	FROM ReportDB.dbo.Fin_Report_ProductSales rpt WITH(NOLOCK)
	LEFT JOIN IPP3.dbo.PayType pay WITH(NOLOCK) ON pay.SysNo = rpt.PayTypeSysNo
  INNER JOIN ipp3.dbo.so_master so WITH(NOLOCK) ON so.SysNo = rpt.SOSysNo
  LEFT JOIN ipp3.dbo.customer customer WITH(NOLOCK) ON customer.SysNo = rpt.CustomerSysNo
	WHERE SOSysNo = @SOSysNo
		
	UPDATE #TEMP
	SET
		ChannelID					= @ChannelID,
    OutTime           = @OutTime,
    OrderDate         = @OrderDate,
    CustomerName      = @CustomerName,
		PayTypeSysNo				= @PayTypeSysNo,
		PayTypeName					= @PayTypeName,
		ShippingAmount				= @ShippingAmount,
		ProductPriceAmount			= @ProductPriceAmount,
		PromotionDiscountAmount		= @PromotionDiscountAmount,
		PointPayAmount				= @PointPayAmount,
		TariffAmount				= @TariffAmount,
		DiscountAmount				= @DiscountAmount,
		PayAmount					= @PayAmount,
		ShippingGrossMargin			= @ShippingGrossMargin,
		ProductCostAmount			= @ProductCostAmount,
		ProductIncome				= @ProductIncome,
		ProductGrossMargin			= @ProductGrossMargin,
		SOIncome					= @SOIncome,
		SOGrossMargin				= @SOGrossMargin,
		SOStatus					= @SOStatus
	WHERE SysNo = @currentRow

	SET @currentRow = @currentRow + 1
END

;WITH A AS (
	SELECT 
		A.[SOSysNo],
		A.[ChannelID],
		[ChannelName] = '食佳时代',
		A.[PayTypeSysNo],
		A.[PayTypeName],
		A.[ShippingAmount], -- 运费
		A.[ProductPriceAmount], --商品结算金额
		A.[PromotionDiscountAmount], --优惠券
		A.[PointPayAmount], --积分支付
		A.[TariffAmount], -- 关税
		A.[DiscountAmount], -- 折扣合计
		A.[PayAmount], --合计结算金额
		A.[ShippingGrossMargin],-- 运费毛利
		A.[ProductCostAmount], --商品合计成本
		A.[ProductIncome], --商品营业收入
		A.[ProductGrossMargin], --商品毛利
		A.[SOIncome], --合计营业收入
		A.[SOGrossMargin], --订单毛利
		A.[SOStatus],
    A.[OrderDate],
    A.[OutTime],
    A.[CustomerName],
		ROW_NUMBER() OVER(ORDER BY #SortColumnName#) AS RowNumber
	FROM #TEMP A WITH(NOLOCK)
)
SELECT * FROM A
WHERE A.RowNumber > @StartNumber AND A.RowNumber <= @EndNumber
ORDER BY A.RowNumber


;WITH A AS (
	SELECT 
		A.[SOSysNo],
		A.[ShippingAmount], -- 运费
		A.[ProductPriceAmount], --商品结算金额
		A.[PromotionDiscountAmount], --优惠券
		A.[PointPayAmount], --积分支付
		A.[TariffAmount], -- 关税
		A.[DiscountAmount], -- 折扣合计
		A.[PayAmount], --合计结算金额
		A.[ShippingGrossMargin],-- 运费毛利
		A.[ProductCostAmount], --商品合计成本
		A.[ProductIncome], --商品营业收入
		A.[ProductGrossMargin], --商品毛利
		A.[SOIncome], --合计营业收入
		A.[SOGrossMargin], --订单毛利
		ROW_NUMBER() OVER(ORDER BY #SortColumnName#) AS RowNumber
	FROM #TEMP A WITH(NOLOCK)
)
-- statistics for current page rows.
SELECT 
	 SUM(ISNULL(ShippingAmount, 0))				AS ShippingAmount
	,SUM(ISNULL(ProductPriceAmount, 0))			AS ProductPriceAmount
	,SUM(ISNULL(PromotionDiscountAmount, 0))	AS PromotionDiscountAmount
	,SUM(ISNULL(PointPayAmount, 0))				AS PointPayAmount
	,SUM(ISNULL(TariffAmount, 0))				AS TariffAmount
	,SUM(ISNULL(DiscountAmount, 0))				AS DiscountAmount
	,SUM(ISNULL(PayAmount, 0))					AS PayAmount
	,SUM(ISNULL(ShippingGrossMargin, 0))		AS ShippingGrossMargin
	,SUM(ISNULL(ProductCostAmount, 0))			AS ProductCostAmount
	,SUM(ISNULL(ProductIncome, 0))				AS ProductIncome
	,SUM(ISNULL(ProductGrossMargin, 0))			AS ProductGrossMargin
	,SUM(ISNULL(SOIncome, 0))					AS SOIncome
	,SUM(ISNULL(SOGrossMargin, 0))				AS SOGrossMargin	
FROM A WITH(NOLOCK)
WHERE RowNumber > @StartNumber AND RowNumber <= @EndNumber
-- statistics for all rows.
UNION ALL
SELECT
	 SUM(ISNULL(ShippingAmount, 0))				AS ShippingAmount
	,SUM(ISNULL(ProductPriceAmount, 0))			AS ProductPriceAmount
	,SUM(ISNULL(PromotionDiscountAmount, 0))	AS PromotionDiscountAmount
	,SUM(ISNULL(PointPayAmount, 0))				AS PointPayAmount
	,SUM(ISNULL(TariffAmount, 0))				AS TariffAmount
	,SUM(ISNULL(DiscountAmount, 0))				AS DiscountAmount
	,SUM(ISNULL(PayAmount, 0))					AS PayAmount
	,SUM(ISNULL(ShippingGrossMargin, 0))		AS ShippingGrossMargin
	,SUM(ISNULL(ProductCostAmount, 0))			AS ProductCostAmount
	,SUM(ISNULL(ProductIncome, 0))				AS ProductIncome
	,SUM(ISNULL(ProductGrossMargin, 0))			AS ProductGrossMargin
	,SUM(ISNULL(SOIncome, 0))					AS SOIncome
	,SUM(ISNULL(SOGrossMargin, 0))				AS SOGrossMargin	
FROM A WITH(NOLOCK)

DROP TABLE #TEMP
			]]>
    </commandText>
  </dataCommand>
  
  <dataCommand name="FinancialReport.SalesStatisticsReportQuery" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[				 
SELECT @TotalCount = COUNT(1) FROM (
	SELECT rpt.ProductSysNo
	FROM [ReportDB].[dbo].[Fin_Report_ProductSales] rpt WITH(NOLOCK)
	LEFT JOIN [OverseaContentManagement].[dbo].[Brand] brand WITH(NOLOCK) ON brand.SysNo = rpt.ProductSysNo
	 #StrWhere# GROUP BY rpt.ProductSysNo, rpt.ProductID, rpt.PayTypeSysNo,rpt.VendorSysNo ) T
	  

IF OBJECT_ID('tempdb.dbo.#TEMP') IS NOT NULL
	DROP TABLE dbo.#TEMP

CREATE TABLE #TEMP (
	SysNo int IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	--初始可以筛选字段
	ProductSysNo int,
	PayTypeSysNo int,
	BeginDate datetime,
	EndDate datetime,		
  VendorSysNo int,
  WarehouseNumber nvarchar(10),
	--需要计算的字段
	Quantity int, 
	ProductCost decimal(19, 6),
	ProductPriceAmount decimal(19, 6),
	PromotionDiscountAmount decimal(19, 6),
	ProductSaleAmount decimal(19, 6),
	ProductGrossMargin decimal(19, 6),
	
	RowNumber int,
	PRIMARY KEY (SysNo)
)

;WITH T AS (
	  SELECT rpt.ProductSysNo, rpt.PayTypeSysNo, rpt.VendorSysNo, rpt.WarehouseNumber,MIN(rpt.OrderDate) AS BeginDate, MAX(rpt.OrderDate) AS EndDate, ROW_NUMBER() OVER(ORDER BY rpt.ProductID DESC) AS RowNumber
	  FROM [ReportDB].[dbo].[Fin_Report_ProductSales] rpt WITH(NOLOCK)
	  LEFT JOIN [OverseaContentManagement].[dbo].[Brand] brand WITH(NOLOCK) ON brand.SysNo = rpt.BrandSysNo
	  #StrWhere#
	  GROUP BY rpt.ProductSysNo, rpt.ProductID, rpt.PayTypeSysNo,rpt.VendorSysNo, rpt.WarehouseNumber
)
INSERT #TEMP (
	ProductSysNo,
	PayTypeSysNo,
	BeginDate,
	EndDate,
  VendorSysNo,
  WarehouseNumber,
	RowNumber
)
SELECT 
	ProductSysNo,
	PayTypeSysNo,
	BeginDate,
	EndDate,
  VendorSysNo,
  WarehouseNumber,
	RowNumber
FROM T

DECLARE @MinOrderDate DATETIME, @MaxOrderDate DATETIME
SELECT TOP 1 @MinOrderDate = MIN(BeginDate), @MaxOrderDate = MAX(EndDate) FROM #TEMP WITHN(NOLOCK)

DECLARE @rowcount INT	
DECLARE @currentRow INT

SELECT @rowcount = 0, @currentRow = 1

SELECT @rowcount = COUNT(1) FROM #TEMP WITH(NOLOCK)

WHILE @currentRow <= @rowcount
BEGIN
	DECLARE 
		@ProductSysNo				int,
		@PayTypeSysNo				int,
		@Quantity					int,
		@ProductCost				decimal(19, 6),		--销售成本
		@ProductPriceAmount			decimal(19, 6),		--销售金额
		@PromotionDiscountAmount	decimal(19, 6),		--优惠金额
		@ProductSaleAmount			decimal(19, 6),		--实际销售金额
		@ProductGrossMargin			decimal(19, 6)		--商品毛利
		
	SELECT TOP 1 @ProductSysNo = ProductSysNo, @PayTypeSysNo = PayTypeSysNo FROM #TEMP WITH(NOLOCK) WHERE SysNo = @currentRow

	SELECT TOP 1 
		@Quantity					= SUM(ISNULL(ProductQuantity, 0)),--数量之和
		@ProductCost				= SUM(ISNULL(ProductAvgCost, 0) * ISNULL(ProductQuantity, 0)),--成本X产品数量之和
		@ProductPriceAmount			= SUM(ISNULL(ProductPrice, 0) * ISNULL(ProductQuantity, 0)),--销售价X产品数量之和
		@PromotionDiscountAmount	= SUM(ISNULL(PromotionDiscountPrice, 0) * ISNULL(ProductQuantity, 0))+SUM(ISNULL(ProductDiscountAmount, 0) * ISNULL(ProductQuantity, 0)),--折扣价X产品数量之和(折扣价为负值)
		@ProductSaleAmount			= SUM(ISNULL(ProductPrice, 0) * ISNULL(ProductQuantity, 0) + ISNULL(PromotionDiscountPrice, 0) * ISNULL(ProductQuantity, 0)+ISNULL(ProductDiscountAmount, 0) * ISNULL(ProductQuantity, 0)),--销售价-优惠价
		@ProductGrossMargin			= SUM(ISNULL(ProductPrice, 0) * ISNULL(ProductQuantity, 0) + ISNULL(PromotionDiscountPrice, 0) * ISNULL(ProductQuantity, 0)+ISNULL(ProductDiscountAmount, 0) * ISNULL(ProductQuantity, 0) - ISNULL(ProductAvgCost, 0) * ISNULL(ProductQuantity, 0))----销售价-优惠价-成本价
	FROM ReportDB.dbo.Fin_Report_ProductSales WITH(NOLOCK) 
	WHERE ProductSysNo = @ProductSysNo AND PayTypeSysNo = @PayTypeSysNo AND OrderDate BETWEEN @MinOrderDate AND @MaxOrderDate
	
	UPDATE #TEMP
	SET
		Quantity					= @Quantity,
		ProductCost					= @ProductCost,
		ProductPriceAmount			= @ProductPriceAmount,
		PromotionDiscountAmount		= @PromotionDiscountAmount,
		ProductSaleAmount			= @ProductSaleAmount,
		ProductGrossMargin			= @ProductGrossMargin
	WHERE SysNo = @currentRow

	SET @currentRow = @currentRow + 1
END

;WITH A AS (
	SELECT 
		 A.ProductSysNo
		,A.BeginDate
		,A.EndDate		
		,A.Quantity
		,A.ProductCost
		,A.ProductPriceAmount
		,A.PromotionDiscountAmount
		,A.ProductSaleAmount
		,A.ProductGrossMargin
    ,A.VendorSysNo
    ,A.WarehouseNumber
    ,vendor.VendorName
    ,stock.StockName
		,B.ProductID
		,B.ProductName
		,c1.C1Name
		,c2.C2Name
		,c3.C3Name
		,B.BrandSysNo
		,brand.BrandName_Ch AS BrandName
		,brand.BrandName_En
		,B.PayTypeSysNo
		,pay.PayTypeName
		,B.BMCode
		,B.ProductProperty1
		,B.ProductProperty2
		,ROW_NUMBER() OVER(ORDER BY #SortColumnName#) AS RowNumber
	FROM #TEMP A WITH(NOLOCK)
	LEFT JOIN (
			SELECT * 
			FROM
			(
				SELECT *, ROW_NUMBER() OVER(PARTITION BY ProductSysNo, PayTypeSysNo ORDER BY SysNo) as r
				FROM ReportDB.dbo.Fin_Report_ProductSales WITH(NOLOCK)
			) AS t
			WHERE r = 1
		) B ON B.ProductSysNo = A.ProductSysNo AND B.PayTypeSysNo = A.PayTypeSysNo
	LEFT JOIN IPP3.dbo.Category1 c1 WITH(NOLOCK) ON c1.SysNo = B.C1SysNo
	LEFT JOIN IPP3.dbo.Category2 c2 WITH(NOLOCK) ON c2.SysNo = B.C2SysNo
	LEFT JOIN IPP3.dbo.Category3 c3 WITH(NOLOCK) ON c3.SysNo = B.C3SysNo
	LEFT JOIN OverseaContentManagement.dbo.Brand brand WITH(NOLOCK) ON brand.SysNo = B.BrandSysNo
	LEFT JOIN IPP3.dbo.PayType pay WITH(NOLOCK) ON pay.SysNo = B.PayTypeSysNo
  LEFT JOIN IPP3.dbo.Vendor vendor WITH(NOLOCK) ON vendor.SysNo = A.VendorSysNo
  LEFT JOIN IPP3.dbo.Stock stock WITH(NOLOCK) ON stock.SysNo = A.WarehouseNumber
)
SELECT * FROM A
WHERE A.RowNumber > @StartNumber AND A.RowNumber <= @EndNumber
ORDER BY A.RowNumber

;WITH A AS (
	SELECT ProductCost,ProductPriceAmount,PromotionDiscountAmount,ProductSaleAmount,ProductGrossMargin FROM #TEMP
)
-- statistics for current page rows.
SELECT 
	 SUM(ISNULL(ProductCost, 0))				AS ProductCost
	,SUM(ISNULL(ProductPriceAmount, 0))			AS ProductPriceAmount
	,SUM(ISNULL(PromotionDiscountAmount, 0))	AS PromotionDiscountAmount
	,SUM(ISNULL(ProductSaleAmount, 0))			AS ProductSaleAmount
	,SUM(ISNULL(ProductGrossMargin, 0))			AS ProductGrossMargin
FROM #TEMP WITH(NOLOCK)
WHERE RowNumber > @StartNumber AND RowNumber <= @EndNumber
-- statistics for all rows.
UNION ALL
SELECT 
	 SUM(ISNULL(ProductCost, 0))				AS ProductCost
	,SUM(ISNULL(ProductPriceAmount, 0))			AS ProductPriceAmount
	,SUM(ISNULL(PromotionDiscountAmount, 0))	AS PromotionDiscountAmount
	,SUM(ISNULL(ProductSaleAmount, 0))			AS ProductSaleAmount
	,SUM(ISNULL(ProductGrossMargin, 0))			AS ProductGrossMargin
FROM #TEMP WITH(NOLOCK)

DROP TABLE #TEMP
			]]>
    </commandText>
  </dataCommand>

  <dataCommand name="FinancialReport.CouponUsedReportQuery" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[				 
        ;WITH A AS(SELECT [SOSysNo] SoSysNo
      ,[CouponCodeSysNo] CouponCodeSysNo
      ,[OrderDate] OrderDate
      ,[CouponCode] CouponCode
      ,[CouponSysNo] CouponSysNo
      ,[CouponName] CouponName
      ,[OriginalPrice] OriginalPrice
      ,[VendorSysNo] MerchantSysNo
      ,[MerchantName] MerchantName
      ,[Status] Status
      ,[PayTypeSysNo] PayTypeSysNo
      ,[PayTypeName] PayTypeName
      ,SOPayStatus
      ,[SOIncomeStatus]
      ,[HaveAutoRMA]
      ,[IsCombine]
      ,[IsMergeComplete]
      ,NetPayStatus
	  ,ROW_NUMBER() OVER(ORDER BY OrderDate DESC) AS RowNumber
  FROM [ReportDB].[dbo].[V_IPP3_CouponUsed] A WITH(NOLOCK)
   #StrWhere#)

  SELECT * FROM A
WHERE A.RowNumber > @StartNumber AND A.RowNumber <=  @EndNumber
ORDER BY A.RowNumber

;WITH B AS(SELECT 
      [OriginalPrice]
	  ,ROW_NUMBER() OVER(ORDER BY OrderDate DESC) AS RowNumber
  FROM [ReportDB].[dbo].[V_IPP3_CouponUsed] B WITH(NOLOCK) #StrWhere#)

SELECT Distinct (Select Sum(ISNULL(OriginalPrice,0)) FROM B
WHERE B.RowNumber >  @StartNumber AND B.RowNumber <= @EndNumber) AS CurrentPageAmount
,(SELECT Sum(ISNULL(OriginalPrice,0)) FROM B) AS TotalAmount
FROM B


SELECT  @TotalCount = Count(1) From (SELECT SOSysNo From [ReportDB].[dbo].[V_IPP3_CouponUsed] WITH(NOLOCK)  #StrWhere# )T
			]]>
    </commandText>
  </dataCommand>

</dataOperations>