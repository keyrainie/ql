<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <dataCommand name="QueryProductCardInventory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT result.SysNo,
  result.Total,
  result.Outbounded,
  result.Reverted,
  result.Returned,
  result.NewProduct,
  result.New,
  result.SecondHand,
  result.BadProduct,
  result.Cost,
  product.ProductID,
  product.ProductName,
  Total-Outbounded -Reverted+NewProduct -Returned as LeftQty
FROM (
  SELECT product.SysNo, 
    COUNT(product.SysNo) Total,
      -- OutboundStatus equal 1 is SendAlready
    ISNULL(SUM(CASE WHEN OutboundStatus = 1 THEN 1 END), 0) Outbounded,
      -- RevertStatus equal 1 is Reverted
    ISNULL(SUM(CASE WHEN RevertStatus = 1 THEN 1 END), 0) Reverted,
      -- ReturnStatus equal 1 is Returned
    ISNULL(SUM(CASE WHEN ReturnStatus = 1 THEN 1 End), 0) Returned,
      -- NewProductStatus not-equal 0 is not-Origin(非换货)
    ISNULL(SUM(CASE WHEN RevertStatus = 1 AND NewProductStatus <> 0 THEN 1 END), 0) NewProduct,
    ISNULL(SUM(CASE WHEN ReturnStatus = 1 AND target_product.ProductID = product.ProductID THEN 1 END), 0) New,
    ISNULL(SUM(CASE WHEN ReturnStatus = 1 AND (target_product.ProductID = product.ProductID + 'r' OR target_product.ProductID = product.ProductID + 'R') THEN 1 END), 0) SecondHand,
    ISNULL(SUM(CASE WHEN ReturnStatus = 1 AND (target_product.ProductID = product.ProductID + 'b' or target_product.ProductID = product.ProductID + 'B') THEN 1 end), 0) BadProduct,
    ISNULL(SUM(register.Cost), 0) Cost 
  FROM dbo.RMA_Register register WITH (NOLOCK) 
  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
    request_item.RegisterSysNo = register.SysNo
  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK) ON
    register.ProductSysNo = product.SysNo
  LEFT JOIN dbo.RMA_Return_Item return_item WITH (NOLOCK) ON
    return_item.RegisterSysNo = register.SysNo
  LEFT JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo target_product WITH (NOLOCK) ON
    return_item.TargetProductSysNo = target_product.SysNo
  WHERE
    register.Status = 1 -- Handling register
    AND request.RecvTime IS NOT NULL
    AND product.SysNo = @ProductSysNo
  GROUP BY product.SysNo
) result
INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product ON
  product.SysNo = result.SysNo
			]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="QueryProductCards" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
  
SELECT result.RecordName,
  result.ProductSysNo,
  result.RecordTime,
  result.RequestSysNo,
  result.RegisterSysNo,
  result.RecordQty,
  result.AffectQty
FROM (
  SELECT
    '收到商品'      RecordName,
    ProductSysNo    ProductSysNo,
    RecvTime        RecordTime,
    request.SysNo   RequestSysNo,
    register.SysNo  RegisterSysNo,
    1               RecordQty,
    1                 AffectQty
  FROM dbo.RMA_Register register WITH (NOLOCK)
  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
    request_item.RegisterSysNo = register.SysNo
  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  WHERE register.Status <> -1           -- not equal -1(Abandon)
    AND request.RecvTime IS NOT NULL  
    AND request.RecvTime >= '2010-01-01'
    AND register.ProductSysNo = @ProductSysNo

  UNION ALL

  SELECT 
    '商品送修'      RecordName,
    ProductSysNo    ProductSysNo,  
    ob.OutTime      RecordTime,
    request.SysNo   RequestSysNo,
    register.SysNo  RegisterSysNo,
    1               RecordQty,
    0               AffectQty
  FROM dbo.RMA_Register register WITH (NOLOCK)
  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
    request_item.RegisterSysNo = register.SysNo
  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  LEFT JOIN dbo.RMA_OutBound_Item ob_item WITH (NOLOCK) ON
    ob_item.RegisterSysNo = register.SysNo
  LEFT JOIN dbo.RMA_OutBound ob WITH (NOLOCK) ON
    ob.SysNo = ob_item.OutBoundSysNo
  WHERE register.Status <> -1           -- not equal -1(Abandon) 
    AND ob.OutTime IS NOT NULL  
    AND ob.OutTime >= '2010-01-01'
   AND register.ProductSysNo = @ProductSysNo

  UNION ALL
  
  SELECT 
    '送修返回'      RecordName,
    ProductSysNo    ProductSysNo,  
    ResponseTime    RecordTime,
    request.SysNo   RequestSysNo,
    register.SysNo  RegisterSysNo,
    1               RecordQty,
    0               AffectQty
  FROM dbo.RMA_Register register WITH (NOLOCK)
  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
    request_item.RegisterSysNo = register.SysNo
  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  WHERE register.Status <> -1           -- not equal -1(Abandon)
    AND register.ResponseTime IS NOT NULL 
    AND register.ResponseTime >=  '2010-01-01'
    AND register.ProductSysNo = @ProductSysNo

  UNION ALL

  SELECT 
    '发货（正常）'      RecordName,
    ProductSysNo        ProductSysNo,  
    rma_revert.OutTime      RecordTime,
    request.SysNo       RequestSysNo,
    register.SysNo      RegisterSysNo,
    1                   RecordQty,
    -1                  AffectQty
  FROM dbo.RMA_Register register WITH (NOLOCK)
  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
    request_item.RegisterSysNo = register.SysNo
  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  LEFT JOIN dbo.RMA_Revert_Item revert_item WITH (NOLOCK) ON
    revert_item.RegisterSysNo = register.SysNo
  LEFT JOIN dbo.RMA_Revert rma_revert WITH (NOLOCK) ON
    rma_revert.SysNo = revert_item.RevertSysNo
  WHERE register.Status <> -1             -- not equal -1(abandon)
    AND rma_revert.OutTime IS NOT NULL  
    AND rma_revert.OutTime >=  '2010-01-01'
    AND NewProductStatus = 0              -- equal 0(origin)
    AND register.ProductSysNo = @ProductSysNo

  UNION ALL

  SELECT 
    '发货（新品）'      RecordName,
    ProductSysNo        ProductSysNo,  
    rma_revert.OutTime      RecordTime,
    request.SysNo       RequestSysNo,
    register.SysNo      RegisterSysNo,
    1                   RecordQty,
    0                   AffectQty
  FROM dbo.RMA_Register register WITH (NOLOCK)
  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
    request_item.RegisterSysNo = register.SysNo
  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  LEFT JOIN dbo.RMA_Revert_Item revert_item WITH (NOLOCK) ON
    revert_item.RegisterSysNo = register.SysNo
  LEFT JOIN dbo.RMA_Revert rma_revert WITH (NOLOCK) ON
    rma_revert.SysNo = revert_item.RevertSysNo
  WHERE register.Status <> -1         -- not equal -1(abandon)
    AND rma_revert.OutTime IS NOT NULL  
    AND rma_revert.OutTime >= '2010-01-01'
    AND NewProductStatus = 1            -- equal 1(NewProduct)
    AND register.ProductSysNo = @ProductSysNo
  UNION ALL

  SELECT 
    '发货（二手）'        RecordName,
    ProductSysNo          ProductSysNo,  
    rma_revert.OutTime        RecordTime,
    request.SysNo         RequestSysNo,
    register.SysNo        RegisterSysNo,
    1                     RecordQty,
    0                     AffectQty
  FROM dbo.RMA_Register register WITH (NOLOCK)
  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON 
    request_item.RegisterSysNo = register.SysNo
  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  LEFT JOIN dbo.RMA_Revert_Item revert_item WITH (NOLOCK) ON
    revert_item.RegisterSysNo = register.SysNo
  LEFT JOIN dbo.RMA_Revert rma_revert WITH (NOLOCK) ON 
    rma_revert.SysNo = revert_item.RevertSysNo
  WHERE register.Status <> -1   --  not equal -1(abandon) 
    AND rma_revert.OutTime IS NOT NULL  
    AND rma_revert.OutTime >=  '2010-01-01'
    AND NewProductStatus = 2    -- equal 2(SecondHand)
    AND register.ProductSysNo = @ProductSysNo

  UNION ALL
  
  SELECT 
    '发货（非当前RMACase）' RecordName,
    ProductSysNo            ProductSysNo,  
    rma_revert.OutTime          RecordTime,
    request.SysNo           RequestSysNo,
    register.SysNo          RegisterSysNo,
    1                       RecordQty,
    0                       AffectQty
  FROM dbo.RMA_Register register WITH (NOLOCK)
  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
    request_item.RegisterSysNo = register.SysNo
  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  LEFT JOIN dbo.RMA_Revert_Item revert_item WITH (NOLOCK) ON
    revert_item.RegisterSysNo = register.SysNo
  LEFT JOIN dbo.RMA_Revert rma_revert WITH (NOLOCK) ON
    rma_revert.SysNo = revert_item.RevertSysNo
  WHERE register.Status <> -1     -- not equal -1(abandon) 
    AND rma_revert.OutTime IS NOT NULL  
    AND rma_revert.OutTime >=  '2010-01-01'
    AND NewProductStatus = 3      -- equal 3(OtherProduct)
    AND register.ProductSysNo = @ProductSysNo

  UNION ALL

  SELECT 
    '商品入库'            RecordName,
    ProductSysNo          ProductSysNo,  
    rmareturn.ReturnTime  RecordTime,
    request.SysNo         RequestSysNo,
    register.SysNo        RegisterSysNo,
    1                     RecordQty,
    -1                    AffectQty
  FROM dbo.RMA_Register register WITH (NOLOCK) 
  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
    request_item.RegisterSysNo = register.SysNo
  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  LEFT JOIN dbo.RMA_Return_Item return_item WITH (NOLOCK) ON
    return_item.RegisterSysNo = register.SysNo
  LEFT JOIN dbo.RMA_Return rmareturn WITH (NOLOCK) ON
    rmareturn.SysNo = return_item.ReturnSysNo
  WHERE register.Status <> -1       -- not equal -1(abandon)
    AND rmareturn.ReturnTime IS NOT NULL  
    AND rmareturn.ReturnTime >=  '2010-01-01'
    AND register.ProductSysNo = @ProductSysNo

  UNION ALL

  SELECT 
    '2007-01-01 库存应有起始值'   RecordName,
    ProductSysNo                  ProductSysNo,  
    '2007-01-01 00:00:00'         RecordTime,
    NULL                          RequestSysNo,
    NULL                          RegisterSysNo,
    InitialQty                    RecordQty,
    InitialQty                    AffectQty
  FROM dbo.RMA_ProductCard_InitialQty WITH (NOLOCK)
  WHERE ProductSysNo = @ProductSysNo 
) result
ORDER BY RecordTime DESC
			]]>
    </commandText>
    <parameters>
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
  <dataCommand name="QueryNotReturnPerformance" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @PageSize INT
SET @PageSize = @EndNumber - @StartNumber

SELECT
  @TotalCount = COUNT(1)
FROM dbo.RMA_OutBound ob WITH (NOLOCK)  
  INNER JOIN dbo.RMA_OutBound_Item ob_item WITH (NOLOCK) ON
    ob_item.OutBoundSysNo = ob.SysNo
  INNER JOIN dbo.RMA_Register register WITH (NOLOCK) ON
    register.SysNo = ob_item.RegisterSysNo
  INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK) ON
    product.SysNo = register.ProductSysNo
  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
    request_item.RegisterSysNo = register.Sysno
  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_Master so WITH (NOLOCK) ON
    so.SysNo = request.SoSysNo
  INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_Item so_item WITH (NOLOCK) ON
    (so_item.SOSysNo = so.SysNo AND so_item.ProductSysNo = product.SysNo)
  INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category WITH (NOLOCK) ON
    product.Category3SysNo = category.Category3SysNo
  LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo pm_user WITH (NOLOCK) ON
    product.PMUserSysNo = pm_user.UserSysNo
  LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList vendor WITH (NOLOCK) ON
    vendor.SysNo = ob.VendorSysNo
#StrWhere#

IF OBJECT_ID('tempdb..#ob') IS NULL BEGIN
  CREATE TABLE #ob(SysNo INT PRIMARY KEY)
END ELSE BEGIN
  TRUNCATE TABLE #ob
END

INSERT INTO #ob
SELECT DISTINCT SysNo
FROM (
	SELECT (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) RowNumber,
	  ob.SysNo
	FROM dbo.RMA_OutBound ob WITH (NOLOCK)  
	  INNER JOIN dbo.RMA_OutBound_Item ob_item WITH (NOLOCK) ON
	    ob_item.OutBoundSysNo = ob.SysNo
	  INNER JOIN dbo.RMA_Register register WITH (NOLOCK) ON
	    register.SysNo = ob_item.RegisterSysNo
	  INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK) ON
	    product.SysNo = register.ProductSysNo
	  INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
	    request_item.RegisterSysNo = register.Sysno
	  INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
	    request.SysNo = request_item.RequestSysNo
	  INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_Master so WITH (NOLOCK) ON
	    so.SysNo = request.SoSysNo
	  INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_Item so_item WITH (NOLOCK) ON
	    (so_item.SOSysNo = so.SysNo AND so_item.ProductSysNo = product.SysNo)
	  INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category WITH (NOLOCK) ON
	    product.Category3SysNo = category.Category3SysNo
	  LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo pm_user WITH (NOLOCK) ON
	    product.PMUserSysNo = pm_user.UserSysNo
	  LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList vendor WITH (NOLOCK) ON
	    vendor.SysNo = ob.VendorSysNo
  #StrWhere#
) results
WHERE RowNumber > @StartNumber

DECLARE @filter TABLE(SysNo INT)
INSERT INTO @filter
SELECT TOP (@PageSize) ob.SysNo
FROM #ob filter WITH(NOLOCK)
	INNER JOIN dbo.RMA_Outbound ob WITH(NOLOCK)
	  ON ob.SysNo = filter.SysNo
	INNER JOIN dbo.RMA_OutBound_Item ob_item WITH (NOLOCK) ON
	  ob_item.OutBoundSysNo = ob.SysNo
	INNER JOIN dbo.RMA_Register register WITH (NOLOCK) ON
	  register.SysNo = ob_item.RegisterSysNo
	INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK) ON
	  product.SysNo = register.ProductSysNo
	INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
	  request_item.RegisterSysNo = register.Sysno
	INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
	  request.SysNo = request_item.RequestSysNo
	INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_Master so WITH (NOLOCK) ON
	  so.SysNo = request.SoSysNo
	INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_Item so_item WITH (NOLOCK) ON
	  (so_item.SOSysNo = so.SysNo AND so_item.ProductSysNo = product.SysNo)
	INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category WITH (NOLOCK) ON
	  product.Category3SysNo = category.Category3SysNo
	LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo pm_user WITH (NOLOCK) ON
	  product.PMUserSysNo = pm_user.UserSysNo
	LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList vendor WITH (NOLOCK) ON
	  vendor.SysNo = ob.VendorSysNo
#StrWhere#
ORDER BY #SortColumnName#

IF OBJECT_ID('tempdb..#ob') IS NOT NULL BEGIN
  TRUNCATE TABLE #ob
  DROP TABLE #ob
END

SELECT DISTINCT TOP (@PageSize)
    ob.VendorSysNo  VendorSysNo,
    ob.VendorName   VendorName,
    ob.SysNo        OutboundSysNo,
    ob.OutTime,
    ob_item.IsSendMail,
    product.PMUserSysNo,
    product.ProductID,
    product.ProductName,
    product.SysNo           ProductSysNo,
    register.Cost           ProductCost,
    register.SysNo          RegisterSysNo,
    register.IsWithin7Days,
    --case register.IsWithin7Days when NULL then NULL else convert(bit,register.IsWithin7Days) end as IsWithin7Days,
    register.ResponseDesc,
    register.Memo,
    register.RefundStatus,
    register.RevertStatus,
    so.SysNo                SOSysNo,
    so.AuditTime            SODate,
    so_item.Warranty        Warranty,
    pm_user.EmailAddress,
    pm_user.DisplayName     PMName,
    vendor.ValidDate,
    vendor.ExpiredDate,
    vendor.ContractAmt,
    vendor.TotalPOMoney,
    vendor.PayPeriodType,
    vendor.Status           Vendor_Status,
    category.Category3Name,
    category.WarrantyDays
FROM @filter filter
	INNER JOIN dbo.RMA_Outbound ob WITH(NOLOCK)
	  ON ob.SysNo = filter.SysNo
	INNER JOIN dbo.RMA_OutBound_Item ob_item WITH (NOLOCK) ON
	  ob_item.OutBoundSysNo = ob.SysNo
	INNER JOIN dbo.RMA_Register register WITH (NOLOCK) ON
	  register.SysNo = ob_item.RegisterSysNo
	INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK) ON
	  product.SysNo = register.ProductSysNo
	INNER JOIN dbo.RMA_Request_Item request_item WITH (NOLOCK) ON
	  request_item.RegisterSysNo = register.Sysno
	INNER JOIN dbo.RMA_Request request WITH (NOLOCK) ON
	  request.SysNo = request_item.RequestSysNo
	INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_Master so WITH (NOLOCK) ON
	  so.SysNo = request.SoSysNo
	INNER JOIN OverseaOrderManagement.dbo.V_OM_SO_Item so_item WITH (NOLOCK) ON
	  (so_item.SOSysNo = so.SysNo AND so_item.ProductSysNo = product.SysNo)
	INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category WITH (NOLOCK) ON
	  product.Category3SysNo = category.Category3SysNo
	LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo pm_user WITH (NOLOCK) ON
	  product.PMUserSysNo = pm_user.UserSysNo
	LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList vendor WITH (NOLOCK) ON
	  vendor.SysNo = ob.VendorSysNo
#StrWhere#
ORDER BY #SortColumnName#
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="QueryGetRMAItemsInventory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[

;WITH temp AS(
SELECT 
    ROW_NUMBER()OVER(ORDER BY #SortColumnName#) AS RowNumber
   ,A.[SysNo] 
   ,A.[OutBoundStatus]
   ,A.[RevertStatus]
   ,A.[RefundStatus] 
   ,A.[ReturnStatus] 
   ,A.[Cost]
   ,A.[NewProductStatus] 
   ,B.[ProductID] 
   ,B.[ProductName] 
FROM [IPP3].[dbo].[RMA_Register] A WITH(NOLOCK) 
INNER JOIN [IPP3].[dbo].[RMA_request_item] C WITH(NOLOCK) 
    ON A.SysNo = C.[RegisterSysNo] 
INNER JOIN [IPP3].[dbo].[RMA_Request] D WITH(NOLOCK) 
    ON D.[SysNo] = C.[RequestSysNo] 
INNER JOIN OverseaContentManagement.dbo.V_IM_Product B WITH(NOLOCK) 
    ON A.[ProductSysNo] = B.[SysNo] 
   #StrWhere# 
)
SELECT 
    SysNo
   ,ProductID 
   ,ProductName 
   ,Cost 
   ,OutBoundStatus 
   ,RevertStatus 
   ,NewProductStatus 
   ,RefundStatus 
   ,ReturnStatus
FROM temp 
WHERE 
   RowNumber > @StartNumber 
   AND RowNumber <= @EndNumber
   

SELECT 
@TotalCount = COUNT(A.SysNo)
FROM [IPP3].[dbo].[RMA_Register] A WITH(NOLOCK) 
INNER JOIN [IPP3].[dbo].[RMA_request_item] C WITH(NOLOCK) 
    ON A.SysNo = C.[RegisterSysNo] 
INNER JOIN [IPP3].[dbo].[RMA_Request] D WITH(NOLOCK) 
    ON D.[SysNo] = C.[RequestSysNo] 
INNER JOIN OverseaContentManagement.dbo.V_IM_Product B WITH(NOLOCK) 
    ON A.[ProductSysNo] = B.[SysNo] 
#StrWhere# 

		]]>
    </commandText>
  </dataCommand>

  <dataCommand name="QueryRMAProductsInventory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
;WITH temp AS (
SELECT   
   (ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) AS RowNumber 
   ,P.SysNo
   ,COUNT(P.SysNo) AS Total 
   ,ISNULL(SUM(CASE 
        WHEN OutBoundStatus = 1 THEN 1 
    END),0) AS OutBounded 
   ,ISNULL(SUM(CASE 
        WHEN RevertStatus = 1 THEN 1 
    END),0) AS Reverted 
   ,ISNULL(SUM(CASE 
        WHEN ReturnStatus = 1 THEN 1 
    END),0) AS Returned 
   ,ISNULL(SUM(CASE 
        WHEN RevertStatus = 1 AND NewProductStatus <> 0 THEN 1 
    END),0) AS NewProduct 
   ,ISNULL(SUM(CASE 
        WHEN ReturnStatus = 1 AND TargetProduct.ProductId = P.ProductId THEN 1 
    END),0) AS NEW 
   ,ISNULL(SUM(CASE 
        WHEN ReturnStatus = 1 AND (TargetProduct.ProductId = P.ProductId + 'r' OR TargetProduct.ProductId = P.ProductId + 'R' ) THEN 1 
    END),0) AS SecondHand 
   ,ISNULL(SUM(CASE 
        WHEN ReturnStatus = 1 AND (TargetProduct.ProductId = P.ProductId + 'b' OR TargetProduct.ProductId = P.ProductId + 'B' ) THEN 1 
    END),0) AS BadProduct 
   ,ISNULL(SUM(R.Cost),0) AS Cost 
FROM [IPP3].[dbo].[RMA_Register]  R WITH(NOLOCK) 
INNER JOIN [IPP3].[dbo].[RMA_Request_item] WITH(NOLOCK) 
    ON [IPP3].[dbo].[RMA_Request_Item].RegisterSysNo = R.SysNo 
INNER JOIN [IPP3].[dbo].[RMA_Request] WITH(NOLOCK) 
    ON [IPP3].[dbo].[RMA_Request].SysNo = RMA_Request_Item.RequestSysNo 
INNER JOIN OverseaContentManagement.dbo.V_IM_Product P WITH(NOLOCK) 
    ON R.ProductSysNo = P.SysNo 
LEFT JOIN [IPP3].[dbo].[RMA_Return_Item] WITH(NOLOCK) 
    ON [IPP3].[dbo].[RMA_Return_Item].RegisterSysNo = R.SysNo 
LEFT JOIN OverseaContentManagement.dbo.V_IM_Product AS TargetProduct WITH(NOLOCK) 
    ON [IPP3].[dbo].[RMA_Return_Item].TargetProductSysNo = TargetProduct.SysNo 
 #StrWhere# 
GROUP BY P.SysNo,  P.ProductName  
)
SELECT     
    temp.SysNo AS SysNo 
   ,Total 
   ,OutBounded 
   ,Reverted 
   ,Returned 
   ,NewProduct 
   ,New 
   ,SecondHand 
   ,BadProduct 
   ,Cost 
   ,P.ProductId
   ,P.ProductName
   ,Total - OutBounded - Reverted + NewProduct - Returned AS [Left]
   ,Cost/1.17 AS MisCost --增值税17%
FROM temp 
INNER JOIN OverseaContentManagement.dbo.V_IM_Product P WITH(NOLOCK) 
    ON P.SysNo = temp.SysNo 
WHERE 
    temp.RowNumber > @StartNumber 
    AND temp.RowNumber <= @EndNumber
    
    ;WITH temp AS (
SELECT  
    ISNULL(SUM(R.Cost),0) AS Cost 
   ,P.SysNo
FROM [IPP3].[dbo].[RMA_Register] R WITH(NOLOCK) 
INNER JOIN [IPP3].[dbo].[RMA_Request_item] WITH(NOLOCK) 
    ON [IPP3].[dbo].[RMA_Request_Item].RegisterSysNo = R.SysNo 
INNER JOIN [IPP3].[dbo].[RMA_Request] WITH(NOLOCK) 
    ON [IPP3].[dbo].[RMA_Request].SysNo = RMA_Request_Item.RequestSysNo 
INNER JOIN OverseaContentManagement.dbo.V_IM_Product P WITH(NOLOCK) 
    ON R.ProductSysNo = P.SysNo 
LEFT JOIN [IPP3].[dbo].[RMA_Return_Item] WITH(NOLOCK) 
    ON [IPP3].[dbo].[RMA_Return_Item].RegisterSysNo = R.SysNo 
LEFT JOIN OverseaContentManagement.dbo.V_IM_Product AS TargetProduct WITH(NOLOCK) 
    ON [IPP3].[dbo].[RMA_Return_Item].TargetProductSysNo = TargetProduct.SysNo 
#StrWhere# 
GROUP BY P.SysNo 
)
SELECT     
    @TotalCount = COUNT(temp.SysNo),   @TotleMisCost = CAST(SUM(temp.Cost)/1.17 AS char(20))
FROM temp 
INNER JOIN OverseaContentManagement.dbo.V_IM_Product P WITH(NOLOCK) 
    ON P.SysNo = temp.SysNo 

]]>
    </commandText>
  </dataCommand>

</dataOperations>