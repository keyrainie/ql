<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation">
  <dataCommand name="CreateRegisterSysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
INSERT INTO dbo.RMA_Register_Sequence(CreateTime)
    SELECT GETDATE()

SELECT @SysNo = IDENT_CURRENT('dbo.RMA_Register_Sequence')
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" direction="Output" />
    </parameters>
  </dataCommand>


  <dataCommand name="InsertRegister" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
INSERT INTO [IPP3].[dbo].[RMA_Register]
    ([CompanyCode]
    ,[SysNo]
    ,[ProductSysNo]
    ,[RequestType]
    ,[CustomerDesc]
    ,[CheckTime]
    ,[CheckDesc]
    ,[NewProductStatus]
    ,[RevertStatus]
    ,[OutBoundStatus]
    ,[ReturnStatus]
    ,[ResponseDesc]
    ,[ResponseTime]
    ,[RefundStatus]
    ,[NextHandler]
    ,[Memo]
    ,[Status]
    ,[ProductNo]
    ,[IsWithin7Days]
    ,[IsRecommendRefund]
    ,[OwnBy]
    ,[Location]
    ,[cost]
    ,[RMAReason]
    ,[CheckUserSysNo]
    ,[ResponseUserSysNo]
    ,[CloseUserSysNo]
    ,[CloseTime]
    ,[RevertAuditUserSysNo]
    ,[RevertAuditTime]
    ,[RevertAuditMemo]
    ,[RevertProductSysNo]
    ,[IsHaveInvoice]
    ,[IsFullAccessory]
    ,[IsFullPackage]
    ,[InspectionResultType]
    ,[VendorRepairResultType]
    ,[OutBoundWithInvoice]
    ,[ResponseProductNo]
    ,[RevertStockSysNo]
    ,[LocationWarehouse]
    ,[OwnByWarehouse]
    ,[ShippedWarehouse]
    ,[UpdateNoResponseTime]
    ,[SetWaitingRevertTime]
    ,[FailureType]
    ,[SOItemType])
SELECT
    @CompanyCode,
    @SysNo,
    @ProductSysNo,
    @RequestType,
    @CustomerDesc,
    @CheckTime,
    @CheckDesc,
    @NewProductStatus,
    @RevertStatus,
    @OutBoundStatus,
    @ReturnStatus,
    @ResponseDesc,
    @ResponseTime,
    @RefundStatus,
    @NextHandler,
    @Memo,
    @Status,
    @ProductNo,
    @IsWithin7Days,
    @IsRecommendRefund,
    @OwnBy,
    @Location,
    @cost,
    @RMAReason,
    @CheckUserSysNo,
    @ResponseUserSysNo,
    @CloseUserSysNo,
    @CloseTime,
    @RevertAuditUserSysNo,
    @RevertAuditTime,
    @RevertAuditMemo,
    @RevertProductSysNo,
    @IsHaveInvoice,
    @IsFullAccessory,
    @IsFullPackage,
    @InspectionResultType,
    @VendorRepairResultType,
    @OutBoundWithInvoice,
    @ResponseProductNo,
    @RevertStockSysNo,
    @LocationWarehouse,
    @OwnByWarehouse,
    @ShippedWarehouse,
    @UpdateNoResponseTime,
    @SetWaitingRevertTime,
    @FailureType,
    @SOItemType
			]]>
    </commandText>
    <parameters>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength"/>
      <param name="@SysNo" dbType="Int32" />
      <!--BasicInfo -->
      <param name="@ProductSysNo" dbType="Int32" property="BasicInfo.ProductSysNo"/>
      <param name="@RequestType" dbType="Int32" property="RequestType"/>
      <param name="@CustomerDesc" dbType="String" property="BasicInfo.CustomerDesc"/>
      <param name="@OutBoundStatus" dbType="Int32" property="BasicInfo.OutBoundStatus"/>
      <param name="@ReturnStatus" dbType="Int32" property="BasicInfo.ReturnStatus"/>
      <param name="@RefundStatus" dbType="Int32" property="BasicInfo.RefundStatus"/>
      <param name="@NextHandler" dbType="Int32" property="BasicInfo.NextHandler"/>
      <param name="@Memo" dbType="String" property="BasicInfo.Memo"/>
      <param name="@Status" dbType="Int32" property="BasicInfo.Status"/>
      <param name="@ProductNo" dbType="String" property="BasicInfo.ProductNo"/>
      <param name="@IsWithin7Days" dbType="Int32" property="BasicInfo.IsWithin7Days"/>
      <param name="@OwnBy" dbType="Int32" property="BasicInfo.OwnBy"/>
      <param name="@Location" dbType="Int32" property="BasicInfo.Location"/>
      <param name="@Cost" dbType="Decimal" property="BasicInfo.Cost"/>
      <param name="@RMAReason" dbType="Int32" property="BasicInfo.RMAReason"/>
      <param name="@CloseUserSysNo" dbType="Int32" property="BasicInfo.CloseUserSysNo"/>
      <param name="@CloseTime" dbType="DateTime" property="BasicInfo.CloseTime"/>
      <param name="@IsHaveInvoice" dbType="Int32" property="BasicInfo.IsHaveInvoice"/>
      <param name="@IsFullAccessory" dbType="Int32" property="BasicInfo.IsFullAccessory"/>
      <param name="@IsFullPackage" dbType="Int32" property="BasicInfo.IsFullPackage"/>
      <param name="@OutBoundWithInvoice" dbType="Int32" property="BasicInfo.OutBoundWithInvoice"/>
      <param name="@LocationWarehouse" dbType="AnsiStringFixedLength" property="BasicInfo.LocationWarehouse"/>
      <param name="@OwnByWarehouse" dbType="AnsiStringFixedLength" property="BasicInfo.OwnByWarehouse"/>
      <param name="@ShippedWarehouse" dbType="AnsiStringFixedLength" property="BasicInfo.ShippedWarehouse"/>
      <param name="@UpdateNoResponseTime" dbType="DateTime" property="BasicInfo.UpdateNoResponseTime"/>
      <param name="@FailureType" dbType="Int32" property="BasicInfo.FailureType"/>
      <param name="@SOItemType" dbType="Int32" property="BasicInfo.SOItemType"/>

      <!--Check Info -->
      <param name="@CheckTime" dbType="DateTime" property="CheckInfo.CheckTime"/>
      <param name="@CheckDesc" dbType="String" property="CheckInfo.CheckDesc"/>
      <param name="@IsRecommendRefund" dbType="Int32" property="CheckInfo.IsRecommendRefund" />
      <param name="@CheckUserSysNo" dbType="Int32" property="CheckInfo.CheckUserSysNo"/>
      <param name="@InspectionResultType" dbType="String" property="CheckInfo.InspectionResultType"/>

      <!--Revert Info -->
      <param name="@NewProductStatus" dbType="Int32" property="RevertInfo.NewProductStatus"/>
      <param name="@RevertStatus" dbType="Int32" property="RevertInfo.RevertStatus"/>
      <param name="@RevertAuditUserSysNo" dbType="Int32" property="RevertInfo.RevertAuditUserSysNo"/>
      <param name="@RevertAuditTime" dbType="DateTime" property="RevertInfo.RevertAuditTime"/>
      <param name="@RevertAuditMemo" dbType="String" property="RevertInfo.RevertAuditMemo"/>
      <param name="@RevertProductSysNo" dbType="Int32" property="RevertInfo.RevertProductSysNo"/>
      <param name="@RevertStockSysNo" dbType="Int32" property="RevertInfo.RevertStockSysNo" />
      <param name="@SetWaitingRevertTime" dbType="DateTime" property="RevertInfo.SetWaitingRevertTime"/>

      <!--Response Info -->
      <param name="@ResponseDesc" dbType="String" property="ResponseInfo.ResponseDesc"/>
      <param name="@ResponseTime" dbType="DateTime" property="ResponseInfo.ResponseTime"/>
      <param name="@ResponseUserSysNo" dbType="Int32" property="ResponseInfo.ResponseUserSysNo"/>
      <param name="@VendorRepairResultType" dbType="String" property="ResponseInfo.VendorRepairResultType"/>
      <param name="@ResponseProductNo" dbType="String" property="ResponseInfo.ResponseProductNo"/>

    </parameters>
  </dataCommand>

  
  <dataCommand name="InsertRequestItem" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
INSERT INTO dbo.RMA_Request_Item(RequestSysNo, RegisterSysNo)
SELECT @RequestSysNo, @RegisterSysNo
			]]>
    </commandText>
    <parameters>
      <param name="@RequestSysNo"  dbType="Int32" />
      <param name="@RegisterSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="PurelyUpdateRegister" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE [IPP3].[dbo].[RMA_Register] SET
    [ProductSysNo]            = @ProductSysNo
    ,[RequestType]            = @RequestType
    ,[CustomerDesc]           = @CustomerDesc
    ,[CheckTime]              = @CheckTime
    ,[CheckDesc]              = @CheckDesc
    ,[NewProductStatus]       = @NewProductStatus
    --,[RevertStatus]           = @RevertStatus
    --,[OutBoundStatus]         = @OutBoundStatus
    --,[ReturnStatus]           = @ReturnStatus
    ,[ResponseDesc]           = @ResponseDesc
    ,[ResponseTime]           = @ResponseTime
    ,[RefundStatus]           = @RefundStatus
    ,[NextHandler]            = @NextHandler
    ,[Memo]                   = @Memo
    ,[Status]                 = @Status
    --,[RefundStatus]           = @RefundStatus
    ,[ProductNo]              = @ProductNo
    ,[IsWithin7Days]          = @IsWithin7Days
    ,[IsRecommendRefund]      = @IsRecommendRefund
    ,[OwnBy]                  = @OwnBy
    ,[Location]               = @Location
    ,[cost]                   = @Cost
    ,[RMAReason]              = @RMAReason
    ,[CheckUserSysNo]         = @CheckUserSysNo
    ,[ResponseUserSysNo]      = @ResponseUserSysNo
    ,[CloseUserSysNo]         = @CloseUserSysNo
    ,[CloseTime]              = @CloseTime
    ,[RevertAuditUserSysNo]   = @RevertAuditUserSysNo
    ,[RevertAuditTime]        = @RevertAuditTime
    ,[RevertAuditMemo]        = @RevertAuditMemo
    --,[RevertProductSysNo]     = @RevertProductSysNo
    ,[IsHaveInvoice]          = @IsHaveInvoice
    ,[IsFullAccessory]        = @IsFullAccessory
    ,[IsFullPackage]          = @IsFullPackage
    ,[InspectionResultType]   = @InspectionResultType
    ,[VendorRepairResultType] = @VendorRepairResultType
    ,[OutBoundWithInvoice]    = @OutBoundWithInvoice
    ,[ResponseProductNo]      = @ResponseProductNo
    ,[RevertStockSysNo]       = @RevertStockSysNo
    ,[LocationWarehouse]      = @LocationWarehouse
    ,[OwnByWarehouse]         = @OwnByWarehouse
    ,[ShippedWarehouse]       = @ShippedWarehouse
    ,[UpdateNoResponseTime]   = @UpdateNoResponseTime
    ,[SetWaitingRevertTime]   = @SetWaitingRevertTime
    ,[FailureType]            = @FailureType
WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
      <!--Basic Info-->
      <param name="@ProductSysNo" dbType="Int32" property="BasicInfo.ProductSysNo"/>
      <param name="@RequestType" dbType="Int32" property="RequestType"/>
      <param name="@CustomerDesc" dbType="String" property="BasicInfo.CustomerDesc"/>
      <param name="@OutBoundStatus" dbType="Int32" property="BasicInfo.OutBoundStatus"/>
      <param name="@ReturnStatus" dbType="Int32" property="BasicInfo.ReturnStatus"/>
      <param name="@RefundStatus" dbType="Int32" property="BasicInfo.RefundStatus"/>
      <param name="@NextHandler" dbType="Int32" property="BasicInfo.NextHandler"/>
      <param name="@Memo" dbType="String" property="BasicInfo.Memo"/>
      <param name="@Status" dbType="Int32" property="BasicInfo.Status"/>
      <param name="@ProductNo" dbType="String" property="BasicInfo.ProductNo"/>
      <param name="@IsWithin7Days" dbType="Int32" property="BasicInfo.IsWithin7Days"/>
      <param name="@OwnBy" dbType="Int32"  property="BasicInfo.OwnBy"/>
      <param name="@Location" dbType="Int32"  property="BasicInfo.Location"/>
      <param name="@Cost" dbType="Decimal"  property="BasicInfo.Cost"/>
      <param name="@RMAReason" dbType="Int32"  property="BasicInfo.RMAReason"/>
      <param name="@CloseUserSysNo" dbType="Int32"  property="BasicInfo.CloseUserSysNo"/>
      <param name="@CloseTime" dbType="DateTime"  property="BasicInfo.CloseTime"/>
      <param name="@IsHaveInvoice" dbType="Int32"  property="BasicInfo.IsHaveInvoice"/>
      <param name="@IsFullAccessory" dbType="Int32"  property="BasicInfo.IsFullAccessory"/>
      <param name="@IsFullPackage" dbType="Int32"  property="BasicInfo.IsFullPackage"/>
      <param name="@OutBoundWithInvoice" dbType="Int32"  property="BasicInfo.OutBoundWithInvoice"/>
      <param name="@LocationWarehouse" dbType="AnsiStringFixedLength" property="BasicInfo.LocationWarehouse" />
      <param name="@OwnByWarehouse" dbType="AnsiStringFixedLength" property="BasicInfo.OwnByWarehouse" />
      <param name="@ShippedWarehouse" dbType="AnsiStringFixedLength" property="BasicInfo.ShippedWarehouse" />
      <param name="@UpdateNoResponseTime" dbType="DateTime" property="BasicInfo.UpdateNoResponseTime" />
      <param name="@FailureType" dbType="Int32" property="BasicInfo.FailureType" />

      <!--Check Info-->
      <param name="@CheckTime" dbType="DateTime" property="CheckInfo.CheckTime"/>
      <param name="@CheckDesc" dbType="String" property="CheckInfo.CheckDesc"/>
      <param name="@IsRecommendRefund" dbType="Int32" property="CheckInfo.IsRecommendRefund"/>
      <param name="@CheckUserSysNo" dbType="Int32" property="CheckInfo.CheckUserSysNo"/>
      <param name="@InspectionResultType" dbType="String" property="CheckInfo.InspectionResultType"/>
               
      <!--Revert Info-->
      <param name="@NewProductStatus" dbType="Int32" property="RevertInfo.NewProductStatus"/>
      <param name="@RevertStatus" dbType="Int32" property="RevertInfo.RevertStatus"/>
      <param name="@RevertAuditUserSysNo" dbType="Int32" property="RevertInfo.RevertAuditUserSysNo"/>
      <param name="@RevertAuditTime" dbType="DateTime" property="RevertInfo.RevertAuditTime"/>
      <param name="@RevertAuditMemo" dbType="String" property="RevertInfo.RevertAuditMemo"/>
      <param name="@RevertProductSysNo" dbType="Int32" property="RevertInfo.RevertProductSysNo"/>
      <param name="@RevertStockSysNo" dbType="Int32" property="RevertInfo.RevertStockSysNo"/>
      <param name="@SetWaitingRevertTime" dbType="DateTime" property="RevertInfo.SetWaitingRevertTime"/>
      
      <!--Response Info-->
      <param name="@ResponseDesc" dbType="String" property="ResponseInfo.ResponseDesc"/>
      <param name="@ResponseTime" dbType="DateTime" property="ResponseInfo.ResponseTime"/>
      <param name="@ResponseUserSysNo" dbType="Int32" property="ResponseInfo.ResponseUserSysNo"/>
      <param name="@VendorRepairResultType" dbType="String" property="ResponseInfo.VendorRepairResultType"/>     
      <param name="@ResponseProductNo" dbType="String" property="ResponseInfo.ResponseProductNo"/>
          
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateRegisterForRequest" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE [IPP3].[dbo].[RMA_Register] SET
     [NextHandler]            = @NextHandler
    ,[ProductNo]              = @ProductNo
    ,[IsWithin7Days]          = @IsWithin7Days
    ,[IsHaveInvoice]          = @IsHaveInvoice
    ,[IsFullAccessory]        = @IsFullAccessory
    ,[IsFullPackage]          = @IsFullPackage

WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
      <param name="@NextHandler" dbType="Int32" />
      <param name="@ProductNo" dbType="String" />
      <param name="@IsWithin7Days" dbType="Int32" />
      <param name="@IsHaveInvoice" dbType="Int32" />
      <param name="@IsFullAccessory" dbType="Int32" />
      <param name="@IsFullPackage" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateRegisterCheckInfo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE dbo.RMA_Register SET 
  CheckUserSysNo       = @CheckUserSysNo,
  CheckTime            = @CheckTime,
  CheckDesc            = @CheckDesc,
  InspectionResultType = @InspectionResultType,
  IsRecommendRefund    = @IsRecommendRefund
WHERE SysNo = @SysNO
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo"                dbType="Int32"    />
      <param name="@CheckUserSysNo"       dbType="Int32"   property="[UserSysNo]" />
      <param name="@CheckTime"            dbType="DateTime" property="[Now]"/>
      <param name="@CheckDesc"            dbType="String"   />
      <param name="@InspectionResultType" dbType="String"   />
      <param name="@IsRecommendRefund"    dbType="Int32"    />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateRegisterResponseInfo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE dbo.RMA_Register SET
    ResponseProductNo = @ResponseProductNo,
    VendorRepairResultType = @VendorRepairResultType,
    ResponseDesc           = @ResponseDesc,
    ResponseUserSysNo      = @ResponseUserSysNo,
    ResponseTime           = @ResponseTime
WHERE SysNo = @SysNO
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo"                  dbType="Int32"    />
      <param name="@ResponseProductNo"      dbType="String"   />
      <param name="@VendorRepairResultType" dbType="String"   />
      <param name="@ResponseDesc"           dbType="String"   />
      <param name="@ResponseUserSysNo"      dbType="Int32"    property="[UserSysNo]"/>
      <param name="@ResponseTime"           dbType="DateTime" property="[Now]"/>
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateRefundStatus" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE dbo.RMA_Register
SET RefundStatus = @RefundStatus
WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
      <param name="@RefundStatus" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateReturnStatus" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE dbo.RMA_Register
SET ReturnStatus = @ReturnStatus
WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>     
      <param name="@SysNo" dbType="Int32" />
      <param name="@ReturnStatus" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="CloseRegister" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE dbo.RMA_Register SET
  Status         = @Status,
  CloseUserSysNo = @CloseUserSysNo,
  CloseTime      = @CloseTime
WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo"          dbType="Int32"    />
      <param name="@Status"         dbType="Int32"    />
      <param name="@CloseUserSysNo" dbType="Int32"   property="[UserSysNo]" />
      <param name="@CloseTime"      dbType="DateTime" property="[Now]"/>
    </parameters>
  </dataCommand>

  <dataCommand name="ReOpenRegister" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE dbo.RMA_Register SET
  Status         = @Status,
  CloseUserSysNo = null,
  CloseTime      = null
WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo"          dbType="Int32"    />
      <param name="@Status"         dbType="Int32"    />     
    </parameters>
  </dataCommand>
  
  <dataCommand name="RegisterSetAbandon" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[      
DECLARE @RegisterCount int 
DECLARE @AllRegisterCount int 
DECLARE @RequestSysNo int
SELECT @RequestSysNo = RequestSysNo
	     FROM IPP3.dbo.RMA_Request_Item
WHERE RegisterSysNo=@RegisterSysNo
SET @UpdateRegisterCount=-1

UPDATE ipp3.dbo.RMA_Register
SET
   [status]=-1
WHERE 
SysNo=@RegisterSysNo
AND [status]=0
SET @UpdateRegisterCount=@@ROWCOUNT

IF @@ROWCOUNT=1
BEGIN
	--all register count
	SELECT 
	 @AllRegisterCount=COUNT(*)
	FROM 
	IPP3.dbo.RMA_Register  WITH(nolock)
	WHERE 
	SysNo IN 
	(
		SELECT 
		registerSysno
		FROM 
		ipp3.dbo.RMA_Request_Item WITH(nolock)
		WHERE
		requestsysno=@RequestSysNo
		)
		--all register Abandon count
	SELECT 
	 @RegisterCount=COUNT(*)
	FROM 
	IPP3.dbo.RMA_Register  WITH(nolock)
	WHERE 
	SysNo IN 
	(
		SELECT 
		registerSysno
		FROM 
		ipp3.dbo.RMA_Request_Item WITH(nolock)
		WHERE
		requestsysno=@RequestSysNo
		
		)
		AND [Status]=-1
		
	   IF(@AllRegisterCount=@RegisterCount)
	   BEGIN
	   	  UPDATE
	   	  TOP(1)
	   	   IPP3.dbo.RMA_Request
	   	  SET
	   	  	[status]=-1
	   	  	WHERE 
	   	  	sysNo=@RequestSysNo   	 
	   	END
	   	
END
				]]>
    </commandText>
    <parameters>      
      <param name="@RegisterSysNo" dbType="Int32" />
      <param name="@UpdateRegisterCount" dbType="Int32"  direction ="Output" />      
    </parameters>
  </dataCommand>
  
  <dataCommand name="LoadRegisterBySysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT 
    reg.SysNo,
    reg.ProductSysNo as [BasicInfo.ProductSysNo],
    reg.RequestType,
    reg.CompanyCode,
    reg.CustomerDesc as [BasicInfo.CustomerDesc],
    reg.CheckTime as [CheckInfo.CheckTime],
    reg.CheckDesc as [CheckInfo.CheckDesc],
    reg.NewProductStatus as [RevertInfo.NewProductStatus],
    reg.RevertStatus as [RevertInfo.RevertStatus],
    reg.OutBoundStatus as [BasicInfo.OutBoundStatus],
    reg.ReturnStatus as [BasicInfo.ReturnStatus],
    reg.ResponseDesc as [ResponseInfo.ResponseDesc],
    reg.ResponseTime as [ResponseInfo.ResponseTime],
    reg.RefundStatus as [BasicInfo.RefundStatus],
    reg.NextHandler as [BasicInfo.NextHandler],
    reg.Memo as [BasicInfo.Memo],
    reg.Status as [BasicInfo.Status],
    reg.ProductNo as [BasicInfo.ProductNo],
    reg.IsWithin7Days as [BasicInfo.IsWithin7Days],
    reg.IsRecommendRefund as [CheckInfo.IsRecommendRefund],    
    reg.OwnBy as [BasicInfo.OwnBy],
    reg.Location as [BasicInfo.Location],
    reg.Cost as [BasicInfo.Cost],
    reg.RMAReason as [BasicInfo.RMAReason],
    reg.CheckUserSysNo as [CheckInfo.CheckUserSysNo],
    reg.ResponseUserSysNo as [ResponseInfo.ResponseUserSysNo],
    reg.CloseUserSysNo as [BasicInfo.CloseUserSysNo],
    reg.CloseTime as [BasicInfo.CloseTime],
    reg.RevertAuditUserSysNo as [RevertInfo.RevertAuditUserSysNo],
    reg.RevertAuditTime as [RevertInfo.RevertAuditTime],
    reg.RevertAuditMemo as [RevertInfo.RevertAuditMemo],
    reg.RevertProductSysNo as [RevertInfo.RevertProductSysNo],
    reg.IsHaveInvoice as [BasicInfo.IsHaveInvoice],
    reg.IsFullAccessory as [BasicInfo.IsFullAccessory],
    reg.IsFullPackage as [BasicInfo.IsFullPackage],
    reg.InspectionResultType as [CheckInfo.InspectionResultType],
    reg.VendorRepairResultType as [ResponseInfo.VendorRepairResultType],
    reg.OutBoundWithInvoice as [BasicInfo.OutBoundWithInvoice],
    reg.ResponseProductNo as [ResponseInfo.ResponseProductNo],
    reg.RevertStockSysNo as [RevertInfo.RevertStockSysNo],
    reg.LocationWarehouse as [BasicInfo.LocationWarehouse],
    reg.OwnByWarehouse as [BasicInfo.OwnByWarehouse],
    reg.ShippedWarehouse as [BasicInfo.ShippedWarehouse],
    reg.UpdateNoResponseTime as [BasicInfo.UpdateNoResponseTime],
    reg.SetWaitingRevertTime as [RevertInfo.SetWaitingRevertTime],
    reg.FailureType as [BasicInfo.FailureType],
    reg.SOItemType  as [BasicInfo.SOItemType],
    reg.ProductSysNo as [BasicInfo.ProductSysNo],
    reg.ERPStatus as [BasicInfo.ERPStatus],
    p.InventoryType as [BasicInfo.InventoryType]
FROM
    dbo.RMA_Register reg (NOLOCK)
    left join ipp3.dbo.product p (NOLOCK)
    on reg.productsysno=p.sysno
WHERE reg.SysNo = @SysNo
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
 
  <dataCommand name="LoadRegisterByRequestSysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT reg.SysNo,
    reg.ProductSysNo as [BasicInfo.ProductSysNo],
    reg.RequestType,
    reg.CompanyCode,
    reg.CustomerDesc as [BasicInfo.CustomerDesc],
    reg.CheckTime as [CheckInfo.CheckTime],
    reg.CheckDesc as [CheckInfo.CheckDesc],
    reg.NewProductStatus as [RevertInfo.NewProductStatus],
    reg.RevertStatus as [RevertInfo.RevertStatus],
    reg.OutBoundStatus as [BasicInfo.OutBoundStatus],
    reg.ReturnStatus as [BasicInfo.ReturnStatus],
    reg.ResponseDesc as [ResponseInfo.ResponseDesc],
    reg.ResponseTime as [ResponseInfo.ResponseTime],
    reg.RefundStatus as [BasicInfo.RefundStatus],
    reg.NextHandler as [BasicInfo.NextHandler],
    reg.Memo as [BasicInfo.Memo],
    reg.Status as [BasicInfo.Status],
    reg.ProductNo as [BasicInfo.ProductNo],
    reg.IsWithin7Days as [BasicInfo.IsWithin7Days],
    reg.IsRecommendRefund as [CheckInfo.IsRecommendRefund],    
    reg.OwnBy as [BasicInfo.OwnBy],
    reg.Location as [BasicInfo.Location],
    reg.Cost as [BasicInfo.Cost],
    reg.RMAReason as [BasicInfo.RMAReason],
    reg.CheckUserSysNo as [CheckInfo.CheckUserSysNo],
    reg.ResponseUserSysNo as [ResponseInfo.ResponseUserSysNo],
    reg.CloseUserSysNo as [BasicInfo.CloseUserSysNo],
    reg.CloseTime as [BasicInfo.CloseTime],
    reg.RevertAuditUserSysNo as [RevertInfo.RevertAuditUserSysNo],
    reg.RevertAuditTime as [RevertInfo.RevertAuditTime],
    reg.RevertAuditMemo as [RevertInfo.RevertAuditMemo],
    reg.RevertProductSysNo as [RevertInfo.RevertProductSysNo],
    reg.IsHaveInvoice as [BasicInfo.IsHaveInvoice],
    reg.IsFullAccessory as [BasicInfo.IsFullAccessory],
    reg.IsFullPackage as [BasicInfo.IsFullPackage],
    reg.InspectionResultType as [CheckInfo.InspectionResultType],
    reg.VendorRepairResultType as [ResponseInfo.VendorRepairResultType],
    reg.OutBoundWithInvoice as [BasicInfo.OutBoundWithInvoice],
    reg.ResponseProductNo as [ResponseInfo.ResponseProductNo],
    reg.RevertStockSysNo as [RevertInfo.RevertStockSysNo],
    reg.LocationWarehouse as [BasicInfo.LocationWarehouse],
    reg.OwnByWarehouse as [BasicInfo.OwnByWarehouse],
    reg.ShippedWarehouse as [BasicInfo.ShippedWarehouse],
    reg.UpdateNoResponseTime as [BasicInfo.UpdateNoResponseTime],
    reg.SetWaitingRevertTime as [RevertInfo.SetWaitingRevertTime],
    reg.FailureType as [BasicInfo.FailureType],
    reg.SOItemType  as [BasicInfo.SOItemType],
    product.ProductID as [BasicInfo.ProductID],
    product.ProductName as [BasicInfo.ProductName],
    reg.ERPStatus as [BasicInfo.ERPStatus]
    --product.BriefName as [BasicInfo.ProductBriefName]
FROM
    dbo.RMA_Register reg WITH (NOLOCK)
INNER JOIN dbo.RMA_Request_Item req_item WITH (NOLOCK) ON
    req_item.RegisterSysNo = reg.SysNo
LEFT JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK) ON
	product.SysNo = reg.ProductSysNo
WHERE 
      req_item.RequestSysNo = @RequestSysNo   
			]]>
    </commandText>
    <parameters>      
      <param name="@RequestSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="LoadRegisterForEditBySysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT reg.SysNo,
    reg.ProductSysNo as [BasicInfo.ProductSysNo],
    reg.RequestType,
    reg.CompanyCode,
    reg.CustomerDesc as [BasicInfo.CustomerDesc],
    reg.CheckTime as [CheckInfo.CheckTime],
    reg.CheckDesc as [CheckInfo.CheckDesc],
    reg.NewProductStatus as [RevertInfo.NewProductStatus],
    reg.RevertStatus as [RevertInfo.RevertStatus],
    reg.OutBoundStatus as [BasicInfo.OutBoundStatus],
    reg.ReturnStatus as [BasicInfo.ReturnStatus],
    reg.ResponseDesc as [ResponseInfo.ResponseDesc],
    reg.ResponseTime as [ResponseInfo.ResponseTime],
    reg.RefundStatus as [BasicInfo.RefundStatus],
    reg.NextHandler as [BasicInfo.NextHandler],
    reg.Memo as [BasicInfo.Memo],
    reg.Status as [BasicInfo.Status],
    reg.ProductNo as [BasicInfo.ProductNo],
    reg.IsWithin7Days as [BasicInfo.IsWithin7Days],
    reg.IsRecommendRefund as [CheckInfo.IsRecommendRefund],    
    reg.OwnBy as [BasicInfo.OwnBy],
    reg.Location as [BasicInfo.Location],
    reg.Cost as [BasicInfo.Cost],
    reg.RMAReason as [BasicInfo.RMAReason],
    reg.CheckUserSysNo as [CheckInfo.CheckUserSysNo],
    reg.ResponseUserSysNo as [ResponseInfo.ResponseUserSysNo],
    reg.CloseUserSysNo as [BasicInfo.CloseUserSysNo],
    reg.CloseTime as [BasicInfo.CloseTime],
    reg.RevertAuditUserSysNo as [RevertInfo.RevertAuditUserSysNo],
    reg.RevertAuditTime as [RevertInfo.RevertAuditTime],
    reg.RevertAuditMemo as [RevertInfo.RevertAuditMemo],
    reg.RevertProductSysNo as [RevertInfo.RevertProductSysNo],
    reg.IsHaveInvoice as [BasicInfo.IsHaveInvoice],
    reg.IsFullAccessory as [BasicInfo.IsFullAccessory],
    reg.IsFullPackage as [BasicInfo.IsFullPackage],
    reg.InspectionResultType as [CheckInfo.InspectionResultType],
    reg.VendorRepairResultType as [ResponseInfo.VendorRepairResultType],
    reg.OutBoundWithInvoice as [BasicInfo.OutBoundWithInvoice],
    reg.ResponseProductNo as [ResponseInfo.ResponseProductNo],
    reg.RevertStockSysNo as [RevertInfo.RevertStockSysNo],
    reg.LocationWarehouse as [BasicInfo.LocationWarehouse],
    reg.OwnByWarehouse as [BasicInfo.OwnByWarehouse],
    reg.ShippedWarehouse as [BasicInfo.ShippedWarehouse],
    reg.UpdateNoResponseTime as [BasicInfo.UpdateNoResponseTime],
    reg.SetWaitingRevertTime as [RevertInfo.SetWaitingRevertTime],
    reg.FailureType as [BasicInfo.FailureType],
    reg.SOItemType  as [BasicInfo.SOItemType],  
    reg.SellerMemo  as [SellerInfo.SellerMemo],
    reg.SellerReceived as [SellerInfo.SellerReceived],
    reg.SellerOperationInfo as [SellerInfo.SellerOperationInfo],
    reg.ERPStatus as [BasicInfo.ERPStatus],
    check_sys_user.DisplayName as [CheckInfo.CheckUserName],
    response_sys_user.DisplayName as [ResponseInfo.ResponseUserName],
    close_user.DisplayName      as [BasicInfo.CloseUserName],
   
    rmareturn.CreateUserSysNo       as [ReturnInfo.CreateUserSysNo],
    rmareturn.ReturnUserSysNo       as [ReturnInfo.ReturnUserSysNo],
    rmareturn.ReturnTime            as [ReturnInfo.ReturnTime],
    return_user.DisplayName         as [ReturnInfo.ReturnUserName],
    create_return_user.DisplayName  as [ReturnInfo.CreateUserName],

    rmarevert.CreateUserSysNo       as [RevertInfo.CreateUserSysNo],
    rmarevert.OutUserSysNo          as [RevertInfo.OutUserSysNo],
    rmarevert.OutTime               as [RevertInfo.OutTime],
    rmarevert.PackageID             as [RevertInfo.RevertPackageID],
    rmarevert_shiptype.ShipTypeName as [RevertInfo.RevertShipTypeName],
    revertaudit_user.DisplayName    as [RevertInfo.RevertAuditUserName],
    create_revert_user.DisplayName  as [RevertInfo.CreateUserName],
    revert_user.DisplayName         as [RevertInfo.RevertUserName],
	
    refund_Item.RefundSysNo,
    outbound_Item.OutBoundSysNo
FROM
  dbo.RMA_Register reg WITH (NOLOCK)
  
LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo check_sys_user WITH (NOLOCK) ON
  check_sys_user.UserSysNo = reg.CheckUserSysNo
LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo response_sys_user WITH (NOLOCK) ON
  response_sys_user.UserSysNo = reg.ResponseUserSysNo
LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo close_user WITH (NOLOCK) ON
  close_user.UserSysNo = reg.CloseUserSysNo
LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo revertaudit_user WITH (NOLOCK) ON
  revertaudit_user.UserSysNo = reg.RevertAuditUserSysNo

LEFT JOIN dbo.RMA_Return_Item rmareturn_item WITH (NOLOCK) ON
  rmareturn_item.RegisterSysNo = reg.SysNo
LEFT JOIN dbo.RMA_Return rmareturn WITH (NOLOCK) ON
  rmareturn.SysNo = rmareturn_item.ReturnSysNo
LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo return_user WITH (NOLOCK) ON
  return_user.UserSysNo = rmareturn.ReturnUserSysNo
LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo create_return_user WITH (NOLOCK) ON
  create_return_user.UserSysNo = rmareturn.CreateUserSysNo

LEFT JOIN dbo.RMA_Revert_Item rmarevert_item WITH (NOLOCK) ON
  rmarevert_item.RegisterSysNo = reg.SysNo
LEFT JOIN dbo.RMA_Revert rmarevert WITH (NOLOCK) ON
  rmarevert.SysNo = rmarevert_item.RevertSysNo
LEFT JOIN dbo.ShipType rmarevert_shiptype WITH (NOLOCK) ON
  rmarevert_shiptype.SysNo = rmarevert.ShipType
LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo create_revert_user WITH (NOLOCK) ON
  create_revert_user.UserSysNo = rmarevert.CreateUserSysNo
LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo revert_user WITH (NOLOCK) ON
  revert_user.UserSysNo = rmarevert.OutUserSysNo
  
LEFT JOIN dbo.RMA_Refund_Item refund_Item WITH (NOLOCK) ON
	refund_Item.RegisterSysNo = reg.SysNo
LEFT JOIN dbo.RMA_OutBound_Item outbound_Item WITH (NOLOCK) ON
	outbound_Item.RegisterSysNo = reg.SysNo

WHERE reg.SysNo = @SysNo
			]]>
    </commandText>
    <parameters>     
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
  
  <dataCommand name="GetExWarrantyProductName" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT 
  BriefName
FROM OverseaOrderManagement.dbo.V_OM_SO_Item AS soitem WITH(NOLOCK)
INNER JOIN dbo.RMA_Request AS rma WITH(NOLOCK)
  ON rma.SOSysNo = soitem.SOSysNo
WHERE rma.SysNo = @RequestSysNo AND
  soitem.MasterProductSysNo = @MasterProductSysNo AND
  soitem.ProductType = 4  
			]]>
    </commandText>
    <parameters>      
      <param name="@RequestSysNo" dbType="Int32" />
      <param name="@MasterProductSysNo" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateInventory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
IF NOT EXISTS(
  SELECT TOP 1 1
  FROM RMA.dbo.RMA_Inventory WITH(NOLOCK)
  WHERE WarehouseSysNo = @WHSysNo AND ProductSysNo = @ProductSysNo AND CompanyCode = @CompanyCode
) BEGIN
  INSERT INTO RMA.dbo.RMA_Inventory(
    WarehouseSysNo, ProductSysNo, ProductBriefName, RMAStockQty, RMAOnVendorQty, ShiftQty, CompanyCode)
  SELECT @WHSysNo, @ProductSysNo, BriefName, 0, 0, 0, @CompanyCode
  FROM OverseaContentManagement.dbo.V_CM_ItemBasicInfo WITH(NOLOCK)
  WHERE SysNo = @ProductSysNo AND CompanyCode = @CompanyCode
END

IF @IsRecv = 1 BEGIN  -- Receive
  UPDATE RMA.dbo.RMA_Inventory
  SET RMAStockQty = ISNULL(RMAStockQty,0) + 1
     ,OwnbyCustomerQty = ISNULL(OwnbyCustomerQty,0) + 1
  WHERE WarehouseSysNo = @WHSysNo 
        AND ProductSysNo = @ProductSysNo 
        AND CompanyCode = @CompanyCode
END ELSE BEGIN  -- CancelReceive
  UPDATE RMA.dbo.RMA_Inventory
  SET  RMAStockQty = ISNULL(RMAStockQty,0) - 1
      ,OwnbyCustomerQty = ISNULL(OwnbyCustomerQty,0) - 1
  WHERE WarehouseSysNo = @WHSysNo 
        AND ProductSysNo = @ProductSysNo 
        AND RMAStockQty > 0 
        AND CompanyCode = @CompanyCode
END
			]]>
    </commandText>
    <parameters>
      <param name="@CompanyCode" dbType="AnsiStringFixedLength" />
      <param name="@WHSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@IsRecv" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateOutboundStatus" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE dbo.RMA_Register
SET OutBoundStatus = @OutboundStatus
WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>     
      <param name="@SysNo" dbType="Int32" />
      <param name="@OutboundStatus" dbType="Int32" />
    </parameters>
  </dataCommand>
  
  <dataCommand name="GetRegisterQty" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT
	COUNT(1) RegisterQty
FROM
	dbo.RMA_Request request (NOLOCK)
INNER JOIN dbo.RMA_Request_Item request_item (NOLOCK)
	ON request.SysNo = request_item.RequestSysNo 
INNER JOIN RMA_Register register (NOLOCK)
	ON register.SysNo = request_item.RegisterSysNo 
WHERE
	request.SOSysNo = @SOSysNo
  AND register.SOItemType = @SOItemType
	AND register.ProductSysNo = @ProductSysNo
	AND (register.Status = @Origin OR register.status = @Handling)  
			]]>
    </commandText>
    <parameters>      
      <param name="@SOSysNo" dbType="Int32" />
      <param name="@SOItemType" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@Origin" dbType="Int32" />
      <param name="@Handling" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="CanWaitingRevert" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT COUNT(1)
FROM dbo.RMA_Register (NOLOCK)
WHERE RevertStatus IS NULL
  AND Status = 1 -- 1: Handling
  AND SysNo = @SysNo  
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="CanWaitingRefund" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT COUNT(1)
FROM dbo.RMA_Register (NOLOCK)
WHERE RefundStatus IS NULL
  AND Status = 1 -- 1: Handling
  AND SysNo = @SysNo  
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo"        dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="CanCancelWaitingRefund" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT COUNT(1)
FROM dbo.RMA_Register (NOLOCK)
WHERE RefundStatus = 0 -- 0: WaitingRefund
  AND Status = 1       -- 1: Handling
  AND SysNo = @SysNo  
  AND SysNo NOT IN (
    SELECT RegisterSysNo
    FROM dbo.RMA_Refund rf (NOLOCK)
    INNER JOIN dbo.RMA_Refund_Item rf_item (NOLOCK) ON rf_item.RefundSysNo = rf.SysNo 
    WHERE rf.Status = 0 -- 0: WaitingRefund      
  )
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="CanReOpenRegister" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT COUNT(1)
FROM dbo.RMA_Register (NOLOCK)
WHERE Status = 2
  AND SysNo = @SysNo  
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
  
  <dataCommand name="CanWaitingReturn" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT COUNT(1)
FROM dbo.RMA_Register (NOLOCK)
WHERE ReturnStatus IS NULL
  AND Status = 1 -- 1: Handling
  AND SysNo = @SysNo  
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="CanCancelWaitingReturn" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT COUNT(1)
FROM dbo.RMA_Register (NOLOCK)
WHERE ReturnStatus = 0 -- 0: WaitingReturn
  AND Status = 1       -- 1: Handling
  AND SysNo = @SysNo  
  AND SysNo NOT IN (
    SELECT RegisterSysNo
    FROM dbo.RMA_Return rt (NOLOCK)
    INNER JOIN dbo.RMA_Return_Item rt_item (NOLOCK) ON rt_item.ReturnSysNo = rt.SysNo 
    WHERE rt.Status = 0 -- 0: WaitingReturn      
  )
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="CanCancelWaitingRevert" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT COUNT(1)
FROM dbo.RMA_Register (NOLOCK)
WHERE RevertStatus IN (0, 2) -- 0: WaitingRevert, 2: WaitingAudit
  AND Status = 1             -- 1: Handling
  AND SysNo = @SysNo 
  AND SysNo NOT IN (
    SELECT RegisterSysNo
    FROM dbo.RMA_Revert rt (NOLOCK)
    INNER JOIN dbo.RMA_Revert_Item rt_item (NOLOCK) ON rt_item.RevertSysNo = rt.SysNo 
    WHERE rt.Status = 0     -- 0: WaitingRevert      
  )
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="CanWaitingOutbound" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT COUNT(1)
FROM dbo.RMA_Register (NOLOCK)
WHERE OutBoundStatus IS NULL
  AND Status = 1 -- 1: Handling
  AND SysNo = @SysNo  
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="CanCancelWaitingOutbound" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT
  COUNT(1)
FROM
  dbo.RMA_Register (NOLOCK)
WHERE
  OutBoundStatus = 0 -- 0: Origin
  AND Status = 1     -- 1: Handling
  AND SysNo = @SysNo  
  AND SysNo NOT IN (
    SELECT RegisterSysNo
    FROM dbo.RMA_OutBound_Item item (NOLOCK)
    INNER JOIN dbo.RMA_OutBound ob (NOLOCK) ON ob.SysNo = item.OutBoundSysNo 
    WHERE ob.Status = 0 -- 0: Origin     
  )
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateRevertStatus" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE dbo.RMA_Register SET
  RevertStatus         = @RevertStatus,
  NewProductStatus     = @NewProductStatus,
  RevertProductSysNo   = @RevertProductSysNo,
  RevertStockSysNo     = @RevertStockSysNo,
  SetWaitingRevertTime = @SetWaitingRevertTime,
  RevertAuditUserSysNo = @RevertAuditUserSysNo,
  RevertAuditMemo      = @RevertAuditMemo,
  RevertAuditTime      = @RevertAuditTime
WHERE
  SysNo = @SysNo
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo"                dbType="Int32"    />
      <param name="@RevertStatus"         dbType="Int32"    />
      <param name="@NewProductStatus"     dbType="Int32"    />
      <param name="@RevertProductSysNo"   dbType="Int32"    />
      <param name="@RevertStockSysNo"     dbType="Int32"    />
      <param name="@SetWaitingRevertTime" dbType="DateTime" />
      <param name="@RevertAuditUserSysNo" dbType="Int32"    />
      <param name="@RevertAuditMemo"      dbType="String"   />
      <param name="@RevertAuditTime"      dbType="DateTime" />
    </parameters>
  </dataCommand>
  
  <dataCommand name="UpdateRegisterMemo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
		DECLARE @Memo1 NVARCHAR(2000)
		SELECT TOP 1 @Memo1 = ISNULL(Memo,'') FROM [dbo].[RMA_Register] WITH(NOLOCK)
		WHERE SysNo = @SysNo
		 
		IF @Memo1 IS NULL
		BEGIN
		 SET @Memo1 = ''
		END
		
		IF @Memo IS NULL
		BEGIN
		 SET @Memo = ''
		END

		
		SET @Memo1 = @Memo1 + CHAR(13) + CHAR(10) + @Memo
		  
      UPDATE [dbo].[RMA_Register] 
		SET [Memo] = @Memo1
      WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@Memo" dbType="String" size="2990" />
    </parameters>
  </dataCommand>

  <dataCommand name="QueryRegisters" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @PageSize INT
SET @PageSize = @EndNumber - @StartNumber

SELECT @TotalCount = COUNT(Distinct(register.SysNo))
FROM IPP3.dbo.RMA_register register WITH (NOLOCK)
  INNER JOIN IPP3.dbo.RMA_request_Item request_item WITH (NOLOCK) ON
    request_item.registerSysNo = register.SysNo
  INNER JOIN IPP3.dbo.RMA_request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK) ON
    product.SysNo = register.ProductSysNo
  INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category3 WITH (NOLOCK) ON
    product.Category3SysNo = category3.Category3SysNo
  INNER JOIN OverseaCustomerManagement.dbo.V_CUM_CustomerBaseInfo customer WITH (NOLOCK) ON
    customer.SysNo = request.CustomerSysNo
  LEFT JOIN (
	  SELECT item.RegisterSysNo, rt.OutTime, rt.PackageID
	  FROM IPP3.dbo.RMA_Revert rt WITH (NOLOCK)
	    INNER JOIN RMA_Revert_Item item WITH (NOLOCK)
	      ON rt.SysNo = item.RevertSysNo
	  WHERE rt.Status <> -1 
  ) AS rmarevert ON register.SysNo = rmarevert.RegisterSysNo
  #OutBoundTable#
  #RefundTable#
  #ReturnTable#
#StrWhere#

IF OBJECT_ID('tempdb..#registers') IS NULL BEGIN
	CREATE TABLE #registers(SysNo INT PRIMARY KEY)
END ELSE BEGIN
	TRUNCATE TABLE #registers
END

INSERT INTO #registers
SELECT DISTINCT SysNo
FROM (
	SELECT 
		(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) RowNumber,
		register.SysNo
	FROM IPP3.dbo.RMA_register register WITH (NOLOCK)
	  INNER JOIN IPP3.dbo.RMA_request_Item request_item WITH (NOLOCK) ON
		  request_item.registerSysNo = register.SysNo
	  INNER JOIN IPP3.dbo.RMA_request request WITH (NOLOCK) ON
		  request.SysNo = request_item.RequestSysNo
	  INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK) ON
		  product.SysNo = register.ProductSysNo
	  INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category3 WITH (NOLOCK) ON
		  product.Category3SysNo = category3.Category3SysNo
	  INNER JOIN OverseaCustomerManagement.dbo.V_CUM_CustomerBaseInfo customer WITH (NOLOCK) ON
		  customer.SysNo = request.CustomerSysNo
	  LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Stock shipped_stock WITH (NOLOCK) ON
      shipped_stock.SysNo = register.ShippedWarehouse
	  LEFT JOIN (
		  SELECT item.RegisterSysNo, rt.OutTime, rt.PackageID
		  FROM IPP3.dbo.RMA_Revert rt WITH (NOLOCK)
		    INNER JOIN RMA_Revert_Item item WITH (NOLOCK)
			    ON rt.SysNo = item.RevertSysNo
		  WHERE rt.Status <> -1
	  ) AS rmarevert ON register.SysNo = rmarevert.RegisterSysNo
    #OutBoundTable#
    #RefundTable#
    #ReturnTable#
  #StrWhere#
) results
WHERE RowNumber > @StartNumber

DECLARE @filter TABLE(SysNo INT)
INSERT INTO @filter
SELECT TOP (@PageSize) register.SysNo
FROM #registers filter WITH (NOLOCK)
	INNER JOIN IPP3.dbo.RMA_register register WITH (NOLOCK)
		ON register.SysNO = filter.SysNo
	INNER JOIN IPP3.dbo.RMA_request_Item request_item WITH (NOLOCK)
		ON request_item.registerSysNo = register.SysNo
	INNER JOIN IPP3.dbo.RMA_request request WITH (NOLOCK)
		ON request.SysNo = request_item.requestSysNo
	INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK)
		ON product.SysNo = register.ProductSysNo
	INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category3 WITH (NOLOCK)
		ON product.Category3SysNo = category3.Category3SysNo
	INNER JOIN OverseaCustomerManagement.dbo.V_CUM_CustomerBaseInfo customer WITH (NOLOCK)
		ON customer.SysNo = request.CustomerSysNo
  LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Stock shipped_stock WITH (NOLOCK) ON
    shipped_stock.SysNo = register.ShippedWarehouse
	LEFT JOIN (
		SELECT item.RegisterSysNo, rt.OutTime, rt.PackageID
		FROM IPP3.dbo.RMA_Revert rt WITH (NOLOCK)
			INNER JOIN IPP3.dbo.RMA_Revert_Item item WITH (NOLOCK)
				ON rt.SysNo = item.RevertSysNo
		WHERE rt.Status <> -1
	) AS rmarevert ON register.SysNo = rmarevert.RegisterSysNo
 WHERE register.CompanyCode = @CompanyCode
 ORDER BY #SortColumnName#

IF OBJECT_ID('tempdb..#registers') IS NOT NULL BEGIN
	TRUNCATE TABLE #registers
	DROP TABLE #registers
END

SELECT
  register.SysNo           ,
  register.CustomerDesc    ,
  register.CheckDesc       ,
  --register.ResponseDesc    ,
  --ResponseDesc =register.VendorRepairResultType+register.ResponseDesc ,
  case register.VendorRepairResultType when NULL then register.ResponseDesc 
       else '['+register.VendorRepairResultType+']'+register.ResponseDesc end as ResponseDesc,
  register.OutBoundStatus  ,
  register.RevertStatus    ,
  register.RefundStatus    ,
  register.ReturnStatus    ,
  register.NewProductStatus,
  --register.IsWithin7Days   ,
  case register.IsWithin7Days when NULL then NULL else convert(bit,register.IsWithin7Days) end as IsWithin7Days,
  register.Status          ,
  register.RMAReason       ,
  --register.IsHaveInvoice   ,
  case register.IsHaveInvoice when NULL then NULL else convert(bit,register.IsHaveInvoice) end as IsHaveInvoice,
  --register.IsFullPackage   ,
  case register.IsFullPackage when NULL then NULL else convert(bit,register.IsFullPackage) end as IsFullPackage,
  --register.IsFullAccessory  ,
  case register.IsFullAccessory when NULL then NULL else convert(bit,register.IsFullAccessory) end as IsFullAccessory,
  register.InspectionResultType,
  register.VendorRepairResultType,
  register.SellerOperationInfo,
  register.SellerMemo,
    register.PackageNumber,
      register.ShipViaCode,
  ISNULL(rmarevert.PackageID, '') + register.Memo Memo,
  request.SysNo AS RequestSysNo,
  request.SOSysNo  ,
  request.RequestID,
  request.RecvTime ,
  --request.InvoiceType ,
 case request.InvoiceType when 'MET' then 0 else 1 end  as InvoiceType,
  shipped_stock.StockName,
  product.SysNo AS ProductSysNo,
  product.ProductID,
  product.ProductName,
  register.SOItemType,
  customer.VIPRank AS CustomerVIPRank,
  case customer.VIPRank when 2  then convert(bit,1)
      when 4 then convert(bit,1) else convert(bit,0) end  as IsVIP 
FROM @filter filter
INNER JOIN IPP3.dbo.RMA_register register WITH (NOLOCK)
	ON register.SysNo = filter.SysNo 
INNER JOIN IPP3.dbo.RMA_request_Item request_item WITH (NOLOCK)
	ON request_item.registerSysNo = register.SysNo
INNER JOIN IPP3.dbo.RMA_request request WITH (NOLOCK)
	ON request.SysNo = request_item.requestSysNo
INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK)
	ON product.SysNo = register.ProductSysNo
INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category3 WITH (NOLOCK)
	ON product.Category3SysNo = category3.Category3SysNo
INNER JOIN OverseaCustomerManagement.dbo.V_CUM_CustomerBaseInfo customer WITH (NOLOCK)
	ON customer.SysNo = request.CustomerSysNo
LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Stock shipped_stock WITH (NOLOCK)
	ON shipped_stock.SysNo = register.ShippedWarehouse
LEFT JOIN (
  SELECT item.RegisterSysNo, rt.OutTime, rt.PackageID
  FROM IPP3.dbo.RMA_Revert rt WITH (NOLOCK)
  INNER JOIN IPP3.dbo.RMA_Revert_Item item WITH (NOLOCK) ON rt.SysNo = item.RevertSysNo
  WHERE rt.Status <> -1
) AS rmarevert ON register.SysNo = rmarevert.RegisterSysNo
WHERE register.CompanyCode = @CompanyCode
ORDER BY #SortColumnName#
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="QueryRegistersForRepeatRegister" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @PageSize INT
SET @PageSize = @EndNumber - @StartNumber

SELECT @TotalCount = COUNT(Distinct(register.SysNo))
FROM IPP3.dbo.RMA_register register WITH (NOLOCK)
  INNER JOIN IPP3.dbo.RMA_request_Item request_item WITH (NOLOCK) ON
    request_item.registerSysNo = register.SysNo
  INNER JOIN IPP3.dbo.RMA_request request WITH (NOLOCK) ON
    request.SysNo = request_item.RequestSysNo
  INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK) ON
    product.SysNo = register.ProductSysNo
  INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category3 WITH (NOLOCK) ON
    product.Category3SysNo = category3.Category3SysNo
  INNER JOIN OverseaCustomerManagement.dbo.V_CUM_CustomerBaseInfo customer WITH (NOLOCK) ON
    customer.SysNo = request.CustomerSysNo
  INNER JOIN [OverseaServiceManagement].[dbo].[RepeatRegister] Repeat WITH(NOLOCK)
	 ON Repeat.SOSysNo = request.SOSysNo 
		AND Repeat.[ProductSysNo] = register.ProductSysNo 
		AND Repeat.[CurrentCount] > 1 
  LEFT JOIN (
	  SELECT item.RegisterSysNo, rt.OutTime, rt.PackageID
	  FROM IPP3.dbo.RMA_Revert rt WITH (NOLOCK)
	    INNER JOIN IPP3.dbo.RMA_Revert_Item item WITH (NOLOCK)
	      ON rt.SysNo = item.RevertSysNo
	  WHERE rt.Status <> -1 
  ) AS rmarevert ON register.SysNo = rmarevert.RegisterSysNo
  #OutBoundTable#
  #RefundTable#
  #ReturnTable#
#StrWhere#

IF OBJECT_ID('tempdb..#registers') IS NULL BEGIN
	CREATE TABLE #registers(SysNo INT PRIMARY KEY)
END ELSE BEGIN
	TRUNCATE TABLE #registers
END

INSERT INTO #registers
SELECT DISTINCT SysNo
FROM (
	SELECT 
		(ROW_NUMBER() OVER(ORDER BY #SortColumnName#)) RowNumber,
		register.SysNo
	FROM dbo.RMA_register register WITH (NOLOCK)
	  INNER JOIN IPP3.dbo.RMA_request_Item request_item WITH (NOLOCK) ON
		  request_item.registerSysNo = register.SysNo
	  INNER JOIN IPP3.dbo.RMA_request request WITH (NOLOCK) ON
		  request.SysNo = request_item.RequestSysNo
	  INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK) ON
		  product.SysNo = register.ProductSysNo
	  INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category3 WITH (NOLOCK) ON
		  product.Category3SysNo = category3.Category3SysNo
	  INNER JOIN OverseaCustomerManagement.dbo.V_CUM_CustomerBaseInfo customer WITH (NOLOCK) ON
		  customer.SysNo = request.CustomerSysNo
	  INNER JOIN [OverseaServiceManagement].[dbo].[RepeatRegister] Repeat WITH(NOLOCK)
		 ON Repeat.SOSysNo = request.SOSysNo 
			AND Repeat.[ProductSysNo] = register.ProductSysNo 
			AND Repeat.[CurrentCount] > 1 
	  LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Stock shipped_stock WITH (NOLOCK) ON
      shipped_stock.SysNo = register.ShippedWarehouse
	  LEFT JOIN (
		  SELECT item.RegisterSysNo, rt.OutTime, rt.PackageID
		  FROM IPP3.dbo.RMA_Revert rt WITH (NOLOCK)
		    INNER JOIN IPP3.dbo.RMA_Revert_Item item WITH (NOLOCK)
			    ON rt.SysNo = item.RevertSysNo
		  WHERE rt.Status <> -1
	  ) AS rmarevert ON register.SysNo = rmarevert.RegisterSysNo
    #OutBoundTable#
    #RefundTable#
    #ReturnTable#
  #StrWhere#
) results
WHERE RowNumber > @StartNumber

DECLARE @filter TABLE(SysNo INT)
INSERT INTO @filter
SELECT TOP (@PageSize) register.SysNo
FROM #registers filter WITH (NOLOCK)
	INNER JOIN IPP3.dbo.RMA_register register WITH (NOLOCK)
		ON register.SysNO = filter.SysNo
	INNER JOIN IPP3.dbo.RMA_request_Item request_item WITH (NOLOCK)
		ON request_item.registerSysNo = register.SysNo
	INNER JOIN IPP3.dbo.RMA_request request WITH (NOLOCK)
		ON request.SysNo = request_item.requestSysNo
	INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK)
		ON product.SysNo = register.ProductSysNo
	INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category3 WITH (NOLOCK)
		ON product.Category3SysNo = category3.Category3SysNo
	INNER JOIN OverseaCustomerManagement.dbo.V_CUM_CustomerBaseInfo customer WITH (NOLOCK)
		ON customer.SysNo = request.CustomerSysNo
   INNER JOIN [OverseaServiceManagement].[dbo].[RepeatRegister] Repeat WITH(NOLOCK)
	  ON Repeat.SOSysNo = request.SOSysNo 
		 AND Repeat.[ProductSysNo] = register.ProductSysNo 
		 AND Repeat.[CurrentCount] > 1 
  LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Stock shipped_stock WITH (NOLOCK) ON
    shipped_stock.SysNo = register.ShippedWarehouse
	LEFT JOIN (
		SELECT item.RegisterSysNo, rt.OutTime, rt.PackageID
		FROM IPP3.dbo.RMA_Revert rt WITH (NOLOCK)
			INNER JOIN IPP3.dbo.RMA_Revert_Item item WITH (NOLOCK)
				ON rt.SysNo = item.RevertSysNo
		WHERE rt.Status <> -1
	) AS rmarevert ON register.SysNo = rmarevert.RegisterSysNo
 WHERE register.CompanyCode = @CompanyCode
 ORDER BY #SortColumnName#

IF OBJECT_ID('tempdb..#registers') IS NOT NULL BEGIN
	TRUNCATE TABLE #registers
	DROP TABLE #registers
END

SELECT
  register.SysNo           ,
  register.CustomerDesc    ,
  register.CheckDesc       ,
  --register.ResponseDesc    ,
    case register.VendorRepairResultType when NULL then register.ResponseDesc 
       else '['+register.VendorRepairResultType+']'+register.ResponseDesc end as ResponseDesc,
  register.OutBoundStatus  ,
  register.RevertStatus    ,
  register.RefundStatus    ,
  register.ReturnStatus    ,
  register.NewProductStatus,
  --register.IsWithin7Days   ,
  case register.IsWithin7Days when NULL then NULL else convert(bit,register.IsWithin7Days) end as IsWithin7Days,
  register.Status          ,
  register.RMAReason       ,
  --register.IsHaveInvoice   ,
  case register.IsHaveInvoice when NULL then NULL else convert(bit,register.IsHaveInvoice) end as IsHaveInvoice,
  --register.IsFullPackage   ,
  case register.IsFullPackage when NULL then NULL else convert(bit,register.IsFullPackage) end as IsFullPackage,
  --register.IsFullAccessory  ,
  case register.IsFullAccessory when NULL then NULL else convert(bit,register.IsFullAccessory) end as IsFullAccessory,
  register.InspectionResultType,
  register.SellerMemo,
  register.VendorRepairResultType,
  ISNULL(rmarevert.PackageID, '') + register.Memo Memo,
  request.SysNo AS RequestSysNo,
  request.SOSysNo  ,
  request.RequestID,
  request.RecvTime ,
 --request.InvoiceType ,
 case request.InvoiceType when 'MET' then 0 else 1 end as InvoiceType,
  shipped_stock.StockName,
  product.SysNo AS ProductSysNo,
  product.ProductID,
  product.ProductName,
  register.SOItemType,
  register.SellerOperationInfo,
  customer.VIPRank AS CustomerVIPRank,
  case customer.VIPRank when 2  then convert(bit,1)
      when 4 then convert(bit,1) else convert(bit,0) end  as IsVIP 
FROM @filter filter
INNER JOIN IPP3.dbo.RMA_register register WITH (NOLOCK)
	ON register.SysNo = filter.SysNo 
INNER JOIN IPP3.dbo.RMA_request_Item request_item WITH (NOLOCK)
	ON request_item.registerSysNo = register.SysNo
INNER JOIN IPP3.dbo.RMA_request request WITH (NOLOCK)
	ON request.SysNo = request_item.requestSysNo
INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo product WITH (NOLOCK)
	ON product.SysNo = register.ProductSysNo
INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo category3 WITH (NOLOCK)
	ON product.Category3SysNo = category3.Category3SysNo
INNER JOIN OverseaCustomerManagement.dbo.V_CUM_CustomerBaseInfo customer WITH (NOLOCK)
	ON customer.SysNo = request.CustomerSysNo
INNER JOIN [OverseaServiceManagement].[dbo].[RepeatRegister] Repeat WITH(NOLOCK)
	ON Repeat.SOSysNo = request.SOSysNo 
		AND Repeat.[ProductSysNo] = register.ProductSysNo 
		AND Repeat.[CurrentCount] > 1 
LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Stock shipped_stock WITH (NOLOCK)
	ON shipped_stock.SysNo = register.ShippedWarehouse
LEFT JOIN (
  SELECT item.RegisterSysNo, rt.OutTime, rt.PackageID
  FROM IPP3.dbo.RMA_Revert rt WITH (NOLOCK)
  INNER JOIN IPP3.dbo.RMA_Revert_Item item WITH (NOLOCK) ON rt.SysNo = item.RevertSysNo
  WHERE rt.Status <> -1
) AS rmarevert ON register.SysNo = rmarevert.RegisterSysNo
WHERE register.CompanyCode = @CompanyCode
ORDER BY #SortColumnName#
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="OutBoundTableClause" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
LEFT JOIN (
    SELECT item.RegisterSysNo, ob.OutTime
    FROM dbo.RMA_Outbound ob WITH (NOLOCK)
    INNER JOIN dbo.RMA_Outbound_Item item WITH (NOLOCK) ON item.OutboundSysNo = ob.SysNo
    WHERE ob.Status <> -1
) outbound ON register.SysNo = outbound.RegisterSysNo
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="RefundTableClause" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
LEFT JOIN (
    SELECT item.RegisterSysNo, rf.RefundTime
    FROM dbo.RMA_Refund rf WITH (NOLOCK)
    INNER JOIN dbo.RMA_Refund_Item item WITH (NOLOCK) ON rf.SysNo = item.RefundSysNo
    WHERE rf.Status <> -1
) refund ON register.SysNo = refund.RegisterSysNo
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="ReturnTableClause" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
LEFT JOIN (
    SELECT item.RegisterSysNo, re.ReturnTime
    FROM dbo.RMA_Return re WITH (NOLOCK)
    INNER JOIN dbo.RMA_Return_Item item WITH (NOLOCK) ON re.SysNo = item.ReturnSysNo
    WHERE re.Status <> -1
) as rmareturn ON register.SysNo = rmareturn.RegisterSysNo
      ]]>
    </commandText>
  </dataCommand>
  <dataCommand name="GetRegisterDunlog" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT A.[SysNo]
      ,A.[RegisterSysNo]
      ,A.[Feedback]
      ,A.[UserSysNo]
      ,A.[CreateTime]
      ,A.[Memo]
	    ,B.[DisplayName] AS UserName
  FROM [IPP3].[dbo].[RMA_Register_Dunlog] A WITH(NOLOCK )
	INNER JOIN OverseaArchitecture.dbo.V_AR_UserInfo B WITH(NOLOCK)
		ON A.UserSysNo = B.UserSysNo
 WHERE [RegisterSysNo] = @RegisterSysNo
 ORDER BY [SysNo] DESC
						]]>
    </commandText>
    <parameters>      
      <param name="@RegisterSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateRegister" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE dbo.[RMA_Register] 
      SET [RefundStatus] = ISNULL(@RefundStatus, [RefundStatus]) 
         ,[OwnBy] = ISNULL(@OwnBy, [OwnBy]) 
         ,[Cost] = ISNULL(@cost, [Cost]) 
         ,[OwnByWarehouse] = ISNULL(@OwnByWarehouse, [OwnByWarehouse]) 
      WHERE 
          [SysNo] = @SysNo         
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@RefundStatus" dbType="Int32" />
      <param name="@OwnBy" dbType="Int32" />
      <param name="@Cost" dbType="Decimal" />
      <param name="@OwnByWarehouse" dbType="AnsiStringFixedLength" />      
    </parameters>
  </dataCommand>

  <dataCommand name="GetRMAInventory" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
				SELECT TOP 1 
						 [Sysno]
						,[WarehouseSysNo]
						,[ProductSysno]
						,[ProductBriefName]
						,[RMAStockQty]
						,[RMAOnVendorQty]
						,[ShiftQty]
						,[CompanyCode]
						,[LanguageCode]
						,[StoreCompanyCode]
						,[OwnbyNeweggQty]
						,[OwnbyCustomerQty]
						,[AverageCost]
						,[AverageCostWithoutTax]
				  FROM [RMA].[dbo].[RMA_Inventory] WITH(NOLOCK)
				  WHERE WarehouseSysNo= @WHSysNo 
						AND ProductSysNo = @ProductSysNo						
				]]>
    </commandText>
    <parameters>      
      <param name="@WHSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateInventoryCost" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
				UPDATE RMA.dbo.RMA_Inventory 
				SET OwnbyCustomerQty = ISNULL(OwnbyCustomerQty,0) + @OwnbyCustomerQty
				   ,OwnbyNeweggQty = ISNULL(OwnbyNeweggQty,0) + @OwnbyNeweggQty 
					 ,AverageCost = @AverageCost
					 ,AverageCostWithoutTax = @AverageCostWithoutTax
				WHERE WarehouseSysNo= @WarehouseSysNo 
					AND ProductSysNo = @ProductSysNo					
			]]>
    </commandText>
    <parameters>      
      <param name="@WarehouseSysNo" dbType="Int32" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@OwnbyCustomerQty" dbType="Int32" />
      <param name="@OwnbyNeweggQty" dbType="Int32" />
      <param name="@AverageCost" dbType="Decimal"/>
      <param name="@AverageCostWithoutTax" dbType="Decimal" />
    </parameters>
  </dataCommand>

  <dataCommand name="LoadRegisterBySOSysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT 
    reg.ProductSysNo as [BasicInfo.ProductSysNo],
    reg.RequestType,
    reg.CompanyCode,
    reg.CustomerDesc as [BasicInfo.CustomerDesc],
    reg.CheckTime as [CheckInfo.CheckTime],
    reg.CheckDesc as [CheckInfo.CheckDesc],
    reg.NewProductStatus as [RevertInfo.NewProductStatus],
    reg.RevertStatus as [RevertInfo.RevertStatus],
    reg.OutBoundStatus as [BasicInfo.OutBoundStatus],
    reg.ReturnStatus as [BasicInfo.ReturnStatus],
    reg.ResponseDesc as [ResponseInfo.ResponseDesc],
    reg.ResponseTime as [ResponseInfo.ResponseTime],
    reg.RefundStatus as [BasicInfo.RefundStatus],
    reg.NextHandler as [BasicInfo.NextHandler],
    reg.Memo as [BasicInfo.Memo],
    reg.Status as [BasicInfo.Status],
    reg.ProductNo as [BasicInfo.ProductNo],
    reg.IsWithin7Days as [BasicInfo.IsWithin7Days],
    reg.IsRecommendRefund as [CheckInfo.IsRecommendRefund],    
    reg.OwnBy as [BasicInfo.OwnBy],
    reg.Location as [BasicInfo.Location],
    reg.Cost as [BasicInfo.Cost],
    reg.RMAReason as [BasicInfo.RMAReason],
    reg.CheckUserSysNo as [CheckInfo.CheckUserSysNo],
    reg.ResponseUserSysNo as [ResponseInfo.ResponseUserSysNo],
    reg.CloseUserSysNo as [BasicInfo.CloseUserSysNo],
    reg.CloseTime as [BasicInfo.CloseTime],
    reg.RevertAuditUserSysNo as [RevertInfo.RevertAuditUserSysNo],
    reg.RevertAuditTime as [RevertInfo.RevertAuditTime],
    reg.RevertAuditMemo as [RevertInfo.RevertAuditMemo],
    reg.RevertProductSysNo as [RevertInfo.RevertProductSysNo],
    reg.IsHaveInvoice as [BasicInfo.IsHaveInvoice],
    reg.IsFullAccessory as [BasicInfo.IsFullAccessory],
    reg.IsFullPackage as [BasicInfo.IsFullPackage],
    reg.InspectionResultType as [CheckInfo.InspectionResultType],
    reg.VendorRepairResultType as [ResponseInfo.VendorRepairResultType],
    reg.OutBoundWithInvoice as [BasicInfo.OutBoundWithInvoice],
    reg.ResponseProductNo as [ResponseInfo.ResponseProductNo],
    reg.RevertStockSysNo as [RevertInfo.RevertStockSysNo],
    reg.LocationWarehouse as [BasicInfo.LocationWarehouse],
    reg.OwnByWarehouse as [BasicInfo.OwnByWarehouse],
    reg.ShippedWarehouse as [BasicInfo.ShippedWarehouse],
    reg.UpdateNoResponseTime as [BasicInfo.UpdateNoResponseTime],
    reg.SetWaitingRevertTime as [RevertInfo.SetWaitingRevertTime],
    reg.FailureType as [BasicInfo.FailureType],
    reg.SOItemType  as [BasicInfo.SOItemType]
FROM dbo.RMA_Request req WITH(NOLOCK)
	INNER JOIN dbo.RMA_Request_Item req_item WITH(NOLOCK) 
		ON req_item.RequestSysNo = req.SysNo
	INNER JOIN dbo.RMA_Register reg WITH(NOLOCK)
		ON req_item.RegisterSysNo = reg.SysNo 
WHERE req.SoSysNo = @SOSysNo 	
				]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>

  <dataCommand name="UpdateForRMAAuto" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE dbo.RMA_Register
	SET RefundStatus = @RefundStatus,
		 OwnBy = @OwnBy,
		 OwnByWarehouse = @OwnByWarehouse,
		 Status = @Status
WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo" dbType="Int32" />
      <param name="@OwnBy" dbType="Int32" />
      <param name="@OwnByWarehouse" dbType="Int32" />
      <param name="@Status" dbType="Int32" />
      <param name="@RefundStatus" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="GetRegistersBySysNoList" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          [SysNo] 
         ,[ProductSysNo] as [BasicInfo.ProductSysNo]
         ,[SOItemType] as [BasicInfo.SOItemType]
         ,[LocationWarehouse] as [BasicInfo.LocationWarehouse]
         ,[Status] as [BasicInfo.Status]
      FROM dbo.[RMA_Register] WITH(NOLOCK) 
      WHERE 
          [SysNo] IN (#SysNoList)         
      ]]>
    </commandText>   
  </dataCommand>

  <dataCommand name="UpdateRegisterAfterRefunded" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE dbo.[RMA_Register] 
      SET [RefundStatus] = ISNULL(@RefundStatus, [RefundStatus]) 
         ,[OwnBy] = ISNULL(@OwnBy, [OwnBy]) 
         ,[Cost] = ISNULL(@cost, [Cost]) 
         ,[OwnByWarehouse] = ISNULL(@OwnByWarehouse, [OwnByWarehouse]) 
      WHERE 
          [SysNo] = @SysNo          
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@RefundStatus" dbType="Int32" property="BasicInfo.RefundStatus"/>
      <param name="@OwnBy" dbType="Int32" property="BasicInfo.OwnBy"/>
      <param name="@Cost" dbType="Decimal" property="BasicInfo.Cost"/>
      <param name="@OwnByWarehouse" dbType="AnsiStringFixedLength" property="BasicInfo.OwnByWarehouse"/>      
    </parameters>
  </dataCommand>

  <dataCommand name="GetRegisterRow" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT 
RMA_Request.ReceiveWarehouse
,RMA_Request_Item.ProductSysNo
FROM OverseaServiceManagement.dbo.V_SM_RMARequestTransaction RMA_Request_Item WITH(NOLOCK)
INNER JOIN OverseaServiceManagement.dbo.V_SM_RMARequestMaster RMA_Request WITH(NOLOCK)
ON RMA_Request_Item.requestsysno = RMA_Request.sysno
WHERE RMA_Request_Item.RegisterSysNo = @RegisterSysNo
			]]>
    </commandText>
    <parameters>
      <param name="@RegisterSysNo" dbType="Int32" />      
    </parameters>
  </dataCommand>

  <dataCommand name="CloseRegisterForVendorRefund" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
UPDATE dbo.RMA_Register SET
  Status         = @Status,
  CloseUserSysNo = @CloseUserSysNo,
  CloseTime      = @CloseTime,
  OwnBy          = @OwnBy,
  Location       = @Location,
  OutboundStatus = @OutBoundStatus
WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>      
      <param name="@SysNo"          dbType="Int32"    />
      <param name="@Status"         dbType="Int32"    />
      <param name="@CloseUserSysNo" dbType="Int32"    property="[UserSysNo]" />
      <param name="@CloseTime"      dbType="DateTime" property="[Now]"/>
      <param name="@OwnBy"          dbType="Int32"    />
      <param name="@Location"       dbType="Int32"    />
      <param name="@OutBoundStatus" dbType="Int32"    />
    </parameters>
  </dataCommand>

  <dataCommand name="LoadRegisterMemoBySysNo" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
          A.[SysNo] 
         ,A.[ProductSysNo]
         ,A.[Memo]
         --,B.[ProductID] 
         --,B.[ProductName] 
         ,D.[VendorName] 
      FROM [dbo].[RMA_Register] A WITH(NOLOCK) 
      --INNER JOIN [OverseaContentManagement].[dbo].[V_CM_ItemBasicInfo] B WITH(NOLOCK) 
      --    ON A.[ProductSysNo] = B.[SysNo] 
      INNER JOIN [dbo].[RMA_OutBound_Item] C WITH(NOLOCK) 
          ON A.[SysNo] = C.[RegisterSysNo] 
      INNER JOIN [dbo].[RMA_OutBound] D WITH(NOLOCK) 
          ON C.[OutBoundSysNo] = D.[SysNo] 
      WHERE
            A.[SysNo] = @SysNo 
      ]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
  <dataCommand name="LoadRegisterBySoNumber" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
SELECT reg.SysNo,
    reg.ProductSysNo as [BasicInfo.ProductSysNo],
    reg.RequestType,
    reg.CompanyCode,
    reg.CustomerDesc as [BasicInfo.CustomerDesc],
    reg.CheckTime as [CheckInfo.CheckTime],
    reg.CheckDesc as [CheckInfo.CheckDesc],
    reg.NewProductStatus as [RevertInfo.NewProductStatus],
    reg.RevertStatus as [RevertInfo.RevertStatus],
    reg.OutBoundStatus as [BasicInfo.OutBoundStatus],
    reg.ReturnStatus as [BasicInfo.ReturnStatus],
    reg.ResponseDesc as [ResponseInfo.ResponseDesc],
    reg.ResponseTime as [ResponseInfo.ResponseTime],
    reg.RefundStatus as [BasicInfo.RefundStatus],
    reg.NextHandler as [BasicInfo.NextHandler],
    reg.Memo as [BasicInfo.Memo],
    reg.Status as [BasicInfo.Status],
    reg.ProductNo as [BasicInfo.ProductNo],
    reg.IsWithin7Days as [BasicInfo.IsWithin7Days],
    reg.IsRecommendRefund as [CheckInfo.IsRecommendRefund],    
    reg.OwnBy as [BasicInfo.OwnBy],
    reg.Location as [BasicInfo.Location],
    reg.Cost as [BasicInfo.Cost],
    reg.RMAReason as [BasicInfo.RMAReason],
    reg.CheckUserSysNo as [CheckInfo.CheckUserSysNo],
    reg.ResponseUserSysNo as [ResponseInfo.ResponseUserSysNo],
    reg.CloseUserSysNo as [BasicInfo.CloseUserSysNo],
    reg.CloseTime as [BasicInfo.CloseTime],
    reg.RevertAuditUserSysNo as [RevertInfo.RevertAuditUserSysNo],
    reg.RevertAuditTime as [RevertInfo.RevertAuditTime],
    reg.RevertAuditMemo as [RevertInfo.RevertAuditMemo],
    reg.RevertProductSysNo as [RevertInfo.RevertProductSysNo],
    reg.IsHaveInvoice as [BasicInfo.IsHaveInvoice],
    reg.IsFullAccessory as [BasicInfo.IsFullAccessory],
    reg.IsFullPackage as [BasicInfo.IsFullPackage],
    reg.InspectionResultType as [CheckInfo.InspectionResultType],
    reg.VendorRepairResultType as [ResponseInfo.VendorRepairResultType],
    reg.OutBoundWithInvoice as [BasicInfo.OutBoundWithInvoice],
    reg.ResponseProductNo as [ResponseInfo.ResponseProductNo],
    reg.RevertStockSysNo as [RevertInfo.RevertStockSysNo],
    reg.LocationWarehouse as [BasicInfo.LocationWarehouse],
    reg.OwnByWarehouse as [BasicInfo.OwnByWarehouse],
    reg.ShippedWarehouse as [BasicInfo.ShippedWarehouse],
    reg.UpdateNoResponseTime as [BasicInfo.UpdateNoResponseTime],
    reg.SetWaitingRevertTime as [RevertInfo.SetWaitingRevertTime],
    reg.FailureType as [BasicInfo.FailureType],
    reg.SOItemType  as [BasicInfo.SOItemType]
FROM  dbo.RMA_Request req WITH(NOLOCK)
	INNER JOIN dbo.RMA_Request_Item req_item WITH(NOLOCK) 
		ON req_item.RequestSysNo = req.SysNo
	INNER JOIN dbo.RMA_Register reg WITH(NOLOCK)
		ON req_item.RegisterSysNo = reg.SysNo 
WHERE req.SoSysNo = @SOSysNo 
				]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>
<dataCommand name="RegisterSyncERP" database="NCService" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE dbo.RMA_Register 
        SET ERPStatus=1,
         SyncERPDate=getdate()
        WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo"  dbType="Int32"    />     
    </parameters>
  </dataCommand>
</dataOperations>