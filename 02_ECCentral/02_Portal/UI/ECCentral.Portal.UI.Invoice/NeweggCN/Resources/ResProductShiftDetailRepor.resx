<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_ImportGoldenTaxDetail" xml:space="preserve">
    <value>导入金税明细</value>
  </data>
  <data name="Button_ImportGoldenTaxNo" xml:space="preserve">
    <value>导入金税库</value>
  </data>
  <data name="Button_Query" xml:space="preserve">
    <value>查询</value>
  </data>
  <data name="Button_QueryResult" xml:space="preserve">
    <value>查询结果</value>
  </data>
  <data name="Grid_AjustRate" xml:space="preserve">
    <value>成本调整率</value>
  </data>
  <data name="Grid_AmtProductCost" xml:space="preserve">
    <value>商品总金额</value>
  </data>
  <data name="Grid_GoldenTaxNo" xml:space="preserve">
    <value>金税号</value>
  </data>
  <data name="Grid_OutTimeString" xml:space="preserve">
    <value>月份</value>
  </data>
  <data name="Grid_ProductID" xml:space="preserve">
    <value>商品编号</value>
  </data>
  <data name="Grid_ProductName" xml:space="preserve">
    <value>商品名称</value>
  </data>
  <data name="Grid_ProductSysNo" xml:space="preserve">
    <value>商品系统编号</value>
  </data>
  <data name="Grid_ShiftQty" xml:space="preserve">
    <value>数量</value>
  </data>
  <data name="Grid_ShiftSysNo" xml:space="preserve">
    <value>移仓单号</value>
  </data>
  <data name="Grid_UnitCost" xml:space="preserve">
    <value>单位成本</value>
  </data>
  <data name="Msg_CompanyNeedNotNull" xml:space="preserve">
    <value>按照分公司查询时移入公司和移出公司不能相同!</value>
  </data>
  <data name="Msg_ImportError" xml:space="preserve">
    <value>发生未知错误，导入失败，请稍后再试。</value>
  </data>
  <data name="Msg_ImportSuccess" xml:space="preserve">
    <value>导入成功</value>
  </data>
  <data name="Msg_ImportTaxDetail" xml:space="preserve">
    <value>导入金税明细</value>
  </data>
  <data name="Msg_ImportTips" xml:space="preserve">
    <value>成功导入{0}条移仓单到金税库中！0金额移仓单将会被过滤。</value>
  </data>
  <data name="Msg_JustSelctByStockCanImport" xml:space="preserve">
    <value>只有按照仓库查询的结果才能导入金税库！</value>
  </data>
  <data name="Msg_ManualAdjustAmout" xml:space="preserve">
    <value>存在需要手工调整的金额:{0}</value>
  </data>
  <data name="Msg_NeedHaveValueByCompany" xml:space="preserve">
    <value>按照分公司查询时移入公司和移出公司都必须有值!</value>
  </data>
  <data name="Msg_NeedSelectByCompanOrStock" xml:space="preserve">
    <value>按照分公司查询或者按照仓库查询，必要选择一项!</value>
  </data>
  <data name="Msg_NotFoundShitOrder" xml:space="preserve">
    <value>未找到移仓单可以导入到金税库中！</value>
  </data>
  <data name="Msg_OutCompantyTotalAmout" xml:space="preserve">
    <value>移出公司总金额：商品总金额（*）：{0}----商品税金（*）：{1}----商品总金额：{2}</value>
  </data>
  <data name="Msg_OutTimeNotNull" xml:space="preserve">
    <value>出库时间不能为空！</value>
  </data>
  <data name="Msg_SelectTotalAmout" xml:space="preserve">
    <value>当前选中项总金额： 商品总金额(*):{0} ---- 商品税金(*) :{1} ---- 商品总金额:{2}</value>
  </data>
  <data name="Msg_TotalAmout" xml:space="preserve">
    <value>移出公司总金额：商品总金额（*）：{0}----商品税金（*）：{1}----商品总金额：{2}；\r\n移入公司总金额：商品总金额（*）：{3}----商品税金（*）：{4}----商品总金额：{5}；\r\n合并后总金额：商品总金额（*）：{6}----商品税金（*）：{7}----商品总金额：{8}；\r\n{9}"</value>
  </data>
  <data name="TextBlock_EnterCompany" xml:space="preserve">
    <value>移入公司:</value>
  </data>
  <data name="TextBlock_GoldenTaxNo" xml:space="preserve">
    <value>税金号:</value>
  </data>
  <data name="TextBlock_OutCompany" xml:space="preserve">
    <value>移出公司:</value>
  </data>
  <data name="TextBlock_OutStockTime" xml:space="preserve">
    <value>出库时间:</value>
  </data>
  <data name="TextBlock_ViewDetail" xml:space="preserve">
    <value>查看金税明细</value>
  </data>
  <data name="Toolkit_QueryCondition" xml:space="preserve">
    <value>查询条件</value>
  </data>
  <data name="TextBlock_UploaderFile" xml:space="preserve">
    <value>请选择要上传的文件:</value>
  </data>
</root>
