<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AfterSalesSupportEmail" xml:space="preserve">
    <value>售后支持邮箱:</value>
  </data>
  <data name="AfterSalesSupportLink" xml:space="preserve">
    <value>售后支持链接:</value>
  </data>
  <data name="AuditInfo" xml:space="preserve">
    <value>审核信息</value>
  </data>
  <data name="AuthorizedInfo" xml:space="preserve">
    <value>‌授权牌信息</value>
  </data>
  <data name="BasicInfo" xml:space="preserve">
    <value>基本信息</value>
  </data>
  <data name="BrandImage" xml:space="preserve">
    <value>品牌Logo:</value>
  </data>
  <data name="BrandStory" xml:space="preserve">
    <value>品牌故事:</value>
  </data>
  <data name="BtnAuditByNo" xml:space="preserve">
    <value>审核不通过</value>
  </data>
  <data name="BtnAuditByOk" xml:space="preserve">
    <value>审核通过</value>
  </data>
  <data name="BtnClose" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="BtnSave" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="BtnSubMitAudit" xml:space="preserve">
    <value>提交审核</value>
  </data>
  <data name="BtnUploadBrandLogo" xml:space="preserve">
    <value>上传</value>
  </data>
  <data name="ClientPhone" xml:space="preserve">
    <value>客户电话:</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>备注:</value>
  </data>
  <data name="IsLogo" xml:space="preserve">
    <value>是否有Logo</value>
  </data>
  <data name="IsShowZone" xml:space="preserve">
    <value>是否专区显示</value>
  </data>
  <data name="Label_BrandCode" xml:space="preserve">
    <value>品牌Code:</value>
  </data>
  <data name="Mannfacturer" xml:space="preserve">
    <value>生产商:</value>
  </data>
  <data name="MannfacturerLink" xml:space="preserve">
    <value>厂商链接:</value>
  </data>
  <data name="NameCh" xml:space="preserve">
    <value>中文名称:</value>
  </data>
  <data name="NameEn" xml:space="preserve">
    <value>英文名称:</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>预览</value>
  </data>
  <data name="PreviewInfo" xml:space="preserve">
    <value>*图片宽度建议不要超过320像素</value>
  </data>
  <data name="ProductLine" xml:space="preserve">
    <value>产品线:</value>
  </data>
  <data name="Reanson" xml:space="preserve">
    <value>申请理由:</value>
  </data>
  <data name="ShowUrl" xml:space="preserve">
    <value>前台专卖店Url:</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>状态:</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>类型:</value>
  </data>
</root>