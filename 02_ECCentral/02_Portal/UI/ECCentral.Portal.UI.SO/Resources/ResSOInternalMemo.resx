<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_Add" xml:space="preserve">
    <value>添加跟进日志</value>
  </data>
  <data name="Button_Close" xml:space="preserve">
    <value>关闭日志</value>
  </data>
  <data name="Button_NeedFollow" xml:space="preserve">
    <value>需要跟进</value>
  </data>
  <data name="Button_SelectReasonCodePath" xml:space="preserve">
    <value>选择原因</value>
  </data>
  <data name="DataGrid_Column_Head_CloseDate" xml:space="preserve">
    <value>日志关闭时间</value>
  </data>
  <data name="DataGrid_Column_Head_Closer" xml:space="preserve">
    <value>日志关闭者</value>
  </data>
  <data name="DataGrid_Column_Head_Content" xml:space="preserve">
    <value>日志内容</value>
  </data>
  <data name="DataGrid_Column_Head_CreateDate" xml:space="preserve">
    <value>日志创建时间</value>
  </data>
  <data name="DataGrid_Column_Head_Creater" xml:space="preserve">
    <value>日志创建者</value>
  </data>
  <data name="DataGrid_Column_Head_Importance" xml:space="preserve">
    <value>紧急程度</value>
  </data>
  <data name="DataGrid_Column_Head_LogSysNo" xml:space="preserve">
    <value>日志编号</value>
  </data>
  <data name="DataGrid_Column_Head_ReasonCode" xml:space="preserve">
    <value>原因</value>
  </data>
  <data name="DataGrid_Column_Head_Remind" xml:space="preserve">
    <value>日志提醒时间</value>
  </data>
  <data name="DataGrid_Column_Head_SoSysNo" xml:space="preserve">
    <value>日志对应单号</value>
  </data>
  <data name="DataGrid_Column_Head_Source" xml:space="preserve">
    <value>信息来源</value>
  </data>
  <data name="Expander_AddLog" xml:space="preserve">
    <value> 添加订单日志</value>
  </data>
  <data name="Expander_LogList" xml:space="preserve">
    <value>日志列表</value>
  </data>
  <data name="Header_AddLog" xml:space="preserve">
    <value>添加订单跟进日志</value>
  </data>
  <data name="Header_CloseLog" xml:space="preserve">
    <value>关闭日志</value>
  </data>
  <data name="hlb_SlelectReasonCode" xml:space="preserve">
    <value>原因选择</value>
  </data>
  <data name="Msg_LongMemoCutInfo" xml:space="preserve">
    <value>备注信息超过{0}字，已被截断保存.</value>
  </data>
  <data name="Msg_NoteFormat" xml:space="preserve">
    <value>关闭:{0};&lt;br/&gt;跟进:{1}</value>
  </data>
  <data name="TextBlock_AddComplain" xml:space="preserve">
    <value> 添加投诉</value>
  </data>
  <data name="TextBlock_CallType" xml:space="preserve">
    <value>来电分类统计:</value>
  </data>
  <data name="TextBlock_Content" xml:space="preserve">
    <value>日志内容:</value>
  </data>
  <data name="TextBlock_Importance" xml:space="preserve">
    <value>紧急程度:</value>
  </data>
  <data name="TextBlock_LogCloseDate" xml:space="preserve">
    <value>日志关闭时间:</value>
  </data>
  <data name="TextBlock_LogCreateDate" xml:space="preserve">
    <value>日志创建时间:</value>
  </data>
  <data name="TextBlock_LogCreater" xml:space="preserve">
    <value>日志创建者:</value>
  </data>
  <data name="TextBlock_Reason" xml:space="preserve">
    <value>原因:</value>
  </data>
  <data name="TextBlock_RemindDate" xml:space="preserve">
    <value>日志提醒时间:</value>
  </data>
  <data name="TextBlock_Source" xml:space="preserve">
    <value>信息来源:</value>
  </data>
  <data name="Msg_ComplainSubject" xml:space="preserve">
    <value>订单号{0}跟进日志生成投诉 {1}</value>
  </data>
  <data name="Msg_publicMemoAddNewInfo" xml:space="preserve">
    <value>新增跟进日志成功!</value>
  </data>
  <data name="Expander_ComplainList" xml:space="preserve">
    <value>相关订单投诉</value>
  </data>
  <data name="Header_Assign" xml:space="preserve">
    <value>派发处理人</value>
  </data>
  <data name="TextBlock_Receiver" xml:space="preserve">
    <value>收件人:</value>
  </data>
  <data name="TextBlock_ReceiverContent" xml:space="preserve">
    <value>邮件内容:</value>
  </data>
  <data name="TextBlock_SearchReceive" xml:space="preserve">
    <value>收件人查询:</value>
  </data>
  <data name="TextBlock_SearchSelect" xml:space="preserve">
    <value>选择收件人:</value>
  </data>
  <data name="TextBlock_SearchAlter" xml:space="preserve">
    <value>[若输入'abc',可以查询到以abc开头的用户]</value>
  </data>
  <data name="Msg_SendEmailSuccess" xml:space="preserve">
    <value>邮件已成功发送给：{0}</value>
  </data>
  <data name="Msg_EmailSubject" xml:space="preserve">
    <value>订单[{0}]跟进日志(From:{1} Date:{2})</value>
  </data>
</root>