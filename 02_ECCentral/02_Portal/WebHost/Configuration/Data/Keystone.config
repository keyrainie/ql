<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dataCommand name="GetAuthUserByRoleName" database="QueryKeystoneDB" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
           URS.unique_identifier AS UniqueName
          ,U.first_name AS FirstName
          ,U.last_name AS LastName
        FROM 
          dbo.[user] AS U WITH (NOLOCK)
        INNER JOIN dbo.user_role AS UR WITH (NOLOCK)
        ON U.id = UR.user_id
        INNER JOIN dbo.role AS R WITH (NOLOCK)
        ON UR.role_id = R.id
        INNER JOIN dbo.user_authentication_source AS URS WITH (NOLOCK)
        ON U.id = URS.user_id
        WHERE R.system_id = @ApplicationId 
        AND R.role_name = @RoleName

      ]]>
    </commandText>
    <parameters>
      <param name="@ApplicationId" dbType="AnsiString" direction="Input"/>
      <param name="@RoleName" dbType="String" direction="Input"/>
    </parameters>
  </dataCommand>

  <dataCommand name="GetAuthUserByFunctionName" database="QueryKeystoneDB" commandType="Text">
    <commandText>
      <![CDATA[
SELECT 
    URS.unique_identifier AS UniqueName
  , U.first_name AS FirstName
  ,U.last_name AS LastName
FROM 
  dbo.[user] AS U WITH (NOLOCK)
INNER JOIN 
  dbo.user_authentication_source AS URS WITH (NOLOCK)
  ON U.id = URS.user_id
  #StrWhere#
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="GetAuthFunctionalAbilities" database="QueryKeystoneDB" commandType="Text">
    <commandText>
      <![CDATA[
SELECT Distinct F.id,F.functional_ability_name AS Name,F.system_id AS ApplicationId  FROM dbo.functional_ability AS F WITH(NOLOCK)
INNER JOIN dbo.role_functional_ability AS RF WITH(NOLOCK) ON F.id=RF.functional_ability_id
INNER JOIN dbo.user_role AS UR WITH(NOLOCK) ON RF.role_id=UR.role_id
INNER JOIN dbo.user_authentication_source AS UAS WITH(NOLOCK) ON UR.user_id=UAS.user_id
INNER JOIN dbo.directory AS D WITH(NOLOCK) ON UAS.directory_id=D.id
#StrWhere#
UNION
SELECT Distinct F.id,F.functional_ability_name AS Name,F.system_id AS ApplicationId  FROM dbo.functional_ability AS F WITH(NOLOCK)
INNER JOIN dbo.role_functional_ability AS RF WITH(NOLOCK) ON F.id=RF.functional_ability_id
INNER JOIN dbo.group_role AS GR WITH(NOLOCK) ON RF.role_id=GR.role_id 
INNER JOIN dbo.group_user AS GU WITH(NOLOCK) ON GU.group_id=GR.group_id 
INNER JOIN dbo.user_authentication_source AS UAS WITH(NOLOCK) ON GU.user_id=UAS.user_id
INNER JOIN dbo.directory AS D WITH(NOLOCK) ON UAS.directory_id=D.id
#StrWhere#
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="GetAuthRoleAttributes" database="QueryKeystoneDB" commandType="Text">
    <commandText>
      <![CDATA[
SELECT R.system_id AS ApplicationId,R.role_name AS RoleName,AT.attribute_type_name AS Type,AM.attribute_name AS Name,URA.attribute_value AS Value FROM dbo.user_role_attributes AS URA WITH(NOLOCK)
INNER JOIN dbo.attribute_metadata AS AM WITH(NOLOCK) ON URA.attribute_metadata_id = AM.id
INNER JOIN dbo.attribute_type AS AT WITH(NOLOCK) ON AT.id=AM.attribute_type
INNER JOIN dbo.user_role AS UR WITH(NOLOCK) ON URA.user_role_id=UR.id
INNER JOIN dbo.user_authentication_source AS UAS WITH(NOLOCK) ON UR.user_id=UAS.user_id
INNER JOIN dbo.role AS R WITH(NOLOCK) ON UR.role_id=r.id
INNER JOIN dbo.directory AS D WITH(NOLOCK) ON UAS.directory_id=D.id
#StrWhere#
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="GetAuthRolesByUser" database="QueryKeystoneDB" commandType="Text">
    <commandText>
      <![CDATA[
SELECT Distinct R.id AS RoleID, R.role_name AS RoleName,R.system_id AS ApplicationID  FROM dbo.role AS R WITH(NOLOCK)
INNER JOIN dbo.user_role AS UR WITH(NOLOCK) ON R.id=UR.role_id
INNER JOIN dbo.user_authentication_source AS UAS WITH(NOLOCK) ON UR.user_id=UAS.user_id
INNER JOIN dbo.directory AS D WITH(NOLOCK) ON UAS.directory_id=D.id
#StrWhere#
UNION
SELECT Distinct R.id AS RoleID, R.role_name AS RoleName,R.system_id AS ApplicationID  FROM dbo.role AS R WITH(NOLOCK)
INNER JOIN dbo.group_role AS GR WITH(NOLOCK) ON R.id=GR.role_id 
INNER JOIN dbo.group_user AS GU WITH(NOLOCK) ON GU.group_id=GR.group_id 
INNER JOIN dbo.user_authentication_source AS UAS WITH(NOLOCK) ON GU.user_id=UAS.user_id
INNER JOIN dbo.directory AS D WITH(NOLOCK) ON UAS.directory_id=D.id
#StrWhere#
      ]]>
    </commandText>
  </dataCommand>

</dataOperations>
