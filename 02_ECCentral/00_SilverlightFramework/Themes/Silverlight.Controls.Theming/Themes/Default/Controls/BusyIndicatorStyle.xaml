<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
	xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit" >
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../BasicResourcesStyle.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style TargetType="toolkit:BusyIndicator">
		<Setter Property="BusyContent" Value=""/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="OverlayStyle">
			<Setter.Value>
				<Style TargetType="Rectangle">
					<Setter Property="Fill" Value="White"/>
					<Setter Property="Opacity" Value="0"/>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="DisplayAfter" Value="00:00:00.1"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
		<Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="toolkit:BusyIndicator">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="VisibilityStates">
								<VisualState x:Name="Hidden">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Visible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="BusyStatusStates">
								<VisualState x:Name="Idle">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="content">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<sys:Boolean>True</sys:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Busy">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="content">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<sys:Boolean>False</sys:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}"/>
						<ContentPresenter x:Name="busycontent">
							<Grid HorizontalAlignment="Center" 
								  VerticalAlignment="Center">
								<Grid.Resources>
									<Style x:Key="ProgressBarStyle1" TargetType="ProgressBar">
										<Setter Property="BorderThickness" Value="0"/>
										<Setter Property="Maximum" Value="100"/>
										<Setter Property="IsTabStop" Value="False"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="ProgressBar">
													<Grid x:Name="Root">
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Determinate"/>
																<VisualState x:Name="Indeterminate">
																	<Storyboard RepeatBehavior="Forever">
																		<DoubleAnimation Duration="00:00:.5" From="0" To="20" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X" Storyboard.TargetName="IndeterminateGradientFill"/>
																		<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="IndeterminateRoot">
																			<DiscreteObjectKeyFrame KeyTime="00:00:00">
																				<DiscreteObjectKeyFrame.Value>
																					<Visibility>Visible</Visibility>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DeterminateRoot">
																			<DiscreteObjectKeyFrame KeyTime="00:00:00">
																				<DiscreteObjectKeyFrame.Value>
																					<Visibility>Collapsed</Visibility>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<!--Default Root Visuals for either type of ProgressBar-->
														<Border x:Name="ProgressBarTrack" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>

														<Grid x:Name="ProgressBarRootGrid">
															<!-- Beginning of Gradient over all visuals -->
															<Rectangle x:Name="ProgressBarRootGradient" Margin="{TemplateBinding BorderThickness}" RadiusY="1.5" RadiusX="1.5"  StrokeThickness="1" Canvas.ZIndex="1" />

															<!-- Beginning of Indeterminate Progress Bar Visuals-->
															<Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
																<Rectangle x:Name="IndeterminateSolidFill" Fill="{TemplateBinding Foreground}" Margin="{TemplateBinding BorderThickness}" Opacity="1" RadiusY="2" RadiusX="2" RenderTransformOrigin="0.5,0.5" StrokeThickness="0"/>
																<Rectangle x:Name="IndeterminateGradientFill" Margin="{TemplateBinding BorderThickness}" Opacity="0.7" RadiusY="2" RadiusX="2" StrokeThickness="1">
																	<Rectangle.Fill>
																		<LinearGradientBrush EndPoint="0.5,1" MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="20,1">
																			<LinearGradientBrush.Transform>
																				<TransformGroup>
																					<TranslateTransform X="0"/>
																					<SkewTransform AngleX="-30"/>
																				</TransformGroup>
																			</LinearGradientBrush.Transform>
																			<GradientStop Color="#FF1173CC" Offset="1"/>
																			<GradientStop Color="#FF5FAFEE"/>
																		</LinearGradientBrush>
																	</Rectangle.Fill>
																	<Rectangle.Effect>
																		<DropShadowEffect BlurRadius="0" Direction="280" Opacity="0.1" ShadowDepth="1"/>
																	</Rectangle.Effect>
																</Rectangle>
															</Grid>
															<Grid x:Name="DeterminateRoot" Margin="1">
																<Rectangle x:Name="ProgressBarIndicator" HorizontalAlignment="Left" Fill="{TemplateBinding Foreground}" Margin="{TemplateBinding BorderThickness}" RadiusY="1.5" RadiusX="1.5" StrokeThickness="0.5"/>
															</Grid>
														</Grid>
													</Grid>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Grid.Resources>
								<Border BorderThickness="0" Canvas.ZIndex="10" HorizontalAlignment="Center" Height="55"  VerticalAlignment="Center" Width="215" CornerRadius="5" Opacity="0.9">
									<Border.Effect>
										<DropShadowEffect BlurRadius="3" Opacity="0.5" ShadowDepth="0"/>
									</Border.Effect>
									<Border.Background>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FF999999" Offset="0"/>
											<GradientStop Color="#FF333333" Offset="0.2"/>
										</LinearGradientBrush>
									</Border.Background>
									<Grid>
										<Rectangle Height="1" VerticalAlignment="Top" Margin="10,0">
											<Rectangle.Fill>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<LinearGradientBrush.RelativeTransform>
														<CompositeTransform CenterY="0.5" CenterX="0.5" Rotation="90"/>
													</LinearGradientBrush.RelativeTransform>
													<GradientStop Color="Transparent" Offset="0"/>
													<GradientStop Color="Transparent" Offset="1"/>
													<GradientStop Color="#7FFFFFFF" Offset="0.5"/>
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
										<Border BorderThickness="1" Height="9" Margin="30,0" VerticalAlignment="Center">
											<Border.Effect>
												<DropShadowEffect BlurRadius="0" Color="White" Direction="280" Opacity="0.1" ShadowDepth="1"/>
											</Border.Effect>
											<Border.Background>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FF999999" Offset="0.05"/>
													<GradientStop Color="#FF6E6E6E" Offset="1"/>
													<GradientStop Color="#FF212121"/>
												</LinearGradientBrush>
											</Border.Background>
											<Border.BorderBrush>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FF373737" Offset="0"/>
													<GradientStop Color="#FF333333" Offset="1"/>
												</LinearGradientBrush>
											</Border.BorderBrush>
											<Border BorderThickness="0">
												<Border.Background>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FF258BDF" Offset="1"/>
														<GradientStop Color="#FF6CB9F1" Offset="0.074"/>
														<GradientStop Color="#FF0E65A5"/>
													</LinearGradientBrush>
												</Border.Background>
												<ProgressBar Grid.Row="1" IsIndeterminate="True" Height="7" Style="{StaticResource ProgressBarStyle1}"  />

											</Border>
										</Border>
										<Grid x:Name="grid" Margin="30 5 0 0">
											<ContentPresenter ContentTemplate="{TemplateBinding BusyContentTemplate}" Content="{TemplateBinding BusyContent}"/>
										</Grid>
									</Grid>
								</Border>
							</Grid>
						</ContentPresenter>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>