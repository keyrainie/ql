<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <dataCommand name="Sync.GetNeedToSynchronizeCreate" database="CPS" commandType="Text">
    <commandText>
      <![CDATA[
           SELECT 
	        [CommissionSettlementSysNo] = NULL,
	        [OrderSysNo] = cpsSO.SOSysNo,
	        [Status] = 'U',
          [OrderDate] = cpsSO.OutTime,
	        [OrderAmt] = cpsSO.SOAmt,
	        [Type] = 'SO',
	        [UserSysNo] = cpsSO.UserSysNo,
	        [ChannelSysNo] = channel.SysNo,
          [SubSource] = cpsSO.ChannelSubSourceID,
	        [CommissionAmt] = 0.00,		--需要计算
          [SyncType] = 'Create'
        FROM CPS.dbo.V_CPS_SO cpsSO WITH(NOLOCK)
        LEFT JOIN CPS.dbo.UserChannel channel WITH(NOLOCK)
          ON channel.Source = cpsSO.ChannelSubSourceID AND channel.UserSysNo = cpsSO.UserSysNo
        WHERE cpsSO.CommissionItemStatus  IS NULL 
          AND cpsSO.Status >= 0

        UNION
        
        SELECT 
          [CommissionSettlementSysNo] = NULL,
          [OrderSysNo] = ippSO.SysNo,
          [Status] = 'U',
          [OrderDate] = ippSO.OutTime,
          [OrderAmt] =(
	          SELECT ROUND(SUM(soItem.Price * soItem.Quantity + soItem.DiscountAmt),2) AS SOAmt FROM IPP3.dbo.SO_Item soItem WITH(NOLOCK) 
	            INNER JOIN IPP3.dbo.Product product WITH(NOLOCK)
            ON product.SysNo = soItem.ProductSysNo
             LEFT JOIN IPP3.dbo.Vendor v WITH(NOLOCK)
            ON product.MerchantSysNo = v.SysNo
	            WHERE SOSysNo = ippSO.SysNo
              AND  (v.VendorType = 0  OR (v.VendorType = 1 AND EXISTS(
			          SELECT ProductSysNo FROM OverseaOrderManagement.dbo.SO_Item_Extension sie WITH(NOLOCK)
                WHERE sie.SoSysNo = soItem.SOSysNo AND sie.Type='G'  AND  soItem.ProductSysNo = sie.ProductSysNo 
          )))  
	        ),
          [Type] = 'SO',
          [UserSysNo] = cpsSOMaster.UserSysNo,
          [ChannelSysNo] = cpsSOMaster.ChannelSysNo,
          cpsSOMaster.[SubSource],
          [CommissionAmt] = 0.00,		--需要计算
          [SyncType] = 'Create'
        FROM (
            SELECT 
                [SOSysNo] = cpsSO.SOSysNo,
                [OrderDate] = cpsSO.OutTime,
                [OrderAmt] = cpsSO.SOAmt,		
                [UserSysNo] = cpsSO.UserSysNo,
                [ChannelSysNo] = channel.SysNo,
                [SubSource] = cpsSO.ChannelSubSourceID,
                cpsSO.CommissionItemStatus
            FROM CPS.dbo.V_CPS_SO cpsSO WITH(NOLOCK)
            LEFT JOIN CPS.dbo.UserChannel channel WITH(NOLOCK)
              ON channel.Source = cpsSO.ChannelSubSourceID AND channel.UserSysNo = cpsSO.UserSysNo
            WHERE  cpsSO.Status = -6
        ) AS cpsSOMaster
        INNER JOIN IPP3.dbo.SO_CheckShipping ippSOCheckShipping WITH(NOLOCK)
          ON ippSOCheckShipping.SoSplitMaster = cpsSOMaster.SOSysNo
        INNER JOIN IPP3.dbo.SO_Master ippSO WITH(NOLOCK)
          ON ippSO.SysNo = ippSOCheckShipping.SOSysNo
        LEFT JOIN CPS.dbo.CommissionSettlement_Item commItem WITH(NOLOCK)
          ON commItem.OrderSysNo = ippSO.SysNo AND commItem.Type = 'SO'
        WHERE commItem.SysNo IS NULL
        
        UNION

        SELECT 
	        [CommissionSettlementSysNo] = NULL,
	        [OrderSysNo] = cpsRMA.RMASysNo,
	        [Status] = 'U',
          [OrderDate] = cpsRMA.RefundTime,
	        [OrderAmt] = cpsRMA.RefundAmt,
	        [Type] = 'RMA',
	        [UserSysNo] = cpsRMA.UserSysNo,
	        [ChannelSysNo] = channel.SysNo,
          [SubSource] = cpsRMA.ChannelSubSourceID,
	        [CommissionAmt] = 0.00,		--需要计算
          [SyncType] = 'Create'
        FROM CPS.dbo.V_CPS_RMA cpsRMA WITH(NOLOCK)
        LEFT JOIN CPS.dbo.CommissionSettlement_Item commItem WITH(NOLOCK)
          ON commItem.OrderSysNo = cpsRMA.RMASysNo
        LEFT JOIN CPS.dbo.UserChannel channel WITH(NOLOCK)
          ON channel.Source = cpsRMA.ChannelSubSourceID AND channel.UserSysNo = cpsRMA.UserSysNo
        WHERE commItem.OrderSysNo IS NULL 
          AND cpsRMA.Status >= 0
			]]>
    </commandText>
  </dataCommand>

  <dataCommand name="Sync.GetNeedToSynchronizeUpdate" database="CPS" commandType="Text">
    <commandText>
      <![CDATA[
         SELECT 
	        [SysNo]  = commItem.SysNo,
	        [OrderSysNo] = cpsSO.SOSysNo,
	        [Status] = 'U',
	        [OrderDate] = cpsSO.OutTime,
	        [OrderAmt] = cpsSO.SOAmt,
	        [Type] = 'SO',
	        [UserSysNo] = cpsSO.UserSysNo,
	        [ChannelSysNo] = channel.SysNo,
	        [CommissionAmt] = 0.00,		--需要计算
          [SyncType] = 'Update'
        FROM CPS.dbo.V_CPS_SO cpsSO WITH(NOLOCK)
        LEFT JOIN CPS.dbo.UserChannel channel WITH(NOLOCK)
          ON channel.Source = cpsSO.ChannelSubSourceID AND channel.UserSysNo = cpsSO.UserSysNo
        LEFT JOIN CPS.dbo.CommissionSettlement_Item commItem WITH(NOLOCK)
          ON cpsSO.SOSysNo = commItem.OrderSysNo AND commItem.Type = 'SO'
        WHERE cpsSO.CommissionItemStatus = 'U'
          AND cpsSO.SOAmt <> commItem.OrderAmt
          AND cpsSO.Status >= 0  
          
        UNION

        SELECT 
	        [SysNo]  = commItem.SysNo,
	        [OrderSysNo] = cpsRMA.RMASysNo,
	        [Status] = 'U',
	        [OrderDate] = cpsRMA.RefundTime,
	        [OrderAmt] = cpsRMA.RefundAmt,
	        [Type] = 'RMA',
	        [UserSysNo] = cpsRMA.UserSysNo,
	        [ChannelSysNo] = channel.SysNo,
	        [CommissionAmt] = 0.00,		--需要计算
          [SyncType] = 'Update'
        FROM CPS.dbo.V_CPS_RMA cpsRMA WITH(NOLOCK)
        LEFT JOIN CPS.dbo.CommissionSettlement_Item commItem WITH(NOLOCK)
          ON commItem.OrderSysNo = cpsRMA.RMASysNo
        LEFT JOIN CPS.dbo.UserChannel channel WITH(NOLOCK)
          ON channel.Source = cpsRMA.ChannelSubSourceID AND channel.UserSysNo = cpsRMA.UserSysNo
        WHERE commItem.OrderSysNo IS NOT NULL AND commItem.Status = 'U' 
          AND commItem.OrderAmt <>  cpsRMA.RefundAmt
          AND cpsRMA.Status >= 0
          
          UNION
                  
        SELECT 
          [CommissionSettlementSysNo] = NULL,
          [OrderSysNo] = ippSO.SysNo,
          [Status] = 'U',
          [OrderDate] = ippSO.OutTime,
          [OrderAmt] =(
	          SELECT ROUND(SUM(soItem.Price * soItem.Quantity + soItem.DiscountAmt),2) AS SOAmt FROM IPP3.dbo.SO_Item soItem WITH(NOLOCK) 
            INNER JOIN IPP3.dbo.Product product WITH(NOLOCK)
            ON product.SysNo = soItem.ProductSysNo
             LEFT JOIN IPP3.dbo.Vendor v WITH(NOLOCK)
            ON product.MerchantSysNo = v.SysNo
	            WHERE SOSysNo = ippSO.SysNo
              AND  (v.VendorType = 0  OR (v.VendorType = 1 AND EXISTS(
			          SELECT ProductSysNo FROM OverseaOrderManagement.dbo.SO_Item_Extension sie WITH(NOLOCK)
                WHERE sie.SoSysNo = soItem.SOSysNo AND sie.Type='G'  AND  soItem.ProductSysNo = sie.ProductSysNo 
          )))              
	        ),
          [Type] = 'SO',
          [UserSysNo] = cpsSOMaster.UserSysNo,
          [ChannelSysNo] = cpsSOMaster.ChannelSysNo,
          [CommissionAmt] = 0.00,		--需要计算
          [SyncType] = 'Create'
        FROM (
	        SELECT 
		        [SOSysNo] = cpsSO.SOSysNo,
		        [OrderDate] = cpsSO.OutTime,
		        [OrderAmt] = cpsSO.SOAmt,		
		        [UserSysNo] = cpsSO.UserSysNo,
		        [ChannelSysNo] = channel.SysNo
	        FROM CPS.dbo.V_CPS_SO cpsSO WITH(NOLOCK)
	        LEFT JOIN CPS.dbo.UserChannel channel WITH(NOLOCK)
	          ON channel.Source = cpsSO.ChannelSubSourceID AND channel.UserSysNo = cpsSO.UserSysNo
	        WHERE cpsSO.CommissionItemStatus IS NOT NULL 
	          AND cpsSO.Status = -6
        ) AS cpsSOMaster
        INNER JOIN IPP3.dbo.SO_CheckShipping ippSOCheckShipping WITH(NOLOCK)
          ON ippSOCheckShipping.SoSplitMaster = cpsSOMaster.SOSysNo
        INNER JOIN IPP3.dbo.SO_Master ippSO WITH(NOLOCK)
          ON ippSO.SysNo = ippSOCheckShipping.SOSysNo
        LEFT JOIN CPS.dbo.CommissionSettlement_Item commItem WITH(NOLOCK)
          ON ippSO.SysNo = commItem.OrderSysNo AND commItem.Type = 'SO'
        WHERE commItem.SysNo IS NOT NULL AND commItem.Status='U'
          AND commItem.OrderAmt <> 
          (SELECT ROUND(SUM(soItem.Price * soItem.Quantity + soItem.DiscountAmt),2) AS SOAmt FROM IPP3.dbo.SO_Item soItem WITH(NOLOCK)
                  INNER JOIN IPP3.dbo.Product product WITH(NOLOCK)
          ON product.SysNo = soItem.ProductSysNo
                 LEFT JOIN IPP3.dbo.Vendor v WITH(NOLOCK)
          ON product.MerchantSysNo = v.SysNo
	            WHERE SOSysNo = ippSO.SysNo 
              AND  (v.VendorType = 0  OR (v.VendorType = 1 AND EXISTS(
			          SELECT ProductSysNo FROM OverseaOrderManagement.dbo.SO_Item_Extension sie WITH(NOLOCK)
                WHERE sie.SoSysNo = soItem.SOSysNo AND sie.Type='G'  AND  soItem.ProductSysNo = sie.ProductSysNo 
          ))))
			]]>
    </commandText>
  </dataCommand>

  <dataCommand name="Sync.GetItemSO" database="CPS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
	        soItem.Price + (soItem.DiscountAmt/soItem.Quantity) AS Price,
	        soItem.Quantity,
	        soItem.ProductSysNo,
	        c2.C1SysNo ,
	        Percentage = (
          CASE WHEN EXISTS
          (SELECT ProductSysNo FROM OverseaOrderManagement.dbo.SO_Item_Extension sie WITH(NOLOCK)
            WHERE sie.SoSysNo = soItem.SOSysNo AND sie.Type='G'  AND  soItem.ProductSysNo = sie.ProductSysNo) 
            THEN 0.01 ELSE CASE WHEN cp.Percentage IS NOT NULL THEN cp.Percentage 
                         ELSE (SELECT TOP(1) Percentage FROM CPS.dbo.CommissionPercentage WITH(NOLOCK) WHERE IsDefault = 'Y')
                         END 
            END)
        FROM IPP3.dbo.SO_Item soItem WITH(NOLOCK)
        INNER JOIN IPP3.dbo.Product product WITH(NOLOCK)
          ON product.SysNo = soItem.ProductSysNo
        INNER JOIN IPP3.dbo.Category3 c3 WITH(NOLOCK)
          ON product.C3SysNo = c3.SysNo
        INNER JOIN IPP3.dbo.Category2 c2 WITH(NOLOCK)
          ON c2.SysNo = c3.C2SysNo
        LEFT JOIN CPS.dbo.CommissionPercentage cp WITH(NOLOCK)
          ON cp.Category1SysNo = c2.C1SysNo
        LEFT JOIN IPP3.dbo.Vendor v WITH(NOLOCK)
          ON product.MerchantSysNo = v.SysNo
        WHERE soItem.SOSysNo = @SOSysNo 
         AND (v.VendorType = 0  OR (v.VendorType = 1 AND EXISTS
        (
			     SELECT ProductSysNo FROM OverseaOrderManagement.dbo.SO_Item_Extension sie WITH(NOLOCK)
            WHERE sie.SoSysNo = soItem.SOSysNo AND sie.Type='G'  AND  soItem.ProductSysNo = sie.ProductSysNo 
        )))
			]]>
    </commandText>
    <parameters>
      <param name="@SOSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Sync.GetItemRMA" database="CPS" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
	        refundItem.RefundCash + (refundItem.RefundPoint/10.0) + refundItem.OrgGiftCardAmt AS Price,
	        1 AS Quantity,
	        product.SysNo AS ProductSysNo,
	        c2.C1SysNo,
	        Percentage = (
          CASE WHEN EXISTS
          (SELECT ProductSysNo FROM OverseaOrderManagement.dbo.SO_Item_Extension sie WITH(NOLOCK)
            WHERE sie.SoSysNo = refund.SOSysNo AND sie.Type='G'  AND  product.SysNo = sie.ProductSysNo) 
            THEN 0.01 ELSE CASE WHEN cp.Percentage IS NOT NULL THEN cp.Percentage 
                         ELSE (SELECT TOP(1) Percentage FROM CPS.dbo.CommissionPercentage WITH(NOLOCK) WHERE IsDefault = 'Y')
                         END 
            END)
        FROM IPP3.dbo.RMA_Refund_Item refundItem WITH(NOLOCK)
        INNER JOIN IPP3.dbo.RMA_Refund refund WITH(NOLOCK)
          ON refundItem.RefundSysNo = refund.SysNo
        INNER JOIN IPP3.dbo.RMA_Register register WITH(NOLOCK)
          ON register.SysNo = refundItem.RegisterSysNo
        INNER JOIN IPP3.dbo.Product product WITH(NOLOCK)
          ON product.SysNo = register.ProductSysNo
        INNER JOIN IPP3.dbo.Category3 c3 WITH(NOLOCK)
          ON product.C3SysNo = c3.SysNo
        INNER JOIN IPP3.dbo.Category2 c2 WITH(NOLOCK)
          ON c2.SysNo = c3.C2SysNo
        LEFT JOIN CPS.dbo.CommissionPercentage cp WITH(NOLOCK)
          ON cp.Category1SysNo = c2.C1SysNo
        LEFT JOIN IPP3.dbo.Vendor v WITH(NOLOCK)
          ON product.MerchantSysNo = v.SysNo
        WHERE refundItem.RefundSysNo = @RefundSysNo
         AND (v.VendorType = 0 OR (v.VendorType = 1 AND EXISTS
        (
			     SELECT ProductSysNo FROM OverseaOrderManagement.dbo.SO_Item_Extension sie WITH(NOLOCK)
            WHERE sie.SoSysNo = refund.SOSysNo AND sie.Type='G'  AND  product.SysNo = sie.ProductSysNo  
        )))
			]]>
    </commandText>
    <parameters>
      <param name="@RefundSysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Sync.CreateCommissionSettlementItem" database="CPS" commandType="Text">
    <commandText>
      <![CDATA[
        INSERT INTO CPS.dbo.CommissionSettlement_Item
        (
	        CommissionSettlementSysNo,
	        OrderSysNo,
	        Status,
	        OrderDate,
	        OrderAmt,
	        Type,
	        UserSysNo,
	        ChannelSysNo,
	        CommissionAmt,
          SubSource,
	        InUser,
	        InDate
        )
        VALUES
        (
	        NULL,
	        @OrderSysNo,
	        @Status,
	        @OrderDate,
	        @OrderAmt,
	        @Type,
	        @UserSysNo,
	        @ChannelSysNo,
	        @CommissionAmt,
          @SubSource,
	        @InUser,
	        GETDATE()
        )        
			]]>
    </commandText>
    <parameters>
      <param name="@OrderSysNo" dbType="Int32" />
      <param name="@Status" dbType="String" />
      <param name="@OrderDate" dbType="DateTime" />
      <param name="@OrderAmt" dbType="Decimal" />
      <param name="@Type" dbType="String" />
      <param name="@UserSysNo" dbType="Int32" />
      <param name="@ChannelSysNo" dbType="Int32" />
      <param name="@CommissionAmt" dbType="Decimal" />
      <param name="@SubSource" dbType="String" />
      <param name="@InUser" dbType="String" />



    </parameters>
  </dataCommand>

  <dataCommand name="Sync.UpdateCommissionSettlementItem" database="CPS" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE CPS.dbo.CommissionSettlement_Item
        SET 
          OrderAmt = @OrderAmt,
	        CommissionAmt = @CommissionAmt,
	        EditUser = @EditUser,
	        EditDate = GETDATE()
        WHERE SysNo = @SysNo       
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@OrderAmt" dbType="Decimal" />
      <param name="@CommissionAmt" dbType="Decimal" />
      <param name="@EditUser" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="Sync.CreateCommissionSettlement" database="CPS" commandType="Text">
    <commandText>
      <![CDATA[
        INSERT INTO CPS.dbo.CommissionSettlement(
          UserSysNo,
          CommissionToCashRecordSysNo,
          Status,
          SettledBeginDate,
          SettledEndDate,
          CommissionAmt,
          ConfirmCommissionAmt,
          SettledTime,
          PaidTime,
          InUser,
          InDate
        )
        VALUES(
          @UserSysNo,
          NULL,
          'S',
          @SettledBeginDate,
          @SettledEndDate,
          NULL,
          NULL,
          @SettledTime,
          NULL,
          @InUser,
          GETDATE()
        );

        DECLARE @SysNo INT
        SELECT @SysNo=SCOPE_IDENTITY();
        SELECT CASE WHEN @SysNo is null THEN 0 else @SysNo END     
			]]>
    </commandText>
    <parameters>
      <param name="@UserSysNo" dbType="Int32" />
      <param name="@SettledBeginDate" dbType="DateTime" />
      <param name="@SettledEndDate" dbType="DateTime" />
      <param name="@SettledTime" dbType="DateTime" />
      <param name="@InUser" dbType="String" />
    </parameters>
  </dataCommand>

  <dataCommand name="Sync.UpdateCommissionSettlement" database="CPS" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE CPS.dbo.CommissionSettlement
        SET
	        CommissionAmt = @CommissionAmt,
	        ConfirmCommissionAmt = @CommissionAmt
        WHERE SysNo = @SysNo
			]]>
    </commandText>
    <parameters>
      <param name="@SysNo" dbType="Int32" />
      <param name="@CommissionAmt" dbType="Decimal" />
    </parameters>
  </dataCommand>

  <dataCommand name="Sync.VoidCommissionSettlementItem" database="CPS" commandType="Text">
    <commandText>
      <![CDATA[
        --Void Item
        UPDATE TOP(@SyncCount) cpsCommItem
        SET cpsCommItem.Status = 'V'
        FROM CPS.dbo.CommissionSettlement_Item cpsCommItem WITH(NOLOCK)
        INNER JOIN IPP3.dbo.SO_Master soMaster WITH(NOLOCK)
          ON soMaster.SysNo = cpsCommItem.OrderSysNo AND cpsCommItem.Type = 'SO'
        WHERE soMaster.Status < 0 AND cpsCommItem.Status = 'U'

        UPDATE TOP(@SyncCount) cpsCommItem
        SET cpsCommItem.Status = 'V'
        FROM CPS.dbo.CommissionSettlement_Item cpsCommItem WITH(NOLOCK)
        INNER JOIN IPP3.dbo.RMA_Refund rmaRefund WITH(NOLOCK)
          ON rmaRefund.SysNo = cpsCommItem.OrderSysNo AND cpsCommItem.Type = 'RMA' 
        WHERE rmaRefund.Status < 0 AND cpsCommItem.Status = 'U'
			]]>
    </commandText>
    <parameters>
      <param name="@SyncCount" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="Sync.UpdateCommissionSettlementItemOrder" database="CPS" commandType="Text">
    <commandText>
      <![CDATA[
        UPDATE TOP(@SyncCount) cpsCommItem
        SET cpsCommItem.OrderDate = soMaster.OutTime
        FROM CPS.dbo.CommissionSettlement_Item cpsCommItem WITH(NOLOCK)
        INNER JOIN IPP3.dbo.SO_Master soMaster WITH(NOLOCK)
          ON soMaster.SysNo = cpsCommItem.OrderSysNo AND cpsCommItem.Type = 'SO' 
        WHERE soMaster.Status >= 4 
          AND cpsCommItem.Status = 'U'
          AND (
  	           cpsCommItem.OrderDate IS NULL AND soMaster.OutTime IS NOT NULL 
  	        OR cpsCommItem.OrderDate <> soMaster.OutTime 
          )

        UPDATE TOP(@SyncCount) cpsCommItem
        SET cpsCommItem.OrderDate = rmaRefund.RefundTime 
        FROM CPS.dbo.CommissionSettlement_Item cpsCommItem WITH(NOLOCK)
        INNER JOIN IPP3.dbo.RMA_Refund rmaRefund WITH(NOLOCK)
          ON rmaRefund.SysNo = cpsCommItem.OrderSysNo AND cpsCommItem.Type = 'RMA' 
        WHERE rmaRefund.Status = 2 
          AND cpsCommItem.Status = 'U'
          AND (
  	           cpsCommItem.OrderDate IS NULL AND rmaRefund.RefundTime IS NOT NULL 
  	        OR cpsCommItem.OrderDate <> rmaRefund.RefundTime 
          )
			]]>
    </commandText>
    <parameters>
      <param name="@SyncCount" dbType="Int32" />
    </parameters>
  </dataCommand>
</dataOperations>