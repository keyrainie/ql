<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
  <dataCommand name="InsertToSendEmail" database="MailDB" commandType="Text">
    <commandText>
      <![CDATA[
				INSERT INTO [MailDB].[dbo].[AsyncEmail_Internal]
        (
         [MailAddress]
         ,[MailSubject]
         ,[MailBody]
         ,Status
         ,Priority
				 ,CompanyCode
				 ,LanguageCode
				 ,StoreCompanyCode
        )
				values
				(
				 @MailAddress,
				 @MailSubject,
				 @MailBody,
				 0,
				 1,
				 @CompanyCode,
				 @LanguageCode,
				 @StoreCompanyCode
				)
			]]>
    </commandText>
    <parameters>
      <param name="@MailAddress" dbType="String"/>
      <param name="@MailSubject" dbType="String"/>
      <param name="@MailBody" dbType="String"/>
      <param name="@CompanyCode" dbType="String"/>      
      <param name="@LanguageCode" dbType="String"/>
      <param name="@StoreCompanyCode" dbType="String"/>
    </parameters>
  </dataCommand>

  <!--BEGIN WMS错误报警-->
  <dataCommand name="WMS_GetMailToSend" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE OverseaPOASNManagement.dbo.POSSB_Log
      SET SendErrMail = 'P'
      WHERE ErrMSg IS NOT NULL
      AND SendErrMail = 'N' ;
      
      WITH XMLNAMESPACES(DEFAULT 'http://soa.newegg.com/SOA/USA/InfrastructureService/V30/PubSubService')
      
		  SELECT  
            ErrMSg.value('(/Publish/Node/body/PONumber)[1]','int') AS PONumber
           ,ErrMSg.value('(/Publish/Node/body/ActionType)[1]','nvarchar(10)') AS ActionType
           ,ErrMSg.value('(/Publish/Node/body/ErrorDescription)[1]','nvarchar(max)') AS ErrorDescription           
      FROM OverseaPOASNManagement.dbo.POSSB_Log WITH(NOLOCK)
      WHERE ErrMSg IS NOT NULL
      AND SendErrMail = 'P' ;
		  ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="WMS_UpdateSentMail" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
      UPDATE OverseaPOASNManagement.dbo.POSSB_Log
      SET SendErrMail = 'Y'
      WHERE SendErrMail = 'P'
		  ]]>
    </commandText>
  </dataCommand>
  <!--END WMS错误报警-->

  <!--BEGIN PayType错误报警-->
  <dataCommand name="PayType_GetMailToSend" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT so.OrderSysNo
	         ,data.PayTerms
	         ,PayTerms.CustDescription
	         ,data.PayedAmt
	         ,data.PayedDate   
      FROM OverseaInvoiceReceiptManagement.dbo.V_IM_SOIncomeSO SO WITH(NOLOCK)
      INNER JOIN OverseaInvoiceReceiptManagement.dbo.AccountCheckImportData data WITH(NOLOCK)
	      ON data.SOSysNo = so.orderSysno
	      AND so.ordertype =1
      LEFT JOIN OverseaInvoiceReceiptManagement.dbo.SAPMapping_IPPUser PayTerms WITH (NOLOCK)
	      ON  so.paytypesysno = PayTerms.PayType
      WHERE PayTypeSysNo NOT in (SELECT PayTerms.PayType FROM OverseaInvoiceReceiptManagement.dbo.SAPMapping_IPPUser PayTerms
      WHERE UpLoadSAPType = 1)
      AND PayTypeSysNo <> data.PayTermsNo
      AND datediff(day,data.PayedDate,getdate()) < 2
		  ]]>
    </commandText>
  </dataCommand>
  <!--END PayType错误报警-->

  <!--代销转财务记录异常数据报警-->
  <dataCommand name="Consign_GetMailToSend" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT consign.SysNo
	         ,consign.ProductSysNo
	         ,product.ProductID
	         ,consign.VendorSysNo	   	   
      FROM ipp3.dbo.POConsign_ToAccLog consign WITH(nolock)
      LEFT JOIN ipp3.dbo.Product product WITH(nolock)
      ON consign.ProductSysNo = product.sysno
      WHERE consign.CompanyCode IS NULL
      OR consign.SettleType IS NULL
		  ]]>
    </commandText>
  </dataCommand>
  <!--代销转财务记录异常数据报警-->

  <!--客户余额日志不符-->
  <dataCommand name="Invoice_CustomerPrepayLog" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT  
          customer.SysNo,
          customer.ValidPrepayAmt,
          a.Amt 
        FROM  IPP3.dbo.Customer customer
        INNER JOIN 
        (
	        SELECT CustomerSysNo,SUM(PrepayAmt) Amt 
	        FROM IPP3.dbo.Customer_PrepayLog
	        WHERE Status='a'
	        GROUP BY CustomerSysNo 
	        HAVING SUM(PrepayAmt)<>0
        ) a
          ON customer.SysNo = a.CustomerSysNo
        WHERE customer.ValidPrepayAmt <> a.amt
		  ]]>
    </commandText>
  </dataCommand>
  <!--客户余额日志不符-->

  <!--客户余额为负-->
  <dataCommand name="Invoice_CustomerBalance" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT @TotalCount = COUNT(1),
               @TotalAmt = SUM(ValidPrepayAmt)        
        FROM (SELECT
        c.SysNo,
        c.ValidPrepayAmt,
        a.Amt
        FROM IPP3.dbo.Customer c with(nolock)
        INNER JOIN
        (
        SELECT
        CustomerSysNo,
        SUM(PrepayAmt) Amt
        FROM IPP3.dbo.Customer_PrepayLog with(nolock)
        WHERE Status='a'
        GROUP BY CustomerSysNo having SUM(PrepayAmt)<>0
        ) a
        ON c.SysNo=a.CustomerSysNo
        WHERE c.ValidPrepayAmt < 0) as temp
      
        SELECT
        c.SysNo,
        c.ValidPrepayAmt,
        a.Amt
        FROM IPP3.dbo.Customer c with(nolock)
        INNER JOIN
        (
        SELECT
        CustomerSysNo,
        SUM(PrepayAmt) Amt
        FROM IPP3.dbo.Customer_PrepayLog with(nolock)
        WHERE Status='a'
        GROUP BY CustomerSysNo having SUM(PrepayAmt)<>0
        ) a
        ON c.SysNo=a.CustomerSysNo
        WHERE c.ValidPrepayAmt < 0
		  ]]>
    </commandText>
  </dataCommand>
  <!--客户余额为负-->

  <!--收款单重复-->
  <dataCommand name="Invoice_SOIncomeRepeat" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT 
          OrderType ,
          OrderSysNo,
          COUNT(1) RepeatCount
        FROM IPP3.dbo.Finance_SOIncome WITH(NOLOCK)
        WHERE Status IN(0,1)
        GROUP BY OrderType,OrderSysNo
        HAVING COUNT(1) > 1
        ORDER BY OrderType,OrderSysNo
		  ]]>
    </commandText>
  </dataCommand>
  <!--收款单重复-->

  <!--应付款重复-->
  <dataCommand name="Invoice_FinancePayRepeat" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT
            OrderSysNo,
            OrderType,
            BatchNumber,
            COUNT(1) AS RepeatCount
          FROM IPP3.dbo.Finance_Pay WITH(NOLOCK)
          WHERE PayStatus IN(0,1,2) AND OrderDate > '2009-01-01'
          GROUP BY OrderSysNo,OrderType,BatchNumber
          HAVING COUNT(1) > 1
          ORDER BY OrderType,OrderSysNo,BatchNumber
		  ]]>
    </commandText>
  </dataCommand>
  <!--应付款重复-->

  <!--积分获取重复-->
  <dataCommand name="Invoice_PointObtainRepeat" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
            SELECT 
              CustomerSysNo,
              Point,
              ObtainType,
              SoSysNo,
              Memo,
              InUser,
              InDate,
              COUNT(1) AS RepeatCount
            FROM OverseaInvoiceReceiptManagement.dbo.Point_Obtain WITH(NOLOCK)
            WHERE Status IN('A') AND Point <> 0
            GROUP BY CustomerSysNo,Point,ObtainType,SoSysNo,Memo,InUser,InDate
            HAVING COUNT(1) > 1
		  ]]>
    </commandText>
  </dataCommand>
  <!--积分获取重复-->

  <!--订单金额拆分监控-->
  <dataCommand name="Order_SplitSOAmt" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT
             so.SysNo
            ,so.SOAmt
            ,subSO.SOAmt AS SubSOAmt
            ,so.CashPay
            ,subso.CashPay AS subCashPay
            ,so.OrderDate
          FROM IPP3.dbo.SO_Master so WITH(NOLOCK)
          INNER JOIN
          ( 
            SELECT
               SOSysNo AS SOSysNo
              ,SUM(CashPay) AS CashPay
              ,SUM(SoAmt) AS SOAmt
              ,SUM(PointPay) AS PointPay
              ,SUM(Promotion) AS Promotion
              ,SUM(ReceivableAmt) AS ReceivableAmt
              ,SUM(ShippingCharge) AS ShippingCharge
              ,SUM(PayPrice) AS PayPrice
              ,SUM(PremiumAmt) AS PremiumAmt
              ,SUM(Discount) AS Discount
              ,SUM(PrepayAmt) AS PrepayAmt
              ,SUM(GiftCardPay) AS GiftCardPay
            FROM OverseaOrderManagement.dbo.Sub_SO_Master WITH(NOLOCK)
            GROUP BY SOSysNo
          ) AS subSO
            ON so.SysNo=subSO.SOSysNo
          WHERE
          (
            so.SOAmt<>subso.SOAmt
            OR abs(so.CashPay-subso.CashPay)>0.02
            OR so.PointPay<>(-subso.PointPay)*10
            OR so.ShipPrice<>subso.ShippingCharge
            OR so.PayPrice<>subso.PayPrice
            OR so.PremiumAmt<>subso.PremiumAmt
            OR so.DiscountAmt<>subso.Discount
            OR so.PrepayAmt<>-subso.PrepayAmt
            OR so.GiftCardPay<>-subso.GiftCardPay
          )
          AND DateDiff(mm,so.OrderDate,getdate())<=3
          AND so.Status > 0
          Order By so.OrderDate DESC
		  ]]>
    </commandText>
  </dataCommand>
  <!--订单金额拆分监控-->

  <!--订单InvoiceAmt监控-->
  <dataCommand name="Order_InvoiceAmt" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT TOP 500 
              sm.SysNo 
             ,subso.subInvoiceAmt AS SubInvoiceAmt 
             ,sm.cashPay+sm.premiumAmt+sm.ShipPrice+sm.payPrice+sm.DiscountAmt-sm.GiftCardPay AS SOInvoiceAmt 
             ,sm.AuditTime 
          FROM ipp3.dbo.SO_Master sm WITH(NOLOCK) 
          INNER JOIN ( 
              SELECT  
                  SOSysNo AS SOSysNo 
                 ,SUM(InvoiceAmt) AS subInvoiceAmt 
              FROM [OverseaOrderManagement].[dbo].[Sub_SO_Master] WITH(NOLOCK) 
              GROUP BY [SOSysNo] 
           ) AS  subso 
              ON sm.SysNo=subso.SOSysNo 
          LEFT JOIN ipp3.dbo.SO_CheckShipping sc WITH(nolock)
                   ON sm.SysNo = sc.SOSysNo
          WHERE 
              DateDiff(mm,sm.AuditTime,GETDATE())<=3 
              AND abs(sm.cashPay+sm.premiumAmt+sm.ShipPrice+sm.payPrice+sm.DiscountAmt-sm.GiftCardPay-subso.subInvoiceAmt)>0.1 
              AND sm.status>0 
              AND sm.Status!=3 
              AND sm.Status!=2
              AND sc.SOType!=6   
              AND sc.SOType!=9   --联通合约机
              AND sc.InvoiceType='NEG'
          ORDER BY sm.AuditTime DESC
		  ]]>
    </commandText>
  </dataCommand>
  <!--订单InvoiceAmt监控-->

  <!--客户余额报表-->
  <dataCommand name="Get_Customer_PrepayAmt" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
            SELECT 
	            temp.CustomerSysNo,
	            cust.CustomerID,
	            temp.Amt
            FROM
            (
	            SELECT CustomerSysNo,sum(PrepayAmt) Amt 
	            FROM ipp3.dbo.Customer_PrepayLog WITH(nolock)
	            WHERE Status = 'A'
              AND  CreateTime < DATEADD(mm,DATEDIFF(mm,0,GETDATE()),0)
	            GROUP BY CustomerSysNo
	            HAVING sum(PrepayAmt) <> 0
            ) AS temp
            LEFT JOIN ipp3.dbo.Customer cust WITH(nolock)
            ON temp.CustomerSysNo = cust.SysNo
            ORDER BY temp.CustomerSysNo
		  ]]>
    </commandText>
  </dataCommand>
  <!--客户余额报表-->

  <!--礼品卡月报-->
  <dataCommand name="Get_GiftCart_Amt" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
            SELECT 
	            @totalamount =  Cast(isnull(sum(isnull(totalamount,0)),0) AS decimal(12,2))
	            ,@AvailAmount = Cast(isnull(sum(isnull(AvailAmount,0)),0) AS decimal(12,2))
	            ,@consumedAmt = Cast((isnull(sum(isnull(totalamount,0)),0) - isnull(sum(isnull(AvailAmount,0)),0)) AS decimal(12,2))
            FROM OverseaECommerceManagement.dbo.GiftCardInfo WITH(nolock)
            WHERE BeginDate>= DATEADD(mm,DATEDIFF(mm,0,GETDATE())-1,0)
            AND BeginDate< DATEADD(mm,DATEDIFF(mm,0,GETDATE()),0)
            
            SELECT sm.SysNo AS SOSysNO,sm.SOAmt 
            FROM ipp3.dbo.SO_Master sm WITH(nolock)
            LEFT JOIN ipp3.dbo.SO_CheckShipping sc WITH(nolock) ON sm.SysNo = sc.SOSysNo 
            WHERE
              sc.SOType IN (4,5)
              AND sm.Status = 4
             AND sm.OutTime>=DATEADD(mm,DATEDIFF(mm,0,GETDATE())-1,0)
             AND sm.OutTime<DATEADD(mm,DATEDIFF(mm,0,GETDATE()),0)
		  ]]>
    </commandText>
  </dataCommand>
  <!--礼品卡月报-->

  <!--快钱通知-->
  <dataCommand name="Get_KQ_SO" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT @OrderDate = dateadd(dd,datediff(dd,0,getdate()-1),0);
      
        SELECT
            sm.SysNo --订单编号
           ,c.CustomerName --订货人姓名
           ,c.Phone --订货人手机号码
           ,sc.CustomerIPAddress --下单IP地址
           ,sm.ReceiveContact --收货人姓名
           ,sm.ReceivePhone --收货人固话
           ,sm.ReceiveCellPhone --收货人手机号码
           ,(ISNULL(A.ProvinceName,'') + ISNULL(A.CityName,'') +ISNULL(A.DistrictName,'') + sm.ReceiveAddress) AS ReceiveAddress --收货人具体地址
           ,sm.ReceiveZip -- 收货人邮编
           ,si.BriefName --商品名称
           ,si.Price --商品金额
           ,si.Quantity --商品数量
           ,st.ShipTypeName --配送方式
           ,(isnull(SM.cashpay,0) + isnull(SM.premiumamt,0) + isnull(SM.shipprice,0) + isnull(SM.payprice,0) + isnull(SM.DiscountAmt,0) - isnull(SM.GiftCardPay,0) -isnull(SM.PrePayAmt,0)) AS SOAmt --订单金额
        FROM ipp3.dbo.SO_Master sm WITH(NOLOCK)
		    INNER JOIN ipp3.dbo.Finance_NetPay fnp WITH(NOLOCK)
            ON sm.SysNo=fnp.SOSysNo
        LEFT JOIN ipp3.dbo.SO_Item si WITH(NOLOCK)
            ON sm.SysNo = si.SOSysNo
        LEFT JOIN ipp3.dbo.Customer c WITH(NOLOCK)
            ON sm.CustomerSysNo = c.SysNo 
        LEFT JOIN ipp3.dbo.SO_CheckShipping sc WITH(NOLOCK) 
            ON sm.SysNo = sc.SOSysNo
        LEFT JOIN ipp3.dbo.ShipType st WITH(NOLOCK)
            ON sm.ShipTypeSysNo = st.SysNo
        LEFT JOIN IPP3.DBO.Area A WITH(NOLOCK)
            ON SM.ReceiveAreaSysNo = A.SysNo
        WHERE
            sm.PayTypeSysNo = 46
            AND sm.Status = 0
            AND fnp.InputTime >= @OrderDate
            AND fnp.InputTime < dateadd(dd,datediff(dd,0,getdate()),0)
		  ]]>
    </commandText>
  </dataCommand>
  <!--快钱通知-->

  <!--SAP 应付上传数据监控-->
    <dataCommand name="SAP_LEGPurchaseCheck" database="SAP" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT 
        CONVERT(NVARCHAR(10), p.OrderDate, 120) AS OrderDate,
        SunccessAmt = ISNULL((
  	        SELECT SUM(PayableAmt)
  	        FROM sap.dbo.LEG_Purchase WITH(NOLOCK)
  	        WHERE Status = 's'
  	        GROUP BY CONVERT(NVARCHAR(10), OrderDate, 120)
  	        HAVING CONVERT(NVARCHAR(10), OrderDate, 120) = CONVERT(NVARCHAR(10), p.OrderDate, 120)
        ),0),
        ErrorAmt = ISNULL((
  	        SELECT SUM(PayableAmt)
  	        FROM sap.dbo.LEG_Purchase WITH(NOLOCK)
  	        WHERE Status = 'e'
  	        GROUP BY CONVERT(NVARCHAR(10), OrderDate, 120)
  	        HAVING CONVERT(NVARCHAR(10), OrderDate, 120) = CONVERT(NVARCHAR(10), p.OrderDate, 120)
        ),0),
        NoResposeAmt = ISNULL((
  	        SELECT SUM(PayableAmt)
  	        FROM sap.dbo.LEG_Purchase WITH(NOLOCK)
  	        WHERE Status = 'x'
  	        GROUP BY CONVERT(NVARCHAR(10), OrderDate, 120)
  	        HAVING CONVERT(NVARCHAR(10), OrderDate, 120) = CONVERT(NVARCHAR(10), p.OrderDate, 120)
        ),0),
        OtherAmt = ISNULL((
  	        SELECT SUM(PayableAmt)
  	        FROM sap.dbo.LEG_Purchase WITH(NOLOCK)
  	        WHERE Status NOT in( 'e','x','s' )
  	        GROUP BY CONVERT(NVARCHAR(10), OrderDate, 120)
  	        HAVING CONVERT(NVARCHAR(10), OrderDate, 120) = CONVERT(NVARCHAR(10), p.OrderDate, 120)
        ),0),
        TotalAmt = ISNULL((
  	        SELECT SUM(PayableAmt)
  	        FROM sap.dbo.LEG_Purchase WITH(NOLOCK)
  	        GROUP BY CONVERT(NVARCHAR(10), OrderDate, 120)
  	        HAVING CONVERT(NVARCHAR(10), OrderDate, 120) = CONVERT(NVARCHAR(10), p.OrderDate, 120)
        ),0)
      FROM sap.dbo.LEG_Purchase p WITH(NOLOCK)
      WHERE p.OrderDate >= DATEADD(mm,DATEDIFF(mm,0,GETDATE()),0)
        AND p.OrderDate < DATEADD(day,-2,CONVERT(NVARCHAR(10),GETDATE(),120))
      GROUP BY CONVERT(NVARCHAR(10), p.OrderDate, 120)
      ORDER BY CONVERT(NVARCHAR(10), p.OrderDate, 120)
		  ]]>
    </commandText>
  </dataCommand>
  <!--SAP 应付上传数据监控-->

  <!--SAP EIMS上传数据监控-->
  <dataCommand name="SAP_LEGEIMSCheck" database="SAP" commandType="Text">
    <commandText>
      <![CDATA[
                    SELECT 
        CONVERT(NVARCHAR(10), p.OrderDate, 120) AS OrderDate,
        SunccessAmt = (
        	SELECT ISNULL(SUM(ReceiveAmt),0) FROM
        	(
        		SELECT  ReceiveAmt    
  				FROM sap.dbo.LEG_EIMS WITH(NOLOCK)
  				WHERE Status = 'S'
  				GROUP BY CONVERT(NVARCHAR(10), OrderDate, 120),InvoiceNumber,ReceiveAmt
  				HAVING CONVERT(NVARCHAR(10), OrderDate, 120) = CONVERT(NVARCHAR(10), p.OrderDate, 120)
			)RESULT
        ),
        ErrorAmt = (
        	SELECT ISNULL(SUM(ReceiveAmt),0) FROM
        	(
        		SELECT  ReceiveAmt    
  				FROM sap.dbo.LEG_EIMS WITH(NOLOCK)
  				WHERE Status = 'E'
  				GROUP BY CONVERT(NVARCHAR(10), OrderDate, 120),InvoiceNumber,ReceiveAmt
  				HAVING CONVERT(NVARCHAR(10), OrderDate, 120) = CONVERT(NVARCHAR(10), p.OrderDate, 120)
			)RESULT
        ),
        NoResposeAmt  = (
        	SELECT ISNULL(SUM(ReceiveAmt),0) FROM
        	(
        		SELECT  ReceiveAmt    
  				FROM sap.dbo.LEG_EIMS WITH(NOLOCK)
  				WHERE Status = 'X'
  				GROUP BY CONVERT(NVARCHAR(10), OrderDate, 120),InvoiceNumber,ReceiveAmt
  				HAVING CONVERT(NVARCHAR(10), OrderDate, 120) = CONVERT(NVARCHAR(10), p.OrderDate, 120)
			)RESULT
        ),
        OtherAmt = (
        	SELECT ISNULL(SUM(ReceiveAmt),0) FROM
        	(
        		SELECT  ReceiveAmt    
  				FROM sap.dbo.LEG_EIMS WITH(NOLOCK)
  				WHERE Status NOT IN('S','E','X')
  				GROUP BY CONVERT(NVARCHAR(10), OrderDate, 120),InvoiceNumber,ReceiveAmt
  				HAVING CONVERT(NVARCHAR(10), OrderDate, 120) = CONVERT(NVARCHAR(10), p.OrderDate, 120)
			)RESULT
        ),
        TotalAmt = (
        	SELECT ISNULL(SUM(ReceiveAmt),0) FROM
        	(
        		SELECT  ReceiveAmt    
  				FROM sap.dbo.LEG_EIMS WITH(NOLOCK)
  				GROUP BY CONVERT(NVARCHAR(10), OrderDate, 120),InvoiceNumber,ReceiveAmt
  				HAVING CONVERT(NVARCHAR(10), OrderDate, 120) = CONVERT(NVARCHAR(10), p.OrderDate, 120)
			)RESULT
        )
      FROM sap.dbo.LEG_EIMS p WITH(NOLOCK)
      WHERE p.OrderDate >= DATEADD(mm,DATEDIFF(mm,0,GETDATE()),0)
        AND p.OrderDate < DATEADD(day,-2,CONVERT(NVARCHAR(10),GETDATE(),120))
      GROUP BY CONVERT(NVARCHAR(10), p.OrderDate, 120)
      ORDER BY CONVERT(NVARCHAR(10), p.OrderDate, 120)
		  ]]>
    </commandText>
  </dataCommand>
  <!--SAP EIMS上传数据监控-->
  
  <!--在线支付拆单异常监控-->
  <dataCommand name="Invoice_NetPay" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
        --在线支付拆单异常
        SELECT 
          a.SysNo, 
          a.OrderDate 
        FROM ipp3.dbo.Finance_NetPay fnp WITH(NOLOCK)
        RIGHT JOIN(
          SELECT sm.sysno,sm.orderdate FROM  ipp3.dbo.SO_Master sm WITH(NOLOCK)
          INNER JOIN ipp3.dbo.PayType pt WITH(NOLOCK)
          ON sm.PayTypeSysNo=pt.SysNo
          WHERE sm.[Status]=-6 
            AND pt.IsPayWhenRecv = 0 
            AND PayTypeSysNo NOT IN (6,7)
        ) a
        ON  fnp.MasterSoSysNo=a.sysno 
        GROUP BY a.sysno, a.orderdate having count(fnp.SysNo)=0
        ORDER BY a.orderdate
		  ]]>
    </commandText>
  </dataCommand>
  <!--在线支付拆单异常监控-->

  <!--邮局电汇拆单异常-->
  <dataCommand name="Invoice_PostPay" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
          --邮局电汇拆单异常
          SELECT
            a.SysNo,
            a.OrderDate
          FROM ipp3.dbo.Finance_PostPay fpp WITH(NOLOCK)
          RIGHT JOIN (
            SELECT sm.sysno,sm.orderdate FROM  ipp3.dbo.SO_Master sm WITH(NOLOCK)
            INNER JOIN ipp3.dbo.PayType pt WITH(NOLOCK)
            ON sm.PayTypeSysNo=pt.SysNo
            WHERE sm.[Status]=-6 AND pt.IsPayWhenRecv=0 AND PayTypeSysNo IN (6,7)
          ) a
          ON  fpp.MasterSoSysNo=a.sysno
          GROUP BY a.sysno, a.orderdate having count(fpp.SysNo)=0
          ORDER BY a.orderdate
		  ]]>
    </commandText>
  </dataCommand>
  <!--邮局电汇拆单异常-->

  <!--锁定供应商列表-->
  <dataCommand name="LockedVendorList" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT @CurrentDate = GETDATE();
            
      SELECT lockPayItem.VendorSysNo,
             lockPayItem.VendorName,
             lockPayItem.VendorConsign,
             lockPayItem.OrderID,
             lockPayItem.OrderType,
             lockPayItem.PayAmt,
             lockPayItem.LockTime,
             lockPayItem.LockUserName,
             lockPayItem.PMUserName
      FROM   (
                 SELECT Vendor.SysNo AS VendorSysNo,
                        vendor.VendorName,
                        CASE 
                             WHEN vendor.IsConsign = 0 THEN '经销'
                             WHEN vendor.IsConsign = 1 THEN '代销'
                             WHEN vendor.IsConsign = 3 THEN '代收'
                             ELSE '其他'
                        END AS VendorConsign,
                        '采购单' AS OrderType,
                        po.poid + '-' + REPLICATE(0, 2 -LEN(CAST(pay.BatchNumber AS CHAR(2))))
                        + CAST(pay.BatchNumber AS CHAR(2)) AS OrderID,
                        ISNULL(payitem.PayAmt, 0) AS PayAmt,
                        CONVERT(NVARCHAR(10), payitem.EditTime, 111) AS LockTime,
                        sysUser.DisplayName AS LockUserName,
                        pmUser.DisplayName AS PMUserName
                 FROM   IPP3.dbo.Finance_Pay_Item payitem WITH (NOLOCK)
                        INNER JOIN ipp3.dbo.Finance_Pay_Ex fpe WITH (NOLOCK)
                             ON  payitem.SysNo = fpe.PayItemSysNo
                        INNER JOIN ipp3.dbo.Finance_Pay pay WITH (NOLOCK)
                             ON  fpe.PaySysNo = pay.SysNo
                        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo sysUser WITH (NOLOCK)
                             ON  payitem.EditUser = sysUser.UserSysNo
                        LEFT JOIN OverseaPOASNManagement.dbo.V_PM_POPayStock po WITH (NOLOCK)
                             ON  pay.OrderSysNo = po.SysNo
                        LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList vendor 
                             WITH (NOLOCK)
                             ON  po.VendorSysNo = vendor.SysNo
                        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo pmUser WITH (NOLOCK)
                             ON  po.pmsysno = pmUser.UserSysNo
                 WHERE  pay.OrderType = 0
                        AND payitem.[Status] = 2 
                 UNION ALL 
                 SELECT vendor.Sysno AS VendorSysNo,
                        vendor.VendorName,
                        CASE 
                             WHEN vendor.IsConsign = 0 THEN '经销'
                             WHEN vendor.IsConsign = 1 THEN '代销'
                             WHEN vendor.IsConsign = 3 THEN '代收'
                             ELSE '其他'
                        END AS VendorConsign,
                        '代销结算单' AS OrderType,
                        vendorsettle.SettleID AS OrderID,
                        ISNULL(payitem.PayAmt, 0) AS PayAmt,
                        CONVERT(NVARCHAR(10), payitem.EditTime, 111) AS LockTime,
                        sysUser.DisplayName AS LockUserName,
                        pmUser.DisplayName AS PMUserName
                 FROM   IPP3.dbo.Finance_Pay_Item payitem WITH (NOLOCK)
                        INNER JOIN ipp3.dbo.Finance_Pay_Ex fpe WITH (NOLOCK)
                             ON  payitem.SysNo = fpe.PayItemSysNo
                        INNER JOIN ipp3.dbo.Finance_Pay pay WITH (NOLOCK)
                             ON  fpe.PaySysNo = pay.SysNo
                        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo sysUser WITH (NOLOCK)
                             ON  payitem.EditUser = sysUser.UserSysNo
                        LEFT JOIN IPP3.dbo.POConsign_Settle vendorsettle WITH (NOLOCK)
                             ON  pay.OrderSysNo = vendorsettle.SysNo
                        LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList vendor 
                             WITH (NOLOCK)
                             ON  vendorsettle.VendorSysNo = vendor.SysNo
                        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo pmUser WITH (NOLOCK)
                             ON  vendorsettle.PMSysno = pmUser.UserSysNo
                 WHERE  pay.OrderType = 1
                        AND payitem.[Status] = 2 
                 UNION	ALL 	
                 SELECT vendor.Sysno AS VendorSysNo,
                        vendor.VendorName,
                        CASE 
                             WHEN vendor.IsConsign = 0 THEN '经销'
                             WHEN vendor.IsConsign = 1 THEN '代销'
                             WHEN vendor.IsConsign = 3 THEN '代收'
                             ELSE '其他'
                        END AS VendorConsign,
                        '代收结算单' AS OrderType,
                        CONVERT(VARCHAR, collectionSettle.SysNo) AS OrderID,
                        payitem.PayAmt,
                        CONVERT(NVARCHAR(10), payitem.EditTime, 111) AS LockTime,
                        sysUser.DisplayName AS LockUserName,
                        '' AS PMUserName
                 FROM   IPP3.dbo.Finance_Pay_Item payitem WITH (NOLOCK)
                        INNER JOIN ipp3.dbo.Finance_Pay_Ex fpe WITH (NOLOCK)
                             ON  payitem.SysNo = fpe.PayItemSysNo
                        INNER JOIN ipp3.dbo.Finance_Pay pay WITH (NOLOCK)
                             ON  fpe.PaySysNo = pay.SysNo
                        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo sysUser WITH (NOLOCK)
                             ON  payitem.EditUser = sysUser.UserSysNo
                        LEFT JOIN OverseaPOASNManagement.dbo.CollectionSettlement 
                             collectionSettle WITH (NOLOCK)
                             ON  pay.OrderSysNo = collectionSettle.SysNo
                        LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList vendor 
                             WITH (NOLOCK)
                             ON  collectionSettle.MerchantSysNo = vendor.SysNo
                 WHERE  pay.OrderType = 10
                        AND payitem.[Status] = 2
             ) lockPayItem
      ORDER BY
             lockPayItem.LockTime DESC,
             lockPayItem.VendorSysNo
          
          --计算合计
      SELECT @AllLockPayAmt = SUM(lockPayItem.PayAmt)
      FROM   (
                 SELECT SUM(ISNULL(payitem.PayAmt, 0)) AS PayAmt
                 FROM   IPP3.dbo.Finance_Pay_Item payitem WITH (NOLOCK)
                        INNER JOIN ipp3.dbo.Finance_Pay_Ex fpe WITH (NOLOCK)
                             ON  payitem.SysNo = fpe.PayItemSysNo
                        INNER JOIN ipp3.dbo.Finance_Pay pay WITH (NOLOCK)
                             ON  fpe.PaySysNo = pay.SysNo
                        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo sysUser WITH (NOLOCK)
                             ON  payitem.EditUser = sysUser.UserSysNo
                        LEFT JOIN OverseaPOASNManagement.dbo.V_PM_POPayStock po WITH (NOLOCK)
                             ON  pay.OrderSysNo = po.SysNo
                        LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList vendor 
                             WITH (NOLOCK)
                             ON  po.VendorSysNo = vendor.SysNo
                        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo pmUser WITH (NOLOCK)
                             ON  po.pmsysno = pmUser.UserSysNo
                 WHERE  pay.OrderType = 0
                        AND payitem.[Status] = 2 
                 UNION ALL
                 SELECT SUM(ISNULL(payitem.PayAmt, 0)) AS PayAmt
                 FROM   IPP3.dbo.Finance_Pay_Item payitem WITH (NOLOCK)
                        INNER JOIN ipp3.dbo.Finance_Pay_Ex fpe WITH (NOLOCK)
                             ON  payitem.SysNo = fpe.PayItemSysNo
                        INNER JOIN ipp3.dbo.Finance_Pay pay WITH (NOLOCK)
                             ON  fpe.PaySysNo = pay.SysNo
                        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo sysUser WITH (NOLOCK)
                             ON  payitem.EditUser = sysUser.UserSysNo
                        LEFT JOIN IPP3.dbo.POConsign_Settle vendorsettle WITH (NOLOCK)
                             ON  pay.OrderSysNo = vendorsettle.SysNo
                        LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList vendor 
                             WITH (NOLOCK)
                             ON  vendorsettle.VendorSysNo = vendor.SysNo
                        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo pmUser WITH (NOLOCK)
                             ON  vendorsettle.PMSysno = pmUser.UserSysNo
                 WHERE  pay.OrderType = 1
                        AND payitem.[Status] = 2 
                 UNION ALL
                 SELECT SUM(ISNULL(payitem.PayAmt, 0)) AS PayAmt
                 FROM   IPP3.dbo.Finance_Pay_Item payitem WITH (NOLOCK)
                        INNER JOIN ipp3.dbo.Finance_Pay_Ex fpe WITH (NOLOCK)
                             ON  payitem.SysNo = fpe.PayItemSysNo
                        INNER JOIN ipp3.dbo.Finance_Pay pay WITH (NOLOCK)
                             ON  fpe.PaySysNo = pay.SysNo
                        LEFT JOIN OverseaArchitecture.dbo.V_AR_UserInfo sysUser WITH (NOLOCK)
                             ON  payitem.EditUser = sysUser.UserSysNo
                        LEFT JOIN OverseaPOASNManagement.dbo.CollectionSettlement 
                             collectionSettle WITH (NOLOCK)
                             ON  pay.OrderSysNo = collectionSettle.SysNo
                        LEFT JOIN OverseaPOASNManagement.dbo.V_PM_VendorList vendor 
                             WITH (NOLOCK)
                             ON  collectionSettle.MerchantSysNo = vendor.SysNo
                 WHERE  pay.OrderType = 10
                        AND payitem.[Status] = 2
             ) lockPayItem    
		  ]]>
    </commandText>
  </dataCommand>
  <!--锁定供应商列表-->

  <!--ARWindow周报-->
  <dataCommand name="GetARWindowReport" database="OverseaInvoiceReceiptManagement" commandType="Text">
    <commandText>
      <![CDATA[          
          DECLARE @NOW datetime;
          SET @NOW = getdate();
          SELECT @CurrentDate = DATEADD(day,datediff(day,0,@NOW),0)
      
          if OBJECT_ID('tempdb..#TrackingInfoQueryTempTable_Unpayed') is null
	        create table #TrackingInfoQueryTempTable_Unpayed
	          (
		        IncomeStyle int,
	            ResponsibleUserName nvarchar(100),
                OrderSysNo int,
		        OrderType int,
		        SOAmt decimal(12,2),
		        Days int
	          )

              if OBJECT_ID('tempdb..#TrackingInfoQueryTempTable_Payed') is null
                CREATE TABLE #TrackingInfoQueryTempTable_Payed
                ( 
                     IncomeStyle int 
                    ,ResponsibleUserName nvarchar(100) 
                    ,OrderSysNo int 
                    ,OrderType int 
                    ,SOAmt decimal(12,2) 
                )

              if OBJECT_ID('tempdb..#TrackingInfoQueryTempTable_Created') is null
                create table #TrackingInfoQueryTempTable_Created
	          (
		        IncomeStyle int,
	            ResponsibleUserName nvarchar(100),
                OrderSysNo int,
		        OrderType int,
		        SOAmt decimal(12,2)
	          )

	        if OBJECT_ID('tempdb..#TEMP_Result') is not null
                drop table #TEMP_Result
              
	          INSERT INTO #TrackingInfoQueryTempTable_Unpayed
              select
                fs.IncomeStyle
                ,sot.ResponsibleUserName
                ,sot.OrderSysNo
                ,sot.OrderType
                ,fs.OrderAmt
                ,case
			        when soc.IsCombine = 1 then DATEDIFF(day,soc.MergeOutTime,@NOW) 
			        when soc.IsCombine = 0 then DATEDIFF(day,sm.OutTime,@NOW)
		         end as Days
              from OverseaInvoiceReceiptManagement.dbo.SOIncome_TrackingInfo sot with(nolock)
              left join IPP3.dbo.Finance_SOIncome fs with(nolock)
              on fs.OrderSysNo = sot.OrderSysNo
              and fs.OrderType = sot.OrderType
              left join OverseaOrderManagement.dbo.V_OM_SO_Master sm with(nolock)
              on sm.SysNo = sot.OrderSysNo
	          left join OverseaOrderManagement.dbo.V_OM_SO_CheckShipping soc with(nolock)
	          on soc.SOSysNo = sot.OrderSysNo
              where sot.OrderType = 1
              and sot.Status <> 'C' AND fs.Status = 0 
        	
	          insert into #TrackingInfoQueryTempTable_Unpayed
	          select
                2 AS IncomeStyle
                ,sot.ResponsibleUserName
                ,sot.OrderSysNo
                ,sot.OrderType
                ,fs.OrderAmt
                ,case
                  when fsb.CreateTime is null then DATEDIFF(day,fs.IncomeTime,@NOW)
                  else DATEDIFF(day,fsb.CreateTime,@NOW) 
                 end as Days
              from OverseaInvoiceReceiptManagement.dbo.SOIncome_TrackingInfo sot with(nolock)
              left join IPP3.dbo.Finance_SOIncome fs with(nolock)
              on fs.OrderSysNo = sot.OrderSysNo
              and fs.OrderType = sot.OrderType
              left join IPP3.dbo.Finance_SOIncome_BankInfo fsb with(nolock)
              on fsb.OrderSysNo = sot.OrderSysNo
              and fsb.OrderType = sot.OrderType
              left join OverseaOrderManagement.dbo.V_OM_SO_Master sm with(nolock)
              on sm.SysNo = sot.OrderSysNo
              where sot.OrderType <> 1
              and sot.Status <> 'C' AND fs.Status = 0 

	          insert into #TrackingInfoQueryTempTable_Payed
              select
                case
                  when sot.OrderType = 1 then fs.IncomeStyle
                  else 2
                end as IncomeStyle
                ,sot.ResponsibleUserName
                ,sot.OrderSysNo
                ,sot.OrderType
                ,fs.OrderAmt
              from OverseaInvoiceReceiptManagement.dbo.SOIncome_TrackingInfo sot with(nolock)
              left join IPP3.dbo.Finance_SOIncome fs with(nolock)
              on fs.OrderSysNo = sot.OrderSysNo
              and fs.OrderType = sot.OrderType
              where sot.Status = 'C' AND fs.Status in (0,1)
              and sot.EditDate > DATEADD(day,-7,@CurrentDate)
              and sot.EditDate < @CurrentDate

	        insert into #TrackingInfoQueryTempTable_Created
	          select 
                case
                  when sot.OrderType = 1 then fs.IncomeStyle
                  else 2
                end as IncomeStyle
                ,sot.ResponsibleUserName
                ,sot.OrderSysNo
                ,sot.OrderType
                ,fs.OrderAmt   
              from OverseaInvoiceReceiptManagement.dbo.SOIncome_TrackingInfo sot with(nolock)
              left join IPP3.dbo.Finance_SOIncome fs with(nolock)
              on fs.OrderSysNo = sot.OrderSysNo
              and fs.OrderType = sot.OrderType
              where sot.InDate > DATEADD(day,-7,@CurrentDate)
              and sot.InDate < @CurrentDate
              AND fs.Status in (0,1)

              select
                case IncomeStyle
                  when 0 then '货到付款'
                  when 1 then '款到发货'                  
		              when 2 then '退款异常'
                  else '-'
                End AS PayType,
                users.ResponsibleUsername,
                (select COUNT(1) 
                 from #TrackingInfoQueryTempTable_Unpayed
                   where IncomeStyle = Temp.IncomeStyle		 
                   and ResponsibleUserName = Temp.ResponsibleUserName
                ) as 'UnpayedTotal',
                isnull((select SUM(SOAmt) 
                 from #TrackingInfoQueryTempTable_Unpayed
                   where [Days] >= 0 and [days] <= 30
                 and IncomeStyle = Temp.IncomeStyle
                   and ResponsibleUserName = Temp.ResponsibleUserName
                ),0) as '0_30',
                isnull((select SUM(SOAmt) 
                 from #TrackingInfoQueryTempTable_Unpayed
                   where [Days] > 30 and [days] <= 60
                 and IncomeStyle = Temp.IncomeStyle
                   and ResponsibleUserName = Temp.ResponsibleUserName
                ),0) as '31_60',
                isnull((select SUM(SOAmt) 
                 from #TrackingInfoQueryTempTable_Unpayed
                   where [Days] > 60 and [days] <= 90
                 and IncomeStyle = Temp.IncomeStyle
                   and ResponsibleUserName = Temp.ResponsibleUserName
                ),0) as '61_90',
                isnull((select SUM(SOAmt) 
                 from #TrackingInfoQueryTempTable_Unpayed
                   where [Days] > 90 and [days] <= 120
                 and IncomeStyle = Temp.IncomeStyle
                   and ResponsibleUserName = Temp.ResponsibleUserName
                ),0) as '91_120',
		            isnull((select SUM(SOAmt) 
                 from #TrackingInfoQueryTempTable_Unpayed
                   where [Days] > 120 and [days] <= 180
                 and IncomeStyle = Temp.IncomeStyle
                   and ResponsibleUserName = Temp.ResponsibleUserName
                ),0) as '121_180',
                isnull((select SUM(SOAmt)
                 from #TrackingInfoQueryTempTable_Unpayed
                   where [Days] > 180
                 and IncomeStyle = Temp.IncomeStyle
                   and ResponsibleUserName = Temp.ResponsibleUserName
                ),0) as '181',
		           (SELECT 
                     COUNT(1) 
                 FROM #TrackingInfoQueryTempTable_Created 
                 WHERE 
                     IncomeStyle = Temp.IncomeStyle 
                     AND ResponsibleUserName = Temp.ResponsibleUserName 
              
               ) as CreatedCount,
                isnull((SELECT 
                     SUM(SOAmt) 
                 FROM #TrackingInfoQueryTempTable_Created 
                 WHERE 
                     IncomeStyle = Temp.IncomeStyle 
                     AND ResponsibleUserName = Temp.ResponsibleUserName 
              
               ),0) as CreatedAmt,
               (SELECT 
                     COUNT(1) 
                 FROM #TrackingInfoQueryTempTable_Payed 
                 WHERE 
                     IncomeStyle = Temp.IncomeStyle 
                     AND ResponsibleUserName = Temp.ResponsibleUserName 
              
               ) as SolvedCount,
               isnull((SELECT 
                     SUM(SOAmt) 
                 FROM #TrackingInfoQueryTempTable_Payed 
                 WHERE 
                     IncomeStyle = Temp.IncomeStyle 
                     AND ResponsibleUserName = Temp.ResponsibleUserName 
              
               ),0) as SolvedAmt
	          INTO #TEMP_Result
              from
	          (
		          SELECT 
                    DISTINCT ResponsibleUserName 
                FROM OverseaInvoiceReceiptManagement.dbo.SOIncome_ResponsibleUser WITH(NOLOCK)
                
              union
              
              select 
	                  DISTINCT sot.ResponsibleUserName
              from OverseaInvoiceReceiptManagement.dbo.SOIncome_TrackingInfo sot with(nolock)
             ) as users
              left join (
                SELECT 
                    IncomeStyle 
                   ,ResponsibleUserName 
                FROM #TrackingInfoQueryTempTable_Unpayed 
                GROUP BY IncomeStyle,ResponsibleUserName 

		        union

		        SELECT 
                    IncomeStyle 
                   ,ResponsibleUserName 
                FROM #TrackingInfoQueryTempTable_Payed 
                GROUP BY IncomeStyle,ResponsibleUserName
                
            union
                
                SELECT 
                    IncomeStyle 
                   ,ResponsibleUserName 
                FROM #TrackingInfoQueryTempTable_Created 
                GROUP BY IncomeStyle,ResponsibleUserName 
             ) as Temp
             on users.ResponsibleUserName = Temp.ResponsibleUserName
              order by IncomeStyle desc,users.ResponsibleUserName

	         SELECT * FROM #TEMP_Result

	          SELECT
		         @Total_0 = SUM([0_30]),
		         @Total_31 =SUM([31_60]),
		         @Total_61 = SUM([61_90]),
		         @Total_91 = SUM([91_120]),
		         @Total_121 = SUM([121_180]),
		         @Total_181 = SUM([181]),
		         @Total_CreatedCount = SUM(CreatedCount),
		         @Total_CreatedAmt = SUM(CreatedAmt),
		         @Total_SolvedCount = SUM(SolvedCount),
		         @Total_SolvedAmt = SUM(SolvedAmt)
            FROM #TEMP_Result

	          if OBJECT_ID('tempdb..#TEMP_Result') is not null
                drop table #TEMP_Result

              if OBJECT_ID('tempdb..#TrackingInfoQueryTempTable_Unpayed') is not null
                drop table #TrackingInfoQueryTempTable_Unpayed

              if OBJECT_ID('tempdb..#TrackingInfoQueryTempTable_Payed') is not null
                drop table #TrackingInfoQueryTempTable_Payed

              if OBJECT_ID('tempdb..#TrackingInfoQueryTempTable_Created') is not null
                drop table #TrackingInfoQueryTempTable_Created
		  ]]>
    </commandText>
  </dataCommand>
  <!--ARWindow周报-->

  <!--系统发积分异常-->
  <dataCommand name="Invoice_Sendpoint" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
          --系统发积分异常
          SELECT 
            po.CustomerSysNo,
            po.Point,
            po.ObtainType,
            po.InDate,
            po.InUser,
            po.ExpireDate,
            pm.SysAccount AS PM_SysAccount,
            po.SysAccount AS PO_SysAccount
          FROM OverseaInvoiceReceiptManagement.dbo.PointMapping_SysAccount pm WITH(NOLOCK)
          INNER JOIN OverseaInvoiceReceiptManagement.dbo.Point_Obtain po WITH(NOLOCK)
             ON pm.PointType=po.ObtainType
          INNER JOIN IPP3.dbo.Customer_Extend D
             ON PO.CustomerSysNo=D.CustomerSysno
          WHERE pm.SysAccount IS NOT NULL AND po.SysAccount IS NULL AND pm.[Status]='A' AND D.IsSystemUser<>1 ORDER BY po.InDate DESC
		  ]]>
    </commandText>
  </dataCommand>
  <!--系统发积分异常-->
  <!--过期未关闭EIMS单据监控-->
  <dataCommand name="EIMS_OverdueNotCloseInvoice" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
          --过期未关闭EIMS单据监控
          SELECT
	          im.InvoiceNumber,
	          im.AssignedCode,
	          im.InvoiceDate,
	          im.DueDate,
	          irs.BeginDate,
	          irs.EndDate,
	          im.InvoiceAmount,
	          im.ReceivedAmount,
	          im.InvoiceAmount - im.ReceivedAmount As LeftAmt
          FROM EIMS.dbo.EIMSInvoiceInfo im WITH(NOLOCK)
          LEFT JOIN EIMS.dbo.EIMSInvoiceRebateScheme irs WITH(NOLOCK)
          ON im.InvoiceNumber = irs.InvoiceNumber
          WHERE im.Status = 'O'
          AND im.InvoiceDate < GETDATE()
          AND im.InvoiceAmount <> im.ReceivedAmount
		  ]]>
    </commandText>
  </dataCommand>
  <!--过期未关闭EIMS单据监控-->

  <!--SAP未响应数据监控-->
  <dataCommand name="Inovice_SAPNoResposeDate" database="SAP" commandType="Text">
    <commandText>
      <![CDATA[
          --SAP未响应数据监控
          SELECT
            TransactionType,
            TransactionID,
            P_STATUS,
            P_TIME
          FROM sap.dbo.Sap_BapiAccDocument_DocHeader WITH(NOLOCK)
          WHERE P_STATUS = 'X' AND DATEDIFF(D,P_TIME,GETDATE()) > 1
		  ]]>
    </commandText>
  </dataCommand>
  <!--SAP未响应数据监控-->

  <!--采购在途数量监控-->
  <dataCommand name="PO_PurchaseQty" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
          --采购在途数量监控
          SELECT 
	           l.ProductSysNo
	          ,L.stocksysno  
	          ,a.PurchaseQty  AS SuccessPurchaseQty
	          ,a.Quantity  
	          ,l.PurchaseQty  AS ErrorPurchaseQty
	          ,isnull(a.PurchaseQty,0)-isnull(a.Quantity,0) RightQty         
          FROM IPP3.dbo.Inventory_Stock l WITH(NOLOCK)  
          LEFT JOIN (
	          SELECT 
		          a.ProductSysNo
		          ,b.StockSysNo
		          ,SUM(a.PurchaseQty) AS PurchaseQty
		          ,SUM(a.Quantity) AS Quantity  
	          FROM   IPP3.dbo.PO_Item a WITH(NOLOCK)  
	          INNER JOIN IPP3.dbo.PO_Master b WITH(NOLOCK)  
	             ON  a.POSysNo = b.SysNo AND b.[Status] IN (3,6)
	          WHERE  b.POType <>1   
	          GROUP BY a.ProductSysNo,b.StockSysNo  
          ) a  
          ON  l.ProductSysNo = a.ProductSysNo  
            AND l.StockSysNo = A.stocksysno  
          WHERE isnull(a.PurchaseQty,0)-isnull(a.Quantity,0) <> l.PurchaseQty
		  ]]>
    </commandText>
  </dataCommand>
  <!--采购在途数量监控-->

  <!--EIMS已关闭IPP未作废单据的监控-->
  <dataCommand name="EIMS_ClosedInvoiceButIPPNotAbandon" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
        --查询EIMS已经手动关闭，但IPP未支付的单据（现金、帐扣、票扣）   
        SELECT ei.InvoiceNumber
        ,ei.AssignedCode
        ,ei.ReceiveType
        ,ei.[Status]
        ,ei.InvoiceAmount
        ,ei.ReceivedAmount
        ,ei.CloseAmount
        ,ei.CloseUser
        ,ei.CloseDate
        ,fpi.SysNo as PayItemSysNo
        ,fpi.OrderSysNo
        ,fpi.OrderType
        ,fpi.PayAmt
        ,isnull(fpi.PayTime,'') as PayTime
        ,fpi.[Status] as PayStatus
        FROM EIMS.dbo.EIMSInvoiceInfo ei WITH(NOLOCK)
        INNER JOIN ipp3.dbo.Finance_Pay_Item fpi WITH(NOLOCK)
        ON ei.InvoiceNumber = fpi.OrderSysNo AND fpi.OrderType IN (6,7,8)
        WHERE ei.[Status]='M' AND fpi.[Status] = 0

        UNION ALL

        --EIMS手动关闭后,IPP已支付的单据
        SELECT ei.InvoiceNumber
        ,ei.AssignedCode
        ,ei.ReceiveType
        ,ei.[Status]
        ,ei.InvoiceAmount
        ,ei.ReceivedAmount
        ,ei.CloseAmount
        ,ei.CloseUser
        ,ei.CloseDate
        ,fpi.SysNo as PayItemSysNo
        ,fpi.OrderSysNo
        ,fpi.OrderType
        ,fpi.PayAmt
        ,isnull(fpi.PayTime,'') as PayTime
        ,fpi.[Status] as PayStatus
        FROM EIMS.dbo.EIMSInvoiceInfo ei WITH(NOLOCK)
        INNER JOIN ipp3.dbo.Finance_Pay_Item fpi WITH(NOLOCK)
        ON ei.InvoiceNumber = fpi.OrderSysNo AND fpi.OrderType IN (6,7,8)
        WHERE ei.[Status]='M' AND fpi.[Status] = 1
        AND  fpi.PayTime > ei.CloseDate
        AND ei.InvoiceAmount<>ei.ReceivedAmount+ei.CloseAmount

		  ]]>
    </commandText>
  </dataCommand>
  <!--EIMS已关闭IPP未作废单据的监控-->

  <!--代销结算单SettleID为空监控-->
  <dataCommand name="PO_POConsign_SettleNull" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT SettleID ,SettleTime
        FROM IPP3.dbo.POConsign_Settle  WITH(NOLOCK)
        WHERE SettleID IS NULL OR SettleID = ''
		  ]]>
    </commandText>
  </dataCommand>
  <!--代销结算单SettleID为空监控-->

  <!--采购单批号商品异常监控-->
  <dataCommand name="PO_BatchProduct" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT POSysNo 
        FROM IPP3.dbo.PO_Item pi1 WITH(NOLOCK)
        INNER JOIN IPP3.dbo.Product_Ex pe WITH(nolock)
        ON pi1.ProductSysNo=pe.PreviousProductSysNo AND pe.IsBatch='Y'
        WHERE pi1.BatchInfo='' OR pi1.BatchInfo IS NULL
		  ]]>
    </commandText>
  </dataCommand>
  <!--采购单批号商品异常监控-->

  <!--代销商品有财务库存异常监控-->
  <dataCommand name="PO_ConsignQtyProduct" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT TOP 10 
            s.ProductSysNo,ProductID,productName 
           ,s.AccountQty 
           ,s.ConsignQty 
        FROM ipp3.dbo.Inventory_Stock s WITH(NOLOCK) 
        INNER JOIN ipp3.dbo.Product p WITH(NOLOCK) 
            ON s.ProductSysNo = p.SysNo 
        WHERE 
            p.IsConsign = 1 
            AND s.AccountQty>0
		  ]]>
    </commandText>
  </dataCommand>
  <!--代销商品有财务库存异常监控-->

  <!--代销转财务新方案-新旧数据比对监控-->
  <dataCommand name="PO_ConsignCompareLog" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
        --按天比对
        DECLARE @CompareDate VARCHAR(10),@CompareDateEnd VARCHAR(10)
        SET @CompareDate = '2011-09-01'
        SET @CompareDateEnd = CONVERT(varchar(10),GETDATE(),121)

        --汇总
        SELECT a.CompareDate,
        SUM(NewLogCount) AS NewLogCount,
        SUM(OldLogCount) AS OldLogCount,
        SUM(A.newQuantity) AS NewQuantity,
        SUM(A.oldQuantity) AS OldQuantity,
        SUM(NewSumCost) AS NewSumCost,
        SUM(oldSumCost) AS OldSumCost,
        SUM(newConsignAmt) AS newConsignAmt,
        SUM(oldConsignAmt) AS oldConsignAmt,
        SUM(NewLogCount)-SUM(OldLogCount) as DiffRowNum,
        SUM(newQuantity)-SUM(oldQuantity) AS DiffQuantity,
        SUM(newConsignAmt)-SUM(oldConsignAmt) AS DiffConsignAmt
        FROM 
        (
	        --新Log记录数
	        select convert(varchar(10),newConsign.indate,121) as CompareDate,
	        COUNT(1) AS NewLogCount,0 AS OldLogCount,
	        SUM(newConsign.Quantity* newConsign.CreateCost) AS NewSumCost,0 AS oldSumCost,
	        SUM(newConsign.Quantity) AS newQuantity,0 AS oldQuantity,
	        SUM(newConsign.SalePrice*newConsign.Quantity) AS newConsignAmt,0 AS oldConsignAmt
	        FROM OverseaPOASNManagement.[dbo].CosignAcctLog newConsign WITH(NOLOCK) 
	        where newConsign.indate>=@CompareDate 
	         and newConsign.indate< @CompareDateEnd 
	        GROUP BY convert(varchar(10),newConsign.indate,121)
	        UNION ALL
	        --旧Log记录数
	        select convert(varchar(10),oldConsign.CreateTime,121) as CompareDate,
	        0,COUNT(1) AS OldLogCount,
	        0,SUM(oldConsign.Quantity* oldConsign.CreateCost) AS oldSumCost,
	        0,SUM(oldConsign.Quantity) AS oldQuantity,
	        0,SUM(oldConsign.RetailPrice * oldconsign.Quantity) oldConsignAmt	
	        FROM ipp3.[dbo].POConsign_ToAccLog oldConsign WITH(NOLOCK)
	        WHERE oldConsign.CreateTime>=@CompareDate  
	         and oldConsign.CreateTime < @CompareDateEnd
	        GROUP BY convert(varchar(10),oldConsign.CreateTime,121)
        ) A
        GROUP BY a.CompareDate
        ORDER BY A.CompareDate DESC
		  ]]>
    </commandText>
  </dataCommand>
  <!--代销转财务新方案-新旧数据比对监控-->

  <!--第三方同步异常订单监控-->
  <dataCommand name="Order_ThridPartErrorSO" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
       SELECT TOP 500 
       smp.OrderID
      ,smp.TYPE
      ,smp.SOSysNo
      ,smp.CreateResult
      ,smp.StatusSyncResult
      ,smp.Memo
      ,smp.InDate
 FROM OverseaOrderManagement.dbo.ThridPart_SOMapping smp WITH(nolock)
 where (smp.CreateResult='F' or smp.StatusSyncResult='F')
 and smp.InDate>'2012-7-9'
    ORDER BY smp.InDate DESC
		  ]]>
    </commandText>
  </dataCommand>
  <!--第三方同步异常订单监控-->

  <!--团购订单异常监控-->
  <dataCommand name="Order_GroupBuySOError" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
      SELECT TOP 100
      sie.SysNo
      ,sie.SOSysNo
      ,sie.SettlementStatus
      ,sie.ProductSysNo
      ,sie.ReferenceSysNo
      ,sie.Type
      ,sie.InDate
      ,sie.EditDate
      ,sie.InUser
      FROM OverseaOrderManagement.dbo.SO_Item_Extension sie WITH(nolock)
      LEFT JOIN ipp3.dbo.SO_CheckShipping sc WITH(nolock)
      ON sie.SOSysNo=sc.SOSysNo
      LEFT JOIN ipp3.dbo.SO_Master sm WITH(nolock)
      ON sie.SOSysNo=sm.SysNo
      WHERE sm.Status=0 AND (sie.SettlementStatus='F' OR sc.SettlementStatus='F') 
       
      union all

      SELECT TOP 100 
      sie.SysNo
      ,sie.SOSysNo
      ,sie.SettlementStatus
      ,sie.ProductSysNo
      ,sie.ReferenceSysNo
      ,sie.Type
      ,sie.InDate
      ,sie.EditDate
      ,sie.InUser
      FROM OverseaOrderManagement.dbo.SO_Item_Extension sie WITH(nolock)
      LEFT JOIN ipp3.dbo.SO_CheckShipping sc WITH(nolock)
      ON sie.SOSysNo=sc.SOSysNo
      LEFT JOIN ipp3.dbo.SO_Master sm WITH(nolock)
      ON sie.SOSysNo=sm.SysNo
      left join [OverseaContentManagement].[dbo].[ProductGroupBuying] g WITH(NOLOCK)
      on sie.ReferenceSysNo=g.SysNo and sie.Type='G'
      WHERE sm.Status=0 and sie.SettlementStatus is null 
      and g.IsSettlement='Y' 
    
    
    
    
		  ]]>
    </commandText>
  </dataCommand>
  <!--团购订单异常监控-->

  <!--已出库订单无发票异常监控-->
  <dataCommand name="Invoice_OutOrderWithoutInvoiceError" database="OverseaPOASNManagement" commandType="Text">
    <commandText>
      <![CDATA[
     SELECT top 100 so.SysNo,
       so.Status,
       so.OutTime,
       so.SOAmt,
       ssm.InvoiceAmt,
       ssm.WareHouseNumber       
      FROM   ipp3.dbo.So_master so WITH(NOLOCK)
             LEFT JOIN OverseaOrderManagement.dbo.Sub_SO_Master ssm WITH(NOLOCK)
                  ON  so.SysNo = ssm.SOSysNo
             LEFT JOIN overseaInvoiceReceiptManagement.dbo.Invoice_Master im WITH(NOLOCK)
                  ON  so.SySno = im.SONumber
                  AND im.type = 'SO'
      WHERE  so.[Status] = 4
             AND im.SONumber IS NULL
             AND OutTime < DATEADD(DAY, -1, GETDATE())
      ORDER BY so.OutTime desc
		  ]]>
    </commandText>
  </dataCommand>
  <!--已出库订单无发票异常监控-->
</dataOperations>
