<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <dataCommand name="QueryThirdPartInventoryRecords" database="OverseaInventoryManagement" commandType="Text">
        <commandText>
            <![CDATA[
SELECT COUNT(1) FROM OverseaContentManagement.dbo.Product3Party_Mapping ppm WITH(NOLOCK)
WHERE ppm.PartnerType=@PartnerType AND ppm.Status='A' AND ppm.CompanyCode=@CompanyCode
        ]]>
        </commandText>
        <parameters>
            <param name="@PartnerType" dbType="String" />
            <param name="@CompanyCode" dbType="String" />
        </parameters>
    </dataCommand>
        
    <dataCommand name="QueryThirdPartInventory" database="OverseaInventoryManagement" commandType="Text">
        <commandText>
            <![CDATA[
CREATE TABLE #inventory_qty_result
(
	ProductMappingSysno INT ,
	ProductSysNo INT ,
	PartnerType CHAR(1) ,
	SKU NVARCHAR(50) ,
	SynInventoryQty INT ,--上一次同步完成后的第三方的库存
	InventoryAlamQty INT,--当前的库存预警值
	InventoryOnlineQty INT,--当前newegg的库存
	OldInventoryAlamQty INT, --上一次同步完成后的库存预警值
	Status CHAR(1),
	ProductID NVARCHAR(20)
)
DECLARE @ProductSysNo Int,
		@InventoryQty Int,
		@ProductMappingSysNo Int,
		@Temp_Qty Int,
		@RowNumber Int
DECLARE cursor_inventory CURSOR
FOR 
SELECT TOP(#PageSize#) * FROM (
SELECT ppm.Sysno, ppm.ProductSysno,(isnull( pps.InventoryQty,0) + isnull(pps.InventoryAlarmQty,0)) AS InventoryQty,
	(ROW_NUMBER() OVER(ORDER BY ppm.Sysno DESC)) AS RowNumber
FROM OverseaContentManagement.dbo.Product3Party_Mapping ppm WITH(NOLOCk)
LEFT JOIN OverseaContentManagement.dbo.Product3Party_SynProduct pps WITH(NOLOCk)
ON ppm.Sysno = pps.ProductMappingSysno AND ppm.CompanyCode = pps.CompanyCode
WHERE ppm.PartnerType=#PartnerType# AND ppm.CompanyCode=#CompanyCode# 
) Result
WHERE RowNumber>#StartRowNumber#
FOR READ ONLY
OPEN cursor_inventory
FETCH NEXT FROM cursor_inventory INTO @ProductMappingSysNo,@ProductSysNo,@InventoryQty,@RowNumber
WHILE @@FETCH_STATUS = 0
BEGIN
	SELECT @Temp_Qty=SUM(isnull(its.AvailableQty,0)+isnull(its.ConsignQty,0)) 
		FROM IPP3.dbo.Inventory_Stock its WITH(NOLOCk)
		WHERE ProductSysNo=@ProductSysNo AND StockSysNo IN (#WarehourseNumber#)
    IF(@Temp_Qty<0)
        SET @Temp_Qty = 0;        
	INSERT INTO #inventory_qty_result 
	SELECT @ProductMappingSysno,
			ppm.ProductSysno,
			ppm.PartnerType,
			ppm.SynProductID,
			ppsp.InventoryQty,
			ppsp.InventoryAlarmQty,
			@Temp_Qty,
			(isnull(ppsp.InventoryAlarmQty,0) - (isnull(ppsp.InventoryAlarmQty,0)+isnull(ppsp.InventoryQty,1)-isnull(pps.InventoryQty,1))),
			ppm.Status,
			ppm.ProductID
	    FROM OverseaContentManagement.dbo.Product3Party_Mapping ppm WITH(NOLOCK)
	    LEFT JOIN OverseaContentManagement.dbo.Product3Party_SynProduct ppsp WITH(NOLOCK)
	    ON ppm.Sysno = ppsp.ProductMappingSysno AND ppm.CompanyCode=ppsp.CompanyCode
	    LEFT JOIN OverseaContentManagement.dbo.Product3Party_SynInventory pps WITH(NOLOCK)
	    ON ppm.Sysno = pps.ProductMappingSysno AND ppm.CompanyCode=pps.CompanyCode
	    WHERE ppm.Sysno = @ProductMappingSysno

    FETCH NEXT FROM cursor_inventory INTO @ProductMappingSysNo,@ProductSysNo,@InventoryQty,@RowNumber
END
CLOSE cursor_inventory
DEALLOCATE cursor_inventory
SELECT * FROM #inventory_qty_result WITH(NOLOCK)
DROP TABLE #inventory_qty_result
        ]]>
        </commandText>
        <parameters>
        </parameters>
    </dataCommand>
    
    
   
</dataOperations>