<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dataCommand name="QueryPMMPIEntityInfoByAllPM" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[      
                   
             /*----------------------------------------------------- 
              所有的统计:     必须基于商品状态必须为show 的商品 
                  热销品：   月销量>=10的商品即为热销品。 
                    缺货：   某商品的onlineqty<=0  
                            且采购在途库存+已创建的采购单数量<=0  
                            且移仓在途库存<=0  
              ----------------------------------------------------------*/
   
                          DECLARE  @AllOutOfStockProductCount INT --定义所有缺货商品数量 
              SET      @AllOutOfStockProductCount=0;   
              DECLARE  @HotSaleOutOfStockProductCount INT --定义热销品中缺货商品数量 
              SET      @HotSaleOutOfStockProductCount=0;   
              DECLARE  @HotSaleProductCount INT --定义热销商品数量 
              SET      @HotSaleProductCount=0;   
              DECLARE  @AllProductCount INT --定义全部商品数量 
              SET      @AllProductCount=0;   
              DECLARE  @HotSaleProductShortageRate  DECIMAL(10,2) --定义热销商品缺货率 
              SET @HotSaleProductShortageRate=0;   
              DECLARE  @AllProductShortageRate  DECIMAL(10,2) --定义所有商品缺货率 
              SET @AllProductShortageRate=0;                                
              DECLARE  @PMName varchar(100) --PM 名称
              DECLARE @startCount INT
              DECLARE @Sysno INT 
              DECLARE @allCount INT 
              DECLARE @Category2NameColl NVARCHAR(100)
              DECLARE @startCountName INT
              DECLARE @allCountName INT
              SET @startCount = 0
              SET @startCountName = 0
              DECLARE @CategoryDisplayColl NVARCHAR(100)
              DECLARE @startCountDisName INT
              DECLARE @allCountDisName INT
              SET @startCountDisName = 0
               DECLARE @SysNo1 INT 
               DECLARE @SysName1  NVARCHAR(50) 
               DECLARE @SysNo2  INT
               DECLARE @SysNoC2 INT
               DECLARE @Name  NVARCHAR(50) 
              --定义产品编号表 
              DECLARE @PMMonitoringPerformance TABLE  
              (  
                TransactionID  INT PRIMARY KEY IDENTITY(1,1)  
               ,ProductSysNo   INT          --  商品编号 
               ,PMUserSysNo    INT          --  PM编号 
               ,DisplayName    NVARCHAR(50)  --  PM名称    
               ,Category1SysNo INT          --  1级类别编号   
               ,Category1Name  NVARCHAR(50) --  1级类别名称   
               ,Category2SysNo INT          --  2级类别编号   
               ,Category2Name  NVARCHAR(50) --  2级类别名称  
               ,PMSysNo        INT          -- C2类对应的PM  
               ,IsOutOfStock   INT          --  是否断货 1：断货0：非断货  
               ,IsHotSale      INT          --  是否热销 1 :热销0：非热销   
               ,HotSaleProductShortageRate  DECIMAL(10,2)  --热效率
               ,AllProductShortageRate  DECIMAL(10,2)  --缺货率
              ) 
                DECLARE @Category2Name TABLE  -- C2表
              (  
               TransactionID  INT IDENTITY(1,1) ,
                Category2Name  NVARCHAR(50) --  2级类别名称 
               ,DisplayName  NVARCHAR(100) 
              )              
              INSERT INTO @PMMonitoringPerformance 
              (  
                ProductSysNo 
               ,PMUserSysNo     
               ,DisplayName     
               ,Category1SysNo  
               ,Category1Name  
               ,Category2SysNo  
               ,Category2Name  
               ,PMSysNo          -- C2类对应的PM
               ,IsOutOfStock    
               ,IsHotSale   
               ,HotSaleProductShortageRate 
               ,AllProductShortageRate  
              ) 
              SELECT      
                   p.SysNo AS ProductSysNo 
                  ,P.PMUserSysNo   
                  ,u.DisplayName      
                  ,vc.Category1SysNo 
                  ,vc.Category1Name 
                  ,vc.Category2SysNo 
                  ,vc.Category2Name 
                  ,pdc.PMSysNo  -- C2类对应的PM
                  ,IsOutOfStock=CASE  
                                       WHEN      (inv.AvailableQty+inv.ConsignQty+inv.VirtualQty-inv.InvalidQty)<=0 
                                             AND (ISNULL(INVT.PurchaseQty,0)+( SELECT  ISNULL(COUNT(pom.SysNo),0) 
                                                          FROM  IPP3.dbo.PO_Master      pom WITH(NOLOCK)  
                                                          INNER JOIN  IPP3.dbo.PO_Item  poi WITH(NOLOCK) 
                                                            ON  pom.SysNo=poi.POSysNo 
                                                          WHERE pom.Status=0  AND poi.ProductSysNo=p.SysNo))<=0                            
                                             AND  inv.ShiftQty<=0 
                                        THEN   1 
                                        ELSE   0                       
                              END  
                  ,IsHotSale =CASE 
                                       WHEN  ISNULL(ibm.m1,0)>=10 THEN 1 
                                       ELSE  0 
                                 END 
                                   ,'0','0'
                   FROM 
                       (  
                        SELECT DISTINCT *  FROM  ( 
													SELECT C2SysNo,PMSysNo,brandSysNo FROM  OverseaContentManagement.dbo.ProductDepartment_Category inner_pdc WITH(NOLOCK)                       
												 ) T
                       )  pdc                                                  
                  INNER JOIN  OverseaContentManagement.dbo.V_CM_CategoryInfo vc WITH(NOLOCK) 
                          ON  pdc.C2SysNo= vc.Category2SysNo  AND  vc.Category1Status<>-1      
                  INNER  JOIN IPP3.dbo.Product p WITH(NOLOCK)     
                          ON  p.C3SysNo= vc.Category3SysNo  AND (p.brandSysNo=pdc.brandSysNo OR  pdc.brandSysNo IS NULL)         
                  INNER JOIN  OverseaArchitecture.[dbo].[V_AR_UserInfo] u WITH(NOLOCK) 
                          ON  u.UserSysNo = pdc.PMSysNo     
                  LEFT  JOIN  IPP3.dbo.Inventory inv WITH(NOLOCK) 
                          ON  p.SysNo=inv.ProductSysNo   
                  LEFT JOIN  OverseaInventoryManagement.dbo.InventoryBalance_Master ibm WITH(NOLOCK) 
                         ON  p.SysNo=ibm.ProductSysNo 
                  LEFT JOIN (-- 总采购在途数量
                                SELECT 
                                     productsysno 
                                    ,SUM(PurchaseQty) AS PurchaseQty
                                FROM(
                                        SELECT 
                                            productsysno 
                                           ,PurchaseQty-Quantity AS PurchaseQty
                                           ,CASE 
                                                WHEN PO_Master.itstocksysno IS NULL THEN(CASE 
                                                        WHEN Po_Master.StockSysNo=59 THEN 51 
                                                        ELSE Po_Master.StockSysNo 
                                                     END) 
                                                WHEN PO_Master.itstocksysno=59 THEN 51 
                                                ELSE PO_Master.itstocksysno 
                                            END AS StockSysNo 
                                            FROM ipp3.dbo.Po_Master WITH(NOLOCK) 
                                            INNER JOIN ipp3.dbo.PO_Item WITH(NOLOCK) 
                                            ON Po_Master.SysNo=PO_Item.POSysNo 
                                            AND Po_Master.status IN (1,2,3,-2,5,6) --初始、等待分摊、待入库、已退回、待审核、部分出库
                                      ) AS TP
                                      GROUP BY productsysno
                           ) AS INVT 
                        ON  p.SysNo=INVT.ProductSysNo             
                  WHERE p.Status=1  AND pdc.PMSysNo IN(#PMSysNoList#) ;
                                    
                 INSERT INTO @Category2Name(Category2Name,DisplayName)  SELECT DISTINCT *  FROM ( SELECT Category2Name,DisplayName FROM   @PMMonitoringPerformance) TVB;
                 SET @startCount = 0
                 SELECT @allCount=COUNT(*) FROM [CodeCenter].[dbo].[UF_String_Split]('#PMSysNoList#',',') --PM编号
                 SELECT @allCountName=COUNT(*) FROM @Category2Name
                 WHILE @startCount <@allCount
                 BEGIN
                  SELECT TOP 1 @Sysno=[Value] FROM [CodeCenter].[dbo].[UF_String_Split]('#PMSysNoList#',',')
                  WHERE SysNo NOT IN (SELECT TOP (@startCount)  SysNo FROM [CodeCenter].[dbo].[UF_String_Split]('#PMSysNoList#',','))
                  
                  WHILE(@startCountName<@allCountName)
                  BEGIN
                  SELECT TOP 1 @Category2NameColl =Category2Name, @Name= DisplayName FROM @Category2Name 
                  WHERE TransactionID NOT IN (SELECT TOP(@startCountName) TransactionID FROM @Category2Name)
                  
                  SELECT   @AllOutOfStockProductCount = COUNT(TransactionID)--'对应所有缺货商品数量' 
                  FROM     @PMMonitoringPerformance PMMPI 
                  WHERE    PMMPI.PMSysNo = @Sysno AND Category2Name =@Category2NameColl AND  IsOutOfStock=1 ;  
                  SELECT   @HotSaleOutOfStockProductCount = COUNT(TransactionID) -- '对应热销品中缺货商品数量' 
                  FROM     @PMMonitoringPerformance PMMPI 
                  WHERE    PMMPI.PMSysNo =@Sysno AND Category2Name =@Category2NameColl AND  IsOutOfStock=1 AND  IsHotSale=1; 
                  SELECT   @HotSaleProductCount = COUNT(TransactionID) -- '对应热销商品数量' 
                  FROM     @PMMonitoringPerformance PMMPI 
                  WHERE    PMMPI.PMSysNo =@Sysno AND Category2Name =@Category2NameColl AND  IsHotSale=1;  
                  SELECT   @AllProductCount = COUNT(TransactionID) -- ' 对应商品数量' 
                  FROM     @PMMonitoringPerformance PMMPI 
                  WHERE    PMMPI.PMSysNo =@Sysno AND Category2Name =@Category2NameColl ;    
                  IF(@HotSaleProductCount<>0) 
                  BEGIN 
                    SET @HotSaleProductShortageRate=(@HotSaleOutOfStockProductCount*1.0/@HotSaleProductCount)*100 
                  END  
                  IF(@AllProductCount<>0) 
                  BEGIN 
                    SET @AllProductShortageRate=(@AllOutOfStockProductCount*1.0/@AllProductCount)*100
                  END  
                  SELECT 
                       @SysNo1=Category1SysNo  
                      ,@SysName1 = Category1Name  
                      ,@SysNo2 =Category2SysNo   
                      ,@SysNoC2=PMSysNo          -- C2类对应的PM 
                      FROM @PMMonitoringPerformance WHERE PMSysNo= @Sysno AND Category2Name =@Category2NameColl  AND  DisplayName=@Name;
                 IF @SysNo1<>0
                 BEGIN
                 INSERT INTO OverseaInventoryManagement.dbo.Inventory_PMMonitoringPerformance
                              (PMUserSysNo,PMName,Category1SysNo,Category1Name,Category2SysNo,Category2Name,PMSysNo,HotSaleProductShortageRate,AllProductShortageRate)
                       VALUES(@Sysno,@Name,@SysNo1,@SysName1,@SysNo2,@Category2NameColl,@SysNoC2,@HotSaleProductShortageRate,@AllProductShortageRate)          
                  END
                  SET @startCountName = @startCountName+1  --循环
                  SET @HotSaleProductShortageRate =0 
                  SET @AllProductShortageRate = 0
                  END
                  SET @startCountName =0
                  SET @startCount = @startCount+1
                 END 
       ]]>
    </commandText>
    <parameters>
      <param name="@Category1SysNo" dbType="Int32" />
      <param name="@Category2SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="QueryPMMPSysNo" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[      
   SELECT 
 B.[UserSysNo]   AS [PMSysNumber] 
,B.[LoginName]   AS [PMLoginName] 
,B.[DisplayName] AS [PMDisplayName] 
,A.[Status]      AS [PMStatus] 
,A.[PMGroupSysNo] AS [PMGroupSysNo]
FROM OverseaContentManagement.[dbo].[V_PM_PMList] A WITH(NOLOCK) 
INNER JOIN OverseaArchitecture.[dbo].[V_AR_UserInfo] B WITH(NOLOCK) 
ON A.[PMUserSysNo] = B.[UserSysNo] 
WHERE     A.[Status]=0 
AND A.[CompanyCode] = @CompanyCode
ORDER BY [PMDisplayName] ASC 
       ]]>
    </commandText>
    <parameters>
      <param name="@CompanyCode" dbType="Int32" />
    </parameters>
  </dataCommand>
  
  
  <dataCommand name="DeleteProduct" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[      
        DELETE PP
        FROM OverseaInventoryManagement.dbo.Inventory_PMMonitoringPerformance PP
        LEFT JOIN ipp3.dbo.Product p WITH(nolock)
        ON pp.ProductSysNo=p.SysNo
        WHERE p.SysNo IS NULL OR p.Status!=1 
       ]]>
    </commandText>
  </dataCommand>
  
  
  
  
  <dataCommand name="TrucateInventory_PMMonitoringPerformance" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[      
       TRUNCATE  TABLE [OverseaInventoryManagement].[dbo].[Inventory_PMMonitoringPerformance]
       TRUNCATE  TABLE [OverseaInventoryManagement].[dbo].[Inventory_PMMIP_Log]
       ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="UpdateProductNew" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[   
      
      UPDATE TOP(7000) ip
      SET PMUserSysNo=p.PMUserSysNo
	      ,PMName=u.DisplayName
	      ,IsOutOfStock=CASE 
				      WHEN isnull(i.OnlineQty,0)<=0 
				         AND isnull(i.PurchaseQty,0)+isnull(po.PurchaseQty,0)<=0
				         AND isnull(i.ShiftInQty,0)<=0
				      THEN  1
				      ELSE  0 END
	      ,Losing=CASE 
				      WHEN isnull(i.OnlineQty,0)<=0 
				         AND isnull(i.PurchaseQty,0)+isnull(po.PurchaseQty,0)<=0
				         AND isnull(i.ShiftInQty,0)<=0
				      THEN  Losing+isnull(pp.CurrentPrice,0)*isnull(pa.AVGDailySalesNew,0)
			      ELSE  0 END
	      ,OutOfStockDays=datepart(dw,getdate())
      FROM OverseaInventoryManagement.dbo.Inventory_PMMonitoringPerformance ip
      INNER JOIN ipp3.dbo.Product p WITH(nolock)
      ON ip.ProductSysNo=p.SysNo AND p.Status=1 AND p.ProductType=0
      INNER JOIN OverseaArchitecture.[dbo].[V_AR_UserInfo] u WITH(NOLOCK) 
      ON p.PMUserSysNo=u.UserSysNo
      INNER JOIN ipp3.dbo.Product_Price pp WITH(nolock)
      ON ip.ProductSysNo=pp.ProductSysNo
      LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Inventory_Stock i WITH(nolock)
      ON ip.ProductSysNo=i.ItemSysNumber AND i.WarehouseSysNumber=ip.StockSysNo
      LEFT JOIN 
      (
        SELECT 
            pit.ProductSysNo
            ,isnull(pm.ITStockSysNo,pm.StockSysNo) AS Stock
            ,sum(pit.PurchaseQty) AS PurchaseQty
        FROM ipp3.dbo.PO_Item pit WITH(nolock)
        INNER JOIN ipp3.dbo.PO_Master pm WITH(nolock)
        ON pit.POSysNo=pm.SysNo AND pm.Status IN (1,5)
        GROUP BY pit.ProductSysNo,isnull(pm.ITStockSysNo,pm.StockSysNo)
      ) po
      ON i.ItemSysNumber=po.ProductSysNo AND i.WarehouseSysNumber=po.Stock
      LEFT JOIN OverseaInventoryManagement.dbo.Inventory_Product_AVGDailySales pa WITH(nolock)
      ON i.ItemSysNumber=pa.ProductSysNo AND i.WarehouseSysNumber=pa.StockSysNo
      WHERE OutOfStockDays!=datepart(dw,getdate()) OR OutOfStockDays IS NULL
       ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="UpdateProduct" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[   
      
      DECLARE @TotalLosing decimal
      DEClARE @OutOfStockDays int
      
      INSERT INTO [OverseaInventoryManagement].[dbo].[Inventory_PMMIP_Log]
      (
        [ProductSysNo] 
	      ,[StockSysNo]
	      ,[ShortageDate] 
	      ,[Losing]
      
      )
      VALUES
      (
        @ProductSysNo
        ,@StockSysNo
        ,GetDate()
        ,@Losing
      
      )
      
      
      SELECT 
          @OutOfStockDays=COUNT(1)
         ,@TotalLosing=SUM(isnull(Losing,0))
      FROM [OverseaInventoryManagement].[dbo].[Inventory_PMMIP_Log] WITH(NOLOCK) 
      WHERE 
          ProductSysNo=@ProductSysNo 
          AND StockSysNo=@StockSysNo 
          AND dateadd(d,30,ShortageDate) > GETDATE() 
      GROUP BY ProductSysNo,StockSysNo
      
      
      
      
      UPDATE TOP (1) [OverseaInventoryManagement].[dbo].[Inventory_PMMonitoringPerformance]
      SET IsOutOfStock=@IsOutOfStock
	      ,PMUserSysNo=@PMUserSysNo
	      ,PMName=@PMName
	      ,OutOfStockDays=@OutOfStockDays
	      ,Losing=@TotalLosing
	      ,Memo=Memo+'&&'+cast(getdate() AS nvarchar(50))
      WHERE ProductSysNo=@ProductSysNo
      AND StockSysNo=@StockSysNo
      
      
      

       ]]>
    </commandText>
    <parameters>
      <param name="@PMUserSysNo" dbType="Int32" />
      <param name="@PMName" dbType="String" />
      <param name="@Losing" dbType="Decimal" />
      <param name="@ProductSysNo" dbType="Int32" />
      <param name="@StockSysNo" dbType="Int32" />
      <param name="@IsOutOfStock" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="InitiStatus" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[      
      UPDATE [OverseaInventoryManagement].[dbo].[Inventory_PMMonitoringPerformance]
      SET IsOutOfStock=0
      WHERE IsOutOfStock=1
       ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="QueryShortageProductsNow" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[      
         SELECT 
          p.SysNo AS ProductSysNo
          ,i.WarehouseSysNumber AS StockSysNo
          ,p.PMUserSysNo
          ,u.DisplayName 
          ,pp.CurrentPrice* isnull(pa.AVGDailySalesNew,0) AS Losing
        FROM ipp3.dbo.Product p WITH(nolock)
        INNER JOIN ipp3.dbo.Product_Price pp WITH(nolock)
        ON p.SysNo=pp.ProductSysNo
        INNER JOIN OverseaArchitecture.[dbo].[V_AR_UserInfo] u WITH(NOLOCK) 
        ON p.PMUserSysNo=u.UserSysNo
        LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Inventory_Stock i WITH(nolock)
        ON p.SysNo=i.ItemSysNumber AND i.WarehouseSysNumber IN (51,52,53,54,55,59)
        LEFT JOIN 
        (
          SELECT 
	          pit.ProductSysNo
	          ,isnull(pm.ITStockSysNo,pm.StockSysNo) AS Stock
	          ,sum(pit.PurchaseQty) AS PurchaseQty
          FROM ipp3.dbo.PO_Item pit WITH(nolock)
          INNER JOIN ipp3.dbo.PO_Master pm WITH(nolock)
          ON pit.POSysNo=pm.SysNo AND pm.Status IN (1,5)
          GROUP BY pit.ProductSysNo,isnull(pm.ITStockSysNo,pm.StockSysNo)
        ) po
        ON i.ItemSysNumber=po.ProductSysNo AND i.WarehouseSysNumber=po.Stock
        LEFT JOIN OverseaInventoryManagement.dbo.Inventory_Product_AVGDailySales pa WITH(nolock)
	    ON i.ItemSysNumber=pa.ProductSysNo AND i.WarehouseSysNumber=pa.StockSysNo
        WHERE p.Status=1 AND p.ProductType=0
	    AND i.OnlineQty<=0 
	    AND isnull(i.PurchaseQty,0)+isnull(po.PurchaseQty,0)<=0
	    AND i.ShiftInQty<=0 
       ]]>
    </commandText>
  </dataCommand>


  <dataCommand name="ImportNewPMMPIProduct" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[  
      INSERT INTO [OverseaInventoryManagement].[dbo].[Inventory_PMMonitoringPerformance]
      ([ProductSysNo]
      ,[StockSysNo]
      ,[PMUserSysNo]
      ,[PMName]
      ,[Category1SysNo]
      ,[Category1Name]
      ,[Category2SysNo]
      ,[Category2Name]
      ,[Category3Sysno]
      ,[Category3Name]
      ,[IsOutOfStock]
      ,[OutOfStockDays]
      ,[Losing])
      SELECT
      p.SysNo AS ProductSysNo
      ,i.WarehouseSysNumber
      ,p.PMUserSysNo
      ,u.DisplayName
      ,c.Category1Sysno
      ,c.Category1Name
      ,c.Category2Sysno
      ,c.Category2Name
      ,c.Category3Sysno
      ,c.Category3Name
      ,CASE
      WHEN i.OnlineQty<=0
      AND isnull(i.PurchaseQty,0)+isnull(po.PurchaseQty,0)<=0
      AND i.ShiftInQty<=0
      THEN  1
      ELSE  0
      END AS IsOutOfStock
      ,0
      ,0
      FROM ipp3.dbo.Product p WITH(nolock)
      INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo c WITH(nolock)
      ON p.C3SysNo=c.Category3Sysno AND c.Category1Status!=-1
      INNER JOIN OverseaArchitecture.[dbo].[V_AR_UserInfo] u WITH(NOLOCK)
      ON p.PMUserSysNo=u.UserSysNo
      LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Inventory_Stock i WITH(nolock)
      ON p.SysNo=i.ItemSysNumber AND i.WarehouseSysNumber IN (51,52,53,54,55,59)
      LEFT JOIN OverseaInventoryManagement.dbo.Inventory_PMMonitoringPerformance pp WITH(nolock)
      ON p.SysNo=pp.ProductSysNo
      LEFT JOIN
      (
        SELECT
        pit.ProductSysNo
        ,isnull(pm.ITStockSysNo,pm.StockSysNo) AS Stock
        ,sum(pit.PurchaseQty) AS PurchaseQty
        FROM ipp3.dbo.PO_Item pit WITH(nolock)
        INNER JOIN ipp3.dbo.PO_Master pm WITH(nolock)
        ON pit.POSysNo=pm.SysNo AND pm.Status IN (1,5)
        GROUP BY pit.ProductSysNo,isnull(pm.ITStockSysNo,pm.StockSysNo)
      ) po
      ON i.ItemSysNumber=po.ProductSysNo AND i.WarehouseSysNumber=po.Stock
      WHERE pp.PMUserSysNo IS NULL AND p.Status=1 AND p.ProductType=0 AND p.PMUserSysNo IN (#PMSysNos#)

      ]]>

    </commandText>
  </dataCommand>


  <dataCommand name="ImportNewPMMPIProductNew" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[  
      
    INSERT INTO [OverseaInventoryManagement].[dbo].[Inventory_PMMonitoringPerformance]
       ([ProductSysNo]
        ,[StockSysNo]
        ,[PMUserSysNo]
        ,[PMName]
        ,[Category1SysNo]
        ,[Category1Name]
        ,[Category2SysNo]
        ,[Category2Name]
        ,[Category3Sysno]
        ,[Category3Name]
        ,[IsOutOfStock]
        ,[Losing])
    SELECT 
      p.SysNo AS ProductSysNo
      ,st.SysNo
      ,p.PMUserSysNo
      ,u.DisplayName 
      ,c.Category1Sysno
      ,c.Category1Name
      ,c.Category2Sysno
      ,c.Category2Name
      ,c.Category3Sysno
      ,c.Category3Name
      ,CASE 
	      WHEN isnull(i.OnlineQty,0)<=0 
		       AND isnull(i.PurchaseQty,0)+isnull(po.PurchaseQty,0)<=0
		       AND isnull(i.ShiftInQty,0)<=0
		       THEN  1
	      ELSE  0
       END AS IsOutOfStock
      ,0
    FROM 
    ipp3.dbo.Product p WITH(nolock) 
    JOIN ipp3.dbo.Stock st WITH(nolock)
	  ON st.SysNo IN (51,52,53,54,55,59)
    INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo c WITH(nolock)
    ON p.C3SysNo=c.Category3Sysno AND c.Category1Status!=-1 And (c.Category1Sysno< 2089 Or c.Category1Sysno> 2104)
    INNER JOIN OverseaArchitecture.[dbo].[V_AR_UserInfo] u WITH(NOLOCK) 
    ON p.PMUserSysNo=u.UserSysNo
    LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Inventory_Stock i WITH(nolock)
    ON p.SysNo=i.ItemSysNumber AND i.WarehouseSysNumber =st.SysNo
    LEFT JOIN OverseaInventoryManagement.dbo.Inventory_PMMonitoringPerformance pp WITH(nolock)
      ON p.SysNo=pp.ProductSysNo
    LEFT JOIN 
    (
      SELECT 
	      pit.ProductSysNo
	      ,isnull(pm.ITStockSysNo,pm.StockSysNo) AS Stock
	      ,sum(pit.PurchaseQty) AS PurchaseQty
      FROM ipp3.dbo.PO_Item pit WITH(nolock)
      INNER JOIN ipp3.dbo.PO_Master pm WITH(nolock)
      ON pit.POSysNo=pm.SysNo AND pm.Status IN (1,5)
      GROUP BY pit.ProductSysNo,isnull(pm.ITStockSysNo,pm.StockSysNo)
    ) po
    ON i.ItemSysNumber=po.ProductSysNo AND i.WarehouseSysNumber=po.Stock
    WHERE pp.PMUserSysNo IS NULL and p.Status=1 AND p.ProductType=0 AND p.PMUserSysNo IN (#PMSysNos#)
      ]]>
    </commandText>
  </dataCommand>

  <dataCommand name="QueryPMMPIEntityInfoByCategoryV2" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[  
      
     INSERT INTO [OverseaInventoryManagement].[dbo].[Inventory_PMMonitoringPerformance]
       ([ProductSysNo]
        ,[StockSysNo]
        ,[PMUserSysNo]
        ,[PMName]
        ,[Category1SysNo]
        ,[Category1Name]
        ,[Category2SysNo]
        ,[Category2Name]
        ,[Category3Sysno]
        ,[Category3Name]
        ,[IsOutOfStock]
        ,[Losing])
    SELECT 
      p.SysNo AS ProductSysNo
      ,st.SysNo
      ,p.PMUserSysNo
      ,u.DisplayName 
      ,c.Category1Sysno
      ,c.Category1Name
      ,c.Category2Sysno
      ,c.Category2Name
      ,c.Category3Sysno
      ,c.Category3Name
      ,CASE 
	      WHEN isnull(i.OnlineQty,0)<=0 
		       AND isnull(i.PurchaseQty,0)+isnull(po.PurchaseQty,0)<=0
		       AND isnull(i.ShiftInQty,0)<=0
		       THEN  1
	      ELSE  0
       END AS IsOutOfStock
      ,0
    FROM 
    ipp3.dbo.Product p WITH(nolock) 
    JOIN ipp3.dbo.Stock st WITH(nolock)
	  ON st.SysNo IN (51,52,53,54,55,59)
    INNER JOIN OverseaContentManagement.dbo.V_CM_CategoryInfo c WITH(nolock)
    ON p.C3SysNo=c.Category3Sysno AND c.Category1Status!=-1 And (c.Category1Sysno< 2089 Or c.Category1Sysno> 2104)
    INNER JOIN OverseaArchitecture.[dbo].[V_AR_UserInfo] u WITH(NOLOCK) 
    ON p.PMUserSysNo=u.UserSysNo
    LEFT JOIN OverseaInventoryManagement.dbo.V_INM_Inventory_Stock i WITH(nolock)
    ON p.SysNo=i.ItemSysNumber AND i.WarehouseSysNumber =st.SysNo
    LEFT JOIN 
    (
      SELECT 
	      pit.ProductSysNo
	      ,isnull(pm.ITStockSysNo,pm.StockSysNo) AS Stock
	      ,sum(pit.PurchaseQty) AS PurchaseQty
      FROM ipp3.dbo.PO_Item pit WITH(nolock)
      INNER JOIN ipp3.dbo.PO_Master pm WITH(nolock)
      ON pit.POSysNo=pm.SysNo AND pm.Status IN (1,5)
      GROUP BY pit.ProductSysNo,isnull(pm.ITStockSysNo,pm.StockSysNo)
    ) po
    ON i.ItemSysNumber=po.ProductSysNo AND i.WarehouseSysNumber=po.Stock
    WHERE p.Status=1 AND p.ProductType=0 AND p.PMUserSysNo IN (#PMSysNos#)
    
      ]]>
    </commandText>
  </dataCommand>
  
  
  <dataCommand name="QueryPMMPIEntityInfoByCategory" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[      
                /*----------------------------------------------------- 
              所有的统计:     必须基于商品状态必须为show 的商品 
                  热销品：   月销量>=10的商品即为热销品。 
                    缺货：   某商品的onlineqty<=0  
                            且采购在途库存+已创建的采购单数量<=0  
                            且移仓在途库存<=0  
              ----------------------------------------------------------*/   
              DECLARE  @AllOutOfStockProductCount INT --定义所有缺货商品数量 
              SET      @AllOutOfStockProductCount=0;
              DECLARE  @HotSaleOutOfStockProductCount INT --定义热销品中缺货商品数量 
              SET      @HotSaleOutOfStockProductCount=0;  
              DECLARE  @HotSaleProductCount INT --定义热销商品数量 
              SET      @HotSaleProductCount=0;
              DECLARE  @AllProductCount INT --定义全部商品数量 
              SET      @AllProductCount=0; 
              DECLARE  @HotSaleProductShortageRate DECIMAL(10,2) --定义热销商品缺货率 
              SET @HotSaleProductShortageRate=0;
              DECLARE  @AllProductShortageRate DECIMAL(10,2) --定义所有商品缺货率 
              SET @AllProductShortageRate=0;
              DECLARE @startCount INT
              DECLARE @Sysno INT   
              DECLARE @allCountName INT
              DECLARE @SysNo1 INT 
              DECLARE @SysName1  NVARCHAR(100) 
              DECLARE @SysNo2  INT
              DECLARE @SysNoC2 INT 
              DECLARE @PMName  NVARCHAR(100) 
              DECLARE @PMUserSysNo INT
              DECLARE @Category2Name NVARCHAR(100)
              DECLARE @Name   NVARCHAR(100) 
         
              --定义产品编号表 
              DECLARE @PMMonitoringPerformance TABLE  
              (  
                TransactionID  INT PRIMARY KEY IDENTITY(1,1)  
               ,ProductSysNo   INT          --  商品编号 
               ,PMUserSysNo    INT          --  PM编号 
               ,DisplayName    NVARCHAR(50)  --  PM名称    
               ,Category1SysNo INT          --  1级类别编号   
               ,Category1Name  NVARCHAR(50) --  1级类别名称   
               ,Category2SysNo INT          --  2级类别编号   
               ,Category2Name  NVARCHAR(50) --  2级类别名称   
               ,PMSysNo        INT          -- C2类对应的PM  
               ,IsOutOfStock   INT          --  是否断货 1：断货0：非断货  
               ,IsHotSale      INT          --  是否热销 1 :热销0：非热销 
               ,HotSaleProductShortageRate  DECIMAL(10,2)  --热效率
               ,AllProductShortageRate  DECIMAL(10,2)  --缺货率
              )
              
               DECLARE @CategoryC2Name TABLE  -- C2表
              (  
               TransactionID  INT IDENTITY(1,1),
               Category2SysNo  INT --  2级类别编号
               ,DisplayName   NVARCHAR(100)          
              ) 
                        
              INSERT INTO @PMMonitoringPerformance 
              (  
                ProductSysNo 
               ,PMUserSysNo     
               ,DisplayName     
               ,Category1SysNo  
               ,Category1Name  
               ,Category2SysNo  
               ,Category2Name  
               ,PMSysNo          -- C2类对应的PM
               ,IsOutOfStock    
               ,IsHotSale  
                ,HotSaleProductShortageRate  --热效率
               ,AllProductShortageRate  --缺货率 
              )
 
              SELECT      
                   p.SysNo AS ProductSysNo 
                  ,P.PMUserSysNo   
                  ,u.DisplayName      
                  ,vc.Category1SysNo 
                  ,vc.Category1Name 
                  ,vc.Category2SysNo 
                  ,vc.Category2Name 
                  ,pdc.PMSysNo  -- C2类对应的PM
                  ,IsOutOfStock=CASE  
                                       WHEN      (inv.AvailableQty+inv.ConsignQty+inv.VirtualQty-inv.InvalidQty)<=0 
                                             AND (ISNULL(INVT.PurchaseQty,0)+( SELECT  ISNULL(COUNT(pom.SysNo),0) 
                                                          FROM  IPP3.dbo.PO_Master      pom WITH(NOLOCK)  
                                                          INNER JOIN  IPP3.dbo.PO_Item  poi WITH(NOLOCK) 
                                                            ON  pom.SysNo=poi.POSysNo 
                                                          WHERE pom.Status=0  AND poi.ProductSysNo=p.SysNo))<=0                            
                                             AND  inv.ShiftQty<=0 
                                        THEN   1 
                                        ELSE   0                       
                              END  
                  ,IsHotSale =CASE 
                                       WHEN  ISNULL(ibm.m1,0)>=10 THEN 1 
                                       ELSE  0 
                                 END
                                 ,'0','0'
                  FROM 
                       (  
                        SELECT DISTINCT *  FROM  ( 
													SELECT C2SysNo,PMSysNo,brandSysNo FROM  OverseaContentManagement.dbo.ProductDepartment_Category inner_pdc WITH(NOLOCK)                       
												 ) T
                       )  pdc                                                  
                  INNER JOIN  OverseaContentManagement.dbo.V_CM_CategoryInfo vc WITH(NOLOCK) 
                          ON  pdc.C2SysNo= vc.Category2SysNo  AND  vc.Category1Status<>-1      
                  INNER  JOIN IPP3.dbo.Product p WITH(NOLOCK)     
                          ON  p.C3SysNo= vc.Category3SysNo  AND (p.brandSysNo=pdc.brandSysNo OR  pdc.brandSysNo IS NULL)             
                  INNER JOIN  OverseaArchitecture.[dbo].[V_AR_UserInfo] u WITH(NOLOCK) 
                          ON  u.UserSysNo = pdc.PMSysNo     
                  LEFT  JOIN  IPP3.dbo.Inventory inv WITH(NOLOCK) 
                          ON  p.SysNo=inv.ProductSysNo   
                  LEFT JOIN  OverseaInventoryManagement.dbo.InventoryBalance_Master ibm WITH(NOLOCK) 
                         ON  p.SysNo=ibm.ProductSysNo                
                  LEFT JOIN (-- 总采购在途数量
                                SELECT 
                                     productsysno 
                                    ,SUM(PurchaseQty) AS PurchaseQty
                                FROM(
                                        SELECT 
                                            productsysno 
                                           ,PurchaseQty-Quantity AS PurchaseQty
                                           ,CASE 
                                                WHEN PO_Master.itstocksysno IS NULL THEN(CASE 
                                                        WHEN Po_Master.StockSysNo=59 THEN 51 
                                                        ELSE Po_Master.StockSysNo 
                                                     END) 
                                                WHEN PO_Master.itstocksysno=59 THEN 51 
                                                ELSE PO_Master.itstocksysno 
                                            END AS StockSysNo 
                                            FROM ipp3.dbo.Po_Master WITH(NOLOCK) 
                                            INNER JOIN ipp3.dbo.PO_Item WITH(NOLOCK) 
                                            ON Po_Master.SysNo=PO_Item.POSysNo 
                                            AND Po_Master.status IN (1,2,3,-2,5,6) --初始、等待分摊、待入库、已退回、待审核、部分出库
                                      ) AS TP
                                      GROUP BY productsysno
                           ) AS INVT 
                        ON  p.SysNo=INVT.ProductSysNo             
                  WHERE p.Status=1  #TempCondition# ;               
                 INSERT INTO @CategoryC2Name(Category2SysNo,DisplayName)  SELECT DISTINCT *  FROM ( SELECT Category2SysNo,DisplayName FROM   @PMMonitoringPerformance) TVB;
                 SET @startCount = 0
                 SELECT @allCountName=COUNT(*) FROM @CategoryC2Name
                 WHILE(@startCount <@allCountName)
                 BEGIN
                  SELECT TOP 1 @Sysno =Category2SysNo,@Name= DisplayName FROM @CategoryC2Name 
                  WHERE TransactionID NOT IN (SELECT TOP(@startCount) TransactionID FROM @CategoryC2Name)
                  
                                                  
                        SELECT   @AllOutOfStockProductCount = COUNT(TransactionID) --'PM对应的所有缺货商品数量' 
                        FROM     @PMMonitoringPerformance PMMPI 
                        WHERE    Category1SysNo=@Category1SysNo AND Category2SysNo =@Sysno AND  IsOutOfStock=1 ; 
                        SELECT   @HotSaleOutOfStockProductCount = COUNT(TransactionID)-- 'PM对应的热销商品的缺货数量' 
                        FROM     @PMMonitoringPerformance PMMPI 
                        WHERE    Category1SysNo=@Category1SysNo AND Category2SysNo =@Sysno AND  IsOutOfStock=1 AND  IsHotSale=1; 
                        SELECT   @HotSaleProductCount = COUNT(TransactionID)  -- 'PM对应的热销商品数量' 
                        FROM     @PMMonitoringPerformance PMMPI 
                        WHERE    Category1SysNo=@Category1SysNo  AND Category2SysNo =@Sysno  AND  IsHotSale=1;   
                        SELECT   @AllProductCount = COUNT(TransactionID)   -- 'PM对应的所有商品数量' 
                        FROM     @PMMonitoringPerformance PMMPI 
                        WHERE    Category1SysNo=@Category1SysNo AND Category2SysNo =@Sysno;                                    
                        IF(@HotSaleProductCount<>0) 
                        BEGIN 
                          SET @HotSaleProductShortageRate=((@HotSaleOutOfStockProductCount*1.0)/@HotSaleProductCount)*100; 
                        END  
                          IF(@AllProductCount<>0) 
                        BEGIN 
                          SET @AllProductShortageRate=((@AllOutOfStockProductCount*1.0)/@AllProductCount)*100;  
                        END 
      				  
				                SELECT
                             @SysNo1=Category1SysNo  
                            ,@SysName1 = Category1Name  
                            ,@SysNoC2=PMSysNo          -- C2类对应的PM                      
                            ,@Category2Name = Category2Name
                            FROM @PMMonitoringPerformance WHERE Category1SysNo= @Category1SysNo AND Category2SysNo =@Sysno AND  DisplayName=@Name;
                            INSERT INTO OverseaInventoryManagement.dbo.Inventory_PMMonitoringPerformance
                                    (PMUserSysNo,PMName,Category1SysNo,Category1Name,Category2SysNo,Category2Name,PMSysNo,HotSaleProductShortageRate,AllProductShortageRate,IsSearchByCategory)
                             VALUES(@PMUserSysNo,@Name,@Category1SysNo,@SysName1,@Sysno,@Category2Name,@SysNoC2,@HotSaleProductShortageRate,@AllProductShortageRate,'1')
                                   
                  SET @HotSaleProductShortageRate =0 
                  SET @AllProductShortageRate = 0
                  SET @startCount =@startCount +1                 
                  END

       ]]>
    </commandText>
    <parameters>
      <param name="@Category1SysNo" dbType="Int32" />
      <param name="@Category2SysNo" dbType="Int32" />
    </parameters>
  </dataCommand>

  <dataCommand name="QueryCategory1SysNo" database="OverseaInventoryManagement" commandType="Text">
    <commandText>
      <![CDATA[      
       SELECT  DISTINCT(Category1SysNo) FROM  OverseaContentManagement.dbo.V_CM_CategoryInfo vc WITH(NOLOCK)  WHERE CompanyCode = @CompanyCode
       ]]>
    </commandText>
    <parameters>
      <param name="@CompanyCode" dbType="Int32" />
    </parameters>
  </dataCommand>
</dataOperations>