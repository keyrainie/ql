<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <dataCommand name="QueryThirdPartInventory" database="OverseaInventoryManagement" commandType="Text">
        <commandText>
            <![CDATA[
CREATE TABLE #inventory_qty_result
(
	ProductMappingSysno INT ,
	ProductSysNo INT ,
	PartnerType CHAR(1) ,
	SKU NVARCHAR(50) ,
	SynInventoryQty INT ,--上一次同步完成后的第三方的库存
	InventoryAlamQty INT,--当前的库存预警值
	InventoryOnlineQty INT,--当前newegg的库存
	OldInventoryAlamQty INT --上一次同步完成后的库存预警值
)
DECLARE @ProductSysNo Int,
		@InventoryQty Int,
		@ProductMappingSysNo Int,
		@Temp_Qty Int,
    @FlagNullZero  INT--库存为NULL 标志位

DECLARE cursor_inventory CURSOR
FOR 
SELECT ppm.Sysno, ppm.ProductSysno,(isnull( pps.InventoryQty,0) + isnull(pps.InventoryAlarmQty,0)) AS InventoryQty,pps.InventoryQty AS FlagNullZero
FROM OverseaContentManagement.dbo.Product3Party_Mapping ppm WITH(NOLOCk)
LEFT JOIN OverseaContentManagement.dbo.Product3Party_SynProduct pps WITH(NOLOCk)
ON ppm.Sysno = pps.ProductMappingSysno AND ppm.CompanyCode = pps.CompanyCode
WHERE ppm.PartnerType=#PartnerType# AND ppm.Status='A' AND ppm.CompanyCode=#CompanyCode#
FOR READ ONLY
OPEN cursor_inventory
FETCH NEXT FROM cursor_inventory INTO @ProductMappingSysNo,@ProductSysNo,@InventoryQty,@FlagNullZero
WHILE @@FETCH_STATUS = 0
BEGIN
	SELECT @Temp_Qty=SUM(isnull(its.AvailableQty,0)+isnull(its.ConsignQty,0)-isnull(its.InvalidQty,0)) 
		FROM IPP3.dbo.Inventory_Stock its WITH(NOLOCK)
		WHERE ProductSysNo=@ProductSysNo AND StockSysNo IN (#WarehouseNumber#)
	IF(@Temp_Qty < 0)
	    SET @Temp_Qty = 0;
	IF(@Temp_Qty<>@InventoryQty OR @FlagNullZero IS NULL)--库存不等 或者未同步过 都需要 进行同步
	BEGIN
		INSERT INTO #inventory_qty_result 
		SELECT @ProductMappingSysno,
				ppm.ProductSysno,
				ppm.PartnerType,
				ppm.SynProductID,
				ppsp.InventoryQty,
				ppsp.InventoryAlarmQty,
				@Temp_Qty,
				(isnull(ppsp.InventoryAlarmQty,0) - (isnull(ppsp.InventoryAlarmQty,0)+isnull(ppsp.InventoryQty,0)-isnull(pps.InventoryQty,0)))
		 FROM OverseaContentManagement.dbo.Product3Party_Mapping ppm WITH(NOLOCK)
		LEFT JOIN OverseaContentManagement.dbo.Product3Party_SynProduct ppsp WITH(NOLOCK)
		ON ppm.Sysno = ppsp.ProductMappingSysno AND ppm.CompanyCode=ppsp.CompanyCode
		LEFT JOIN OverseaContentManagement.dbo.Product3Party_SynInventory pps WITH(NOLOCK)
		ON ppm.Sysno = pps.ProductMappingSysno AND ppm.CompanyCode=pps.CompanyCode
		WHERE ppm.Sysno = @ProductMappingSysno
	END 
	FETCH NEXT FROM cursor_inventory INTO @ProductMappingSysNo,@ProductSysNo,@InventoryQty,@FlagNullZero
END
CLOSE cursor_inventory
DEALLOCATE cursor_inventory
SELECT * FROM #inventory_qty_result WITH(NOLOCK)
DROP TABLE #inventory_qty_result
        ]]>
        </commandText>
        <parameters>
        </parameters>
    </dataCommand>
    
    
    <dataCommand name="ModifyThirdPartInventory" database="OverseaInventoryManagement" commandType="Text">
        <commandText>
            <![CDATA[
UPDATE OverseaContentManagement.dbo.Product3Party_SynInventory
SET
	InventoryQty = InventoryQty + @InventoryQty,
	EditDate = getdate(),
	EditUser = @EditUser
WHERE 
	ProductMappingSysno = @ProductMappingSysno
	AND CompanyCode=@CompanyCode

UPDATE OverseaContentManagement.dbo.Product3Party_SynProduct
SET
	InventoryQty = InventoryQty + @SynInventoryQty,	
	--InventoryAlamQty = @InventoryAlamQty,
	EditDate = getdate(),
	EditUser = @EditUser
WHERE 
	CompanyCode = @CompanyCode 
	AND ProductMappingSysno=@ProductMappingSysno
        ]]>
        </commandText>
        <parameters>
            <param name="@InventoryQty" dbType="Int32" />
            <param name="@ProductMappingSysno" dbType="Int32" />
            <param name="@SynInventoryQty" dbType="Int32" />
            <!--<param name="@InventoryAlamQty" dbType="Int32" />-->
            <param name="@EditUser" dbType="String" />
            <param name="@CompanyCode" dbType="String" />
        </parameters>
    </dataCommand>

    <dataCommand name="InsertThirdPartInventory" database="OverseaInventoryManagement" commandType="Text">
        <commandText>
            <![CDATA[
INSERT INTO OverseaContentManagement.dbo.Product3Party_SynInventory
(
	ProductMappingSysno,
	WarehouseNumber,
	WarehouseName,
	InventoryQty,
	CompanyCode,
	StoreCompanyCode,
	LanguageCode,
	InDate,
	InUser
)
VALUES
(
	@ProductMappingSysno,
	@WarehouseNumber,
	@WarehouseName,
	@InventoryQty,
	@CompanyCode,
	@StoreCompanyCode,
	'zh-CN',
	getdate(),
	@InUser
)

SELECT TOP 1 @ProductDescription = ProductName FROM IPP3.dbo.Product WITH(NOLOCK) WHERE SysNo IN (
SELECT TOP 1 ProductSysNo FROM OverseaContentManagement.dbo.Product3Party_Mapping ppm WITH(NOLOCK)
WHERE Sysno=@ProductMappingSysno
)
INSERT INTO OverseaContentManagement.dbo.Product3Party_SynProduct
(
	ProductMappingSysno,
	ProductDescription,
	InventoryQty,
	PurchasePrice,
	CompanyCode,
	StoreCompanyCode,
	LanguageCode,
	InDate,
	InUser,
	InventoryAlarmQty
)
VALUES
(
	@ProductMappingSysno,
	@ProductDescription,
	@SynInventoryQty,
	@PurchasePrice,
	@CompanyCode,
	@StoreCompanyCode,
	'zh-CN',
	getdate(),
	@InUser,	
	@InventoryAlarmQty
)
        ]]>
        </commandText>
        <parameters>
            <param name="@ProductMappingSysno" dbType="Int32" />
            <param name="@WarehouseNumber" dbType="Int32" />
            <param name="@WarehouseName" dbType="String" />
            <param name="@InventoryQty" dbType="Int32" />
            <param name="@ProductDescription" dbType="String" />            
            <param name="@SynInventoryQty" dbType="Int32" />
            <param name="@PurchasePrice" dbType="Int32" />
            <param name="@CompanyCode" dbType="String" />
            <param name="@StoreCompanyCode" dbType="String" />
            <param name="@InUser" dbType="String" />
            <param name="@InventoryAlarmQty" dbType="Int32" />
        </parameters>
    </dataCommand>
</dataOperations>