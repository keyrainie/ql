<?xml version="1.0" encoding="utf-8" ?>
<dataOperations xmlns="http://oversea.newegg.com/DataOperation"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<dataCommand name="GetAuditedVirtualRequest" database="OverseaInventoryManagement" commandType="Text">
		<commandText>
			<![CDATA[
			DECLARE @StartTime datetime
			SET @StartTime=getdate()

			SELECT [SysNo]
				,[ProductSysNo]
				,[StockSysNo]
				,[VirtualQty]
			    ,[CreateTime]
			    ,[CreateUserSysNo]
			    ,[PMRequestNote]
				,[AuditNote]
				,[AuditTime]
				,[AuditUserSysNo]
				,[Status]
				,[VirtualType]
				,[CompanyCode]
				,[LanguageCode]
				,[StoreCompanyCode]
				,[StartTime]
				,[EndTime]
			FROM [IPP3].[dbo].[St_Virtual_Request] WITH(NOLOCK)
			WHERE
				StartTime<@StartTime 
				AND
				[Status]=1
				AND 
				CompanyCode=@CompanyCode
        ]]>
		</commandText>
		<parameters>		
			<param name="@CompanyCode" dbType="String" />
		</parameters>
	</dataCommand>

	<dataCommand name="CloseRequestWithOutAdjustInventory" database="OverseaInventoryManagement" commandType="Text">
		<commandText>
			<![CDATA[
			DECLARE @OldRequsetSysNo int
			DECLARE @VirtualQty int
			DECLARE @LanguageCode char(5)
			DECLARE @StoreCompanyCode varchar(50)
			
			SELECT TOP 1 
				@OldRequsetSysNo=SysNo
				,@LanguageCode=LanguageCode
				,@StoreCompanyCode=StoreCompanyCode
				FROM [IPP3].[dbo].[St_Virtual_Request] WITH(NOLOCK)
				WHERE
					ProductSysNo=@ProductSysNo
					AND
					StockSysNo=@StockSysNo
					AND
					[Status]=4
					AND 
					CompanyCode=@CompanyCode
				
			IF(@OldRequsetSysNo is not null)		
			Begin
				UPDATE top (1) [IPP3].[dbo].[St_Virtual_Request]
				SET [Status]=3
				WHERE SysNo=@OldRequsetSysNo AND [Status]=4

				if(@@rowcount=0)
				Begin
					raiserror('The Status has changed',11,1)
					return
				End
			
			
				SElECT TOP 1 
					@VirtualQty=VirtualQty
				FROM IPP3.dbo.Inventory_Stock WITH(NOLOCK)
				WHERE 
					ProductSysNo=@ProductSysNo
					And
					StockSysNo=@StockSysNo
					And
					CompanyCode=@CompanyCode
				
				INSERT INTO [OverseaInventoryManagement].[dbo].[VirtualRequest_Action_Log]
				   ([VirtualRequestSysNo]
				   ,[ActionType]
				   ,[VirtualRequestStatus]
				   ,[AdjustVirtualQty]
				   ,[VirtualQtyFrom]
				   ,[VirtualQty]
				   ,[Memo]
				   ,[InDate]
				   ,[InUser]
				   ,[EditDate]
				   ,[EditUser]
				   ,[CompanyCode]
				   ,[LanguageCode]
				   ,[StoreCompanyCode])
				VALUES
				   (@OldRequsetSysNo
				   ,'C'
				   ,3
				   ,0
				   ,@VirtualQty
				   ,0
				   ,''
				   ,getdate()
				   ,'IPPSystem_Job'
				   ,NULL
				   ,NULL
				   ,@CompanyCode
				   ,@LanguageCode
				   ,@StoreCompanyCode)
	
			End
			
        ]]>
		</commandText>
		<parameters>
			<param name="@ProductSysNo" dbType="String" />
			<param name="@StockSysNo" dbType="Int32" />
			<param name="@CompanyCode" dbType="String" />
		</parameters>
	</dataCommand>

	<dataCommand name="CoverClosingRequest" database="OverseaInventoryManagement" commandType="Text">
		<commandText>
			<![CDATA[
			--准备数据
			DECLARE @ProductSysNo int      --商品SysNo
			DECLARE @StockSysNo int        --仓库
			DECLARE @RequestVirtualQty int --申请虚库数量
			DECLARE @VirtualQty int        --实际虚库数量
			DECLARE @IsConsign int      --是否代销
			DECLARE @ConsignQty int        --代销数量
			DECLARE @AvailableQty int      --可用库存
			DECLARE @AdjustVirtualQty int

			SElECT TOP 1 
					@ProductSysNo=v.ProductSysNo
					,@StockSysNo=v.StockSysNo
					,@RequestVirtualQty=v.VirtualQty
					,@VirtualQty=i.VirtualQty
					,@IsConsign=p.IsConsign
					,@ConsignQty=i.ConsignQty
					,@AvailableQty=i.AvailableQty
					,@AdjustVirtualQty=v.VirtualQty
			FROM IPP3.dbo.St_Virtual_Request v WITH(NOLOCK)
					INNER JOIN IPP3.dbo.Inventory_Stock i WITH(NOLOCK)
						ON v.ProductSysNo=i.ProductSysNo AND v.StockSysNo=i.StockSysNo
					INNER JOIN OverseaContentManagement.dbo.V_CM_ItemBasicInfo p WITH(NOLOCK)
						ON v.ProductSysNo=p.SysNo
			WHERE 
					v.SysNo=@NewRequsetSysNo
					And
					v.Status=1
					And
					v.CompanyCode=@CompanyCode

			if(@ProductSysNo is null)
			Begin
				raiserror('The virtual request Status has changed or has no product',11,1)
				return
			End

			if(@AvailableQty+@ConsignQty<0)
			Begin
				if(@AvailableQty+@ConsignQty+@AdjustVirtualQty<0)
				Begin
					raiserror('cant not set virtualQty less than effective virtualQty',11,1)
					return
				End
			End


			UPDATE top (1) [IPP3].[dbo].[St_Virtual_Request]
			SET [Status]=2
			WHERE SysNo=@NewRequsetSysNo AND [Status]=1

			if(@@rowcount=0)
			Begin
				raiserror('The Status has changed',11,1)
				return
			End

			EXEC dbo.UP_UpdateVritualQty 'Run',@NewRequsetSysNo,@IsConsign,@ProductSysNo,@AdjustVirtualQty,@StockSysNo,@CompanyCode,@StoreCompanyCode

			UPDATE top (1) [IPP3].[dbo].[St_Virtual_Request]
			SET [Status]=3
			WHERE SysNo=@OldRequsetSysNo AND [Status]=4

			if(@@rowcount=0)
			Begin
				raiserror('The Status has changed',11,1)
				return
			End
        ]]>
		</commandText>
		<parameters>
			<param name="@NewRequsetSysNo" dbType="Int32" />
			<param name="@OldRequsetSysNo" dbType="Int32" />
			<param name="@CompanyCode" dbType="String" />
			<param name="@StoreCompanyCode" dbType="String" />
		</parameters>
	</dataCommand>
	
	
	<dataCommand name="LaunchVirtualRequest" database="OverseaInventoryManagement" commandType="Text">
		<commandText>
			<![CDATA[
			DECLARE @VirtualQty int        --实际虚库数量
			DECLARE @IsConsign int      --是否代销
			DECLARE @ConsignQty int        --代销数量
			DECLARE @AvailableQty int      --可用库存
			DECLARE @VirtaulQtyFrom int    --运行前虚库

			UPDATE top (1) [IPP3].[dbo].[St_Virtual_Request]
				SET [Status] = 2
			WHERE 
				SysNo=@StVirtualRequestSysNo 
				AND 
				[Status]=1

			if(@@RowCount=0)
			Begin
				Raiserror('The status has changed.',11,1)
				return
			End
			
			SET @VirtualQty=0
			SET @IsConsign=0
			SET @ConsignQty=0
			SET @AvailableQty=0
			SET @VirtaulQtyFrom=0

			SElECT TOP 1 
				@IsConsign=IsConsign
		    FROM OverseaContentManagement.dbo.V_CM_ItemBasicInfo  WITH(NOLOCK)
		    WHERE 
				SysNo=@ProductSysNo
				And
				CompanyCode=@CompanyCode

			SElECT TOP 1 
				@VirtualQty=VirtualQty
				,@ConsignQty=ConsignQty
				,@AvailableQty=AvailableQty
				,@VirtaulQtyFrom=VirtualQty
		    FROM IPP3.dbo.Inventory_Stock  WITH(NOLOCK)
		    WHERE 
				ProductSysNo=@ProductSysNo
				And
				StockSysNo=@StockSysNo
				And
				CompanyCode=@CompanyCode
				
			if(@IsConsign is null)
			Begin
				Raiserror('Have no consign information.',11,1)
				return
			End
			
			if(@AvailableQty+@ConsignQty<0)
			Begin
				if(@AvailableQty+@ConsignQty+@AdjustVirtualQty<0)
				Begin
					raiserror('cant not set virtualQty less than effective virtualQty',11,1)
					return
				End
			End

			EXEC OverseaInventoryManagement.dbo.UP_UpdateVritualQty 'Run',@StVirtualRequestSysNo,@IsConsign,@ProductSysNo,@AdjustVirtualQty,@StockSysNo,@CompanyCode,@StoreCompanyCode
			
			SElECT TOP 1 
				@VirtualQty=VirtualQty
			FROM IPP3.dbo.Inventory_Stock WITH(NOLOCK)
			WHERE 
				ProductSysNo=@ProductSysNo
				And
				StockSysNo=@StockSysNo
				And
				CompanyCode=@CompanyCode
			
			INSERT INTO [OverseaInventoryManagement].[dbo].[VirtualRequest_Action_Log]
			   ([VirtualRequestSysNo]
			   ,[ActionType]
			   ,[VirtualRequestStatus]
			   ,[AdjustVirtualQty]
			   ,[VirtualQtyFrom]
			   ,[VirtualQty]
			   ,[Memo]
			   ,[InDate]
			   ,[InUser]
			   ,[EditDate]
			   ,[EditUser]
			   ,[CompanyCode]
			   ,[LanguageCode]
			   ,[StoreCompanyCode])
			VALUES
			   (@StVirtualRequestSysNo
			   ,'R'
			   ,2
			   ,@AdjustVirtualQty
			   ,0
			   ,@VirtualQty
			   ,''
			   ,getdate()
			   ,'IPPSystem_Job'
			   ,NULL
			   ,NULL
			   ,@CompanyCode
			   ,@LanguageCode
			   ,@StoreCompanyCode)

		]]>
		</commandText>
		<parameters>
			<param name="@StVirtualRequestSysNo" dbType="Int32" />
			<param name="@ProductSysNo" dbType="Int32" />
			<param name="@AdjustVirtualQty" dbType="Int32" />
			<param name="@StockSysNo" dbType="Int32" />
			<param name="@CompanyCode" dbType="String" />
			<param name="@LanguageCode" dbType="AnsiStringFixedLength" size="5"/>
			<param name="@StoreCompanyCode" dbType="String" />
		</parameters>
	</dataCommand>

	
</dataOperations>
